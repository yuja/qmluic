import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        file: "qtabbar.cpp"
        name: "CloseButton"
        prototype: "QAbstractButton"
        exports: ["qmluic.QtWidgets/CloseButton 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QAbstractAnimation"
        prototype: "QObject"
        Enum {
            name: "Direction"
            values: ["Forward", "Backward"]
        }
        Enum {
            name: "State"
            values: ["Stopped", "Paused", "Running"]
        }
        Property { name: "state"; type: "State"; isReadonly: true }
        Property { name: "loopCount"; type: "int" }
        Property { name: "currentTime"; type: "int" }
        Property { name: "currentLoop"; type: "int"; isReadonly: true }
        Property { name: "direction"; type: "Direction" }
        Property { name: "duration"; type: "int"; isReadonly: true }
        Signal { name: "finished" }
        Signal {
            name: "stateChanged"
            Parameter { name: "newState"; type: "QAbstractAnimation::State" }
            Parameter { name: "oldState"; type: "QAbstractAnimation::State" }
        }
        Signal {
            name: "currentLoopChanged"
            Parameter { name: "currentLoop"; type: "int" }
        }
        Signal {
            name: "directionChanged"
            Parameter { type: "QAbstractAnimation::Direction" }
        }
        Method {
            name: "start"
            Parameter { name: "policy"; type: "QAbstractAnimation::DeletionPolicy" }
        }
        Method { name: "start" }
        Method { name: "pause" }
        Method { name: "resume" }
        Method {
            name: "setPaused"
            Parameter { type: "bool" }
        }
        Method { name: "stop" }
        Method {
            name: "setCurrentTime"
            Parameter { name: "msecs"; type: "int" }
        }
    }
    Component {
        file: "qabstractbutton.h"
        name: "QAbstractButton"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QAbstractButton 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "text"; revision: 0; type: "string" }
        Property { name: "icon"; revision: 0; type: "QIcon" }
        Property { name: "iconSize"; revision: 0; type: "QSize" }
        Property { name: "shortcut"; revision: 0; type: "QKeySequence" }
        Property { name: "checkable"; revision: 0; type: "bool" }
        Property { name: "checked"; revision: 0; type: "bool" }
        Property { name: "autoRepeat"; revision: 0; type: "bool" }
        Property { name: "autoExclusive"; revision: 0; type: "bool" }
        Property { name: "autoRepeatDelay"; revision: 0; type: "int" }
        Property { name: "autoRepeatInterval"; revision: 0; type: "int" }
        Property { name: "down"; revision: 0; type: "bool" }
        Signal { name: "pressed"; revision: 0 }
        Signal { name: "released"; revision: 0 }
        Signal {
            name: "clicked"
            revision: 0
            Parameter { name: "checked"; type: "bool" }
        }
        Signal { name: "clicked"; revision: 0 }
        Signal {
            name: "toggled"
            revision: 0
            Parameter { name: "checked"; type: "bool" }
        }
        Method {
            name: "setIconSize"
            revision: 0
            Parameter { name: "size"; type: "QSize" }
        }
        Method {
            name: "animateClick"
            revision: 0
            Parameter { name: "msec"; type: "int" }
        }
        Method { name: "animateClick"; revision: 0 }
        Method { name: "click"; revision: 0 }
        Method { name: "toggle"; revision: 0 }
        Method {
            name: "setChecked"
            revision: 0
            Parameter { type: "bool" }
        }
    }
    Component {
        file: "qabstractitemdelegate.h"
        name: "QAbstractItemDelegate"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QAbstractItemDelegate 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "commitData"
            revision: 0
            Parameter { name: "editor"; type: "QWidget"; isPointer: true }
        }
        Signal {
            name: "closeEditor"
            revision: 0
            Parameter { name: "editor"; type: "QWidget"; isPointer: true }
            Parameter { name: "hint"; type: "QAbstractItemDelegate::EndEditHint" }
        }
        Signal {
            name: "closeEditor"
            revision: 0
            Parameter { name: "editor"; type: "QWidget"; isPointer: true }
        }
        Signal {
            name: "sizeHintChanged"
            revision: 0
            Parameter { type: "QModelIndex" }
        }
        Method {
            name: "_q_commitDataAndCloseEditor"
            revision: 0
            Parameter { type: "QWidget"; isPointer: true }
        }
    }
    Component {
        name: "QAbstractItemModel"
        prototype: "QObject"
        Enum {
            name: "LayoutChangeHint"
            values: [
                "NoLayoutChangeHint",
                "VerticalSortHint",
                "HorizontalSortHint"
            ]
        }
        Enum {
            name: "CheckIndexOption"
            values: [
                "NoOption",
                "IndexIsValid",
                "DoNotUseParent",
                "ParentIsInvalid"
            ]
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutChanged" }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutAboutToBeChanged" }
        Signal {
            name: "rowsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal { name: "modelAboutToBeReset" }
        Signal { name: "modelReset" }
        Signal {
            name: "rowsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationRow"; type: "int" }
        }
        Signal {
            name: "rowsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "row"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationColumn"; type: "int" }
        }
        Signal {
            name: "columnsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "submit"; type: "bool" }
        Method { name: "revert" }
        Method { name: "resetInternalData" }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "sibling"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "idx"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "fetchMore"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "canFetchMore"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "flags"
            type: "Qt::ItemFlags"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
            Parameter { name: "flags"; type: "Qt::MatchFlags" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        file: "qabstractitemview.h"
        name: "QAbstractItemView"
        prototype: "QAbstractScrollArea"
        exports: ["qmluic.QtWidgets/QAbstractItemView 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "SelectionMode"
            alias: ""
            values: [
                "NoSelection",
                "SingleSelection",
                "MultiSelection",
                "ExtendedSelection",
                "ContiguousSelection"
            ]
        }
        Enum {
            name: "SelectionBehavior"
            alias: ""
            values: ["SelectItems", "SelectRows", "SelectColumns"]
        }
        Enum {
            name: "ScrollHint"
            alias: ""
            values: [
                "EnsureVisible",
                "PositionAtTop",
                "PositionAtBottom",
                "PositionAtCenter"
            ]
        }
        Enum {
            name: "EditTriggers"
            alias: "EditTrigger"
            isFlag: true
            values: [
                "NoEditTriggers",
                "CurrentChanged",
                "DoubleClicked",
                "SelectedClicked",
                "EditKeyPressed",
                "AnyKeyPressed",
                "AllEditTriggers"
            ]
        }
        Enum {
            name: "ScrollMode"
            alias: ""
            values: ["ScrollPerItem", "ScrollPerPixel"]
        }
        Enum {
            name: "DragDropMode"
            alias: ""
            values: [
                "NoDragDrop",
                "DragOnly",
                "DropOnly",
                "DragDrop",
                "InternalMove"
            ]
        }
        Property { name: "autoScroll"; revision: 0; type: "bool" }
        Property { name: "autoScrollMargin"; revision: 0; type: "int" }
        Property { name: "editTriggers"; revision: 0; type: "EditTriggers" }
        Property { name: "tabKeyNavigation"; revision: 0; type: "bool" }
        Property { name: "showDropIndicator"; revision: 0; type: "bool" }
        Property { name: "dragEnabled"; revision: 0; type: "bool" }
        Property { name: "dragDropOverwriteMode"; revision: 0; type: "bool" }
        Property { name: "dragDropMode"; revision: 0; type: "DragDropMode" }
        Property { name: "defaultDropAction"; revision: 0; type: "Qt::DropAction" }
        Property { name: "alternatingRowColors"; revision: 0; type: "bool" }
        Property { name: "selectionMode"; revision: 0; type: "SelectionMode" }
        Property { name: "selectionBehavior"; revision: 0; type: "SelectionBehavior" }
        Property { name: "iconSize"; revision: 0; type: "QSize" }
        Property { name: "textElideMode"; revision: 0; type: "Qt::TextElideMode" }
        Property { name: "verticalScrollMode"; revision: 0; type: "ScrollMode" }
        Property { name: "horizontalScrollMode"; revision: 0; type: "ScrollMode" }
        Signal {
            name: "pressed"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Signal {
            name: "clicked"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Signal {
            name: "doubleClicked"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Signal {
            name: "activated"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Signal {
            name: "entered"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Signal { name: "viewportEntered"; revision: 0 }
        Signal {
            name: "iconSizeChanged"
            revision: 0
            Parameter { name: "size"; type: "QSize" }
        }
        Method { name: "reset"; revision: 0 }
        Method {
            name: "setRootIndex"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method { name: "doItemsLayout"; revision: 0 }
        Method { name: "selectAll"; revision: 0 }
        Method {
            name: "edit"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method { name: "clearSelection"; revision: 0 }
        Method {
            name: "setCurrentIndex"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method { name: "scrollToTop"; revision: 0 }
        Method { name: "scrollToBottom"; revision: 0 }
        Method {
            name: "update"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "dataChanged"
            revision: 0
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Method {
            name: "dataChanged"
            revision: 0
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Method {
            name: "rowsInserted"
            revision: 0
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
        }
        Method {
            name: "rowsAboutToBeRemoved"
            revision: 0
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
        }
        Method {
            name: "selectionChanged"
            revision: 0
            Parameter { name: "selected"; type: "QItemSelection" }
            Parameter { name: "deselected"; type: "QItemSelection" }
        }
        Method {
            name: "currentChanged"
            revision: 0
            Parameter { name: "current"; type: "QModelIndex" }
            Parameter { name: "previous"; type: "QModelIndex" }
        }
        Method { name: "updateEditorData"; revision: 0 }
        Method { name: "updateEditorGeometries"; revision: 0 }
        Method { name: "updateGeometries"; revision: 0 }
        Method {
            name: "verticalScrollbarAction"
            revision: 0
            Parameter { name: "action"; type: "int" }
        }
        Method {
            name: "horizontalScrollbarAction"
            revision: 0
            Parameter { name: "action"; type: "int" }
        }
        Method {
            name: "verticalScrollbarValueChanged"
            revision: 0
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "horizontalScrollbarValueChanged"
            revision: 0
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "closeEditor"
            revision: 0
            Parameter { name: "editor"; type: "QWidget"; isPointer: true }
            Parameter { name: "hint"; type: "QAbstractItemDelegate::EndEditHint" }
        }
        Method {
            name: "commitData"
            revision: 0
            Parameter { name: "editor"; type: "QWidget"; isPointer: true }
        }
        Method {
            name: "editorDestroyed"
            revision: 0
            Parameter { name: "editor"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "_q_columnsAboutToBeRemoved"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_columnsRemoved"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_columnsInserted"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_rowsInserted"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_rowsRemoved"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_columnsMoved"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_rowsMoved"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
        }
        Method { name: "_q_modelDestroyed"; revision: 0 }
        Method { name: "_q_layoutChanged"; revision: 0 }
        Method { name: "_q_headerDataChanged"; revision: 0 }
        Method { name: "_q_scrollerStateChanged"; revision: 0 }
    }
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
    Component {
        name: "QAbstractProxyModel"
        prototype: "QAbstractItemModel"
        Property { name: "sourceModel"; type: "QAbstractItemModel"; isPointer: true }
        Method { name: "resetInternalData" }
        Method { name: "_q_sourceModelDestroyed" }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapSelectionToSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
        Method {
            name: "mapSelectionFromSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
    }
    Component {
        file: "qabstractscrollarea.h"
        name: "QAbstractScrollArea"
        prototype: "QFrame"
        exports: ["qmluic.QtWidgets/QAbstractScrollArea 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "SizeAdjustPolicy"
            alias: ""
            values: [
                "AdjustIgnored",
                "AdjustToContentsOnFirstShow",
                "AdjustToContents"
            ]
        }
        Property { name: "verticalScrollBarPolicy"; revision: 0; type: "Qt::ScrollBarPolicy" }
        Property { name: "horizontalScrollBarPolicy"; revision: 0; type: "Qt::ScrollBarPolicy" }
        Property { name: "sizeAdjustPolicy"; revision: 0; type: "SizeAdjustPolicy" }
        Method {
            name: "_q_hslide"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "_q_vslide"
            revision: 0
            Parameter { type: "int" }
        }
        Method { name: "_q_showOrHideScrollBars"; revision: 0 }
    }
    Component {
        file: "qabstractscrollarea_p.h"
        name: "QAbstractScrollAreaFilter"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QAbstractScrollAreaFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qabstractslider.h"
        name: "QAbstractSlider"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QAbstractSlider 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "minimum"; revision: 0; type: "int" }
        Property { name: "maximum"; revision: 0; type: "int" }
        Property { name: "singleStep"; revision: 0; type: "int" }
        Property { name: "pageStep"; revision: 0; type: "int" }
        Property { name: "value"; revision: 0; type: "int" }
        Property { name: "sliderPosition"; revision: 0; type: "int" }
        Property { name: "tracking"; revision: 0; type: "bool" }
        Property { name: "orientation"; revision: 0; type: "Qt::Orientation" }
        Property { name: "invertedAppearance"; revision: 0; type: "bool" }
        Property { name: "invertedControls"; revision: 0; type: "bool" }
        Property { name: "sliderDown"; revision: 0; type: "bool" }
        Signal {
            name: "valueChanged"
            revision: 0
            Parameter { name: "value"; type: "int" }
        }
        Signal { name: "sliderPressed"; revision: 0 }
        Signal {
            name: "sliderMoved"
            revision: 0
            Parameter { name: "position"; type: "int" }
        }
        Signal { name: "sliderReleased"; revision: 0 }
        Signal {
            name: "rangeChanged"
            revision: 0
            Parameter { name: "min"; type: "int" }
            Parameter { name: "max"; type: "int" }
        }
        Signal {
            name: "actionTriggered"
            revision: 0
            Parameter { name: "action"; type: "int" }
        }
        Method {
            name: "setValue"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "setOrientation"
            revision: 0
            Parameter { type: "Qt::Orientation" }
        }
        Method {
            name: "setRange"
            revision: 0
            Parameter { name: "min"; type: "int" }
            Parameter { name: "max"; type: "int" }
        }
    }
    Component {
        file: "qabstractspinbox.h"
        name: "QAbstractSpinBox"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QAbstractSpinBox 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ButtonSymbols"
            alias: ""
            values: ["UpDownArrows", "PlusMinus", "NoButtons"]
        }
        Enum {
            name: "CorrectionMode"
            alias: ""
            values: ["CorrectToPreviousValue", "CorrectToNearestValue"]
        }
        Enum {
            name: "StepType"
            alias: ""
            values: ["DefaultStepType", "AdaptiveDecimalStepType"]
        }
        Property { name: "wrapping"; revision: 0; type: "bool" }
        Property { name: "frame"; revision: 0; type: "bool" }
        Property { name: "alignment"; revision: 0; type: "Qt::Alignment" }
        Property { name: "readOnly"; revision: 0; type: "bool" }
        Property { name: "buttonSymbols"; revision: 0; type: "ButtonSymbols" }
        Property { name: "specialValueText"; revision: 0; type: "string" }
        Property { name: "text"; revision: 0; type: "string" }
        Property { name: "accelerated"; revision: 0; type: "bool" }
        Property { name: "correctionMode"; revision: 0; type: "CorrectionMode" }
        Property { name: "acceptableInput"; revision: 0; type: "bool" }
        Property { name: "keyboardTracking"; revision: 0; type: "bool" }
        Property { name: "showGroupSeparator"; revision: 0; type: "bool" }
        Signal { name: "editingFinished"; revision: 0 }
        Method { name: "stepUp"; revision: 0 }
        Method { name: "stepDown"; revision: 0 }
        Method { name: "selectAll"; revision: 0 }
        Method { name: "clear"; revision: 0 }
        Method {
            name: "_q_editorTextChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Method {
            name: "_q_editorCursorPositionChanged"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
    }
    Component { name: "QAbstractTableModel"; prototype: "QAbstractItemModel" }
    Component {
        name: "QAbstractTransition"
        prototype: "QObject"
        Enum {
            name: "TransitionType"
            values: ["ExternalTransition", "InternalTransition"]
        }
        Property { name: "sourceState"; type: "QState"; isReadonly: true; isPointer: true }
        Property { name: "targetState"; type: "QAbstractState"; isPointer: true }
        Property { name: "targetStates"; type: "QList<QAbstractState*>" }
        Property { name: "transitionType"; revision: 1; type: "TransitionType" }
        Signal { name: "triggered" }
    }
    Component {
        file: "qaction.h"
        name: "QAction"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QAction 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "MenuRole"
            alias: ""
            values: [
                "NoRole",
                "TextHeuristicRole",
                "ApplicationSpecificRole",
                "AboutQtRole",
                "AboutRole",
                "PreferencesRole",
                "QuitRole"
            ]
        }
        Enum {
            name: "Priority"
            alias: ""
            values: ["LowPriority", "NormalPriority", "HighPriority"]
        }
        Property { name: "checkable"; revision: 0; type: "bool" }
        Property { name: "checked"; revision: 0; type: "bool" }
        Property { name: "enabled"; revision: 0; type: "bool" }
        Property { name: "icon"; revision: 0; type: "QIcon" }
        Property { name: "text"; revision: 0; type: "string" }
        Property { name: "iconText"; revision: 0; type: "string" }
        Property { name: "toolTip"; revision: 0; type: "string" }
        Property { name: "statusTip"; revision: 0; type: "string" }
        Property { name: "whatsThis"; revision: 0; type: "string" }
        Property { name: "font"; revision: 0; type: "QFont" }
        Property { name: "shortcut"; revision: 0; type: "QKeySequence" }
        Property { name: "shortcutContext"; revision: 0; type: "Qt::ShortcutContext" }
        Property { name: "autoRepeat"; revision: 0; type: "bool" }
        Property { name: "visible"; revision: 0; type: "bool" }
        Property { name: "menuRole"; revision: 0; type: "MenuRole" }
        Property { name: "iconVisibleInMenu"; revision: 0; type: "bool" }
        Property { name: "shortcutVisibleInContextMenu"; revision: 0; type: "bool" }
        Property { name: "priority"; revision: 0; type: "Priority" }
        Signal { name: "changed"; revision: 0 }
        Signal {
            name: "triggered"
            revision: 0
            Parameter { name: "checked"; type: "bool" }
        }
        Signal { name: "triggered"; revision: 0 }
        Signal { name: "hovered"; revision: 0 }
        Signal {
            name: "toggled"
            revision: 0
            Parameter { type: "bool" }
        }
        Method { name: "trigger"; revision: 0 }
        Method { name: "hover"; revision: 0 }
        Method {
            name: "setChecked"
            revision: 0
            Parameter { type: "bool" }
        }
        Method { name: "toggle"; revision: 0 }
        Method {
            name: "setEnabled"
            revision: 0
            Parameter { type: "bool" }
        }
        Method {
            name: "setDisabled"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Method {
            name: "setVisible"
            revision: 0
            Parameter { type: "bool" }
        }
    }
    Component {
        file: "qactiongroup.h"
        name: "QActionGroup"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QActionGroup 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ExclusionPolicy"
            alias: ""
            values: ["None", "Exclusive", "ExclusiveOptional"]
        }
        Property { name: "exclusionPolicy"; revision: 0; type: "QActionGroup::ExclusionPolicy" }
        Property { name: "enabled"; revision: 0; type: "bool" }
        Property { name: "visible"; revision: 0; type: "bool" }
        Signal {
            name: "triggered"
            revision: 0
            Parameter { type: "QAction"; isPointer: true }
        }
        Signal {
            name: "hovered"
            revision: 0
            Parameter { type: "QAction"; isPointer: true }
        }
        Method {
            name: "setEnabled"
            revision: 0
            Parameter { type: "bool" }
        }
        Method {
            name: "setDisabled"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Method {
            name: "setVisible"
            revision: 0
            Parameter { type: "bool" }
        }
        Method {
            name: "setExclusive"
            revision: 0
            Parameter { type: "bool" }
        }
        Method {
            name: "setExclusionPolicy"
            revision: 0
            Parameter { name: "policy"; type: "ExclusionPolicy" }
        }
        Method { name: "_q_actionTriggered"; revision: 0 }
        Method { name: "_q_actionChanged"; revision: 0 }
        Method { name: "_q_actionHovered"; revision: 0 }
    }
    Component {
        file: "qeffects.cpp"
        name: "QAlphaWidget"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QAlphaWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "render"; revision: 0 }
    }
    Component {
        file: "qapplication.h"
        name: "QApplication"
        exports: ["qmluic.QtWidgets/QApplication 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "windowIcon"; revision: 0; type: "QIcon" }
        Property { name: "cursorFlashTime"; revision: 0; type: "int" }
        Property { name: "doubleClickInterval"; revision: 0; type: "int" }
        Property { name: "keyboardInputInterval"; revision: 0; type: "int" }
        Property { name: "wheelScrollLines"; revision: 0; type: "int" }
        Property { name: "globalStrut"; revision: 0; type: "QSize" }
        Property { name: "startDragTime"; revision: 0; type: "int" }
        Property { name: "startDragDistance"; revision: 0; type: "int" }
        Property { name: "styleSheet"; revision: 0; type: "string" }
        Property { name: "autoSipEnabled"; revision: 0; type: "bool" }
        Signal {
            name: "focusChanged"
            revision: 0
            Parameter { name: "old"; type: "QWidget"; isPointer: true }
            Parameter { name: "now"; type: "QWidget"; isPointer: true }
        }
        Method {
            name: "setStyleSheet"
            revision: 0
            Parameter { name: "sheet"; type: "string" }
        }
        Method {
            name: "setAutoSipEnabled"
            revision: 0
            Parameter { name: "enabled"; type: "bool" }
        }
        Method { name: "autoSipEnabled"; revision: 0; type: "bool" }
        Method { name: "closeAllWindows"; revision: 0 }
        Method { name: "aboutQt"; revision: 0 }
    }
    Component {
        file: "qsystemtrayicon_p.h"
        name: "QBalloonTip"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QBalloonTip 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qbasickeyeventtransition_p.h"
        name: "QBasicKeyEventTransition"
        prototype: "QAbstractTransition"
        exports: [
            "qmluic.QtWidgets/QBasicKeyEventTransition 5.0",
            "qmluic.QtWidgets/QBasicKeyEventTransition 5.1"
        ]
        exportMetaObjectRevisions: [0, 1]
    }
    Component {
        file: "qbasicmouseeventtransition_p.h"
        name: "QBasicMouseEventTransition"
        prototype: "QAbstractTransition"
        exports: [
            "qmluic.QtWidgets/QBasicMouseEventTransition 5.0",
            "qmluic.QtWidgets/QBasicMouseEventTransition 5.1"
        ]
        exportMetaObjectRevisions: [0, 1]
    }
    Component {
        file: "qstyleanimation_p.h"
        name: "QBlendStyleAnimation"
        prototype: "QStyleAnimation"
        exports: ["qmluic.QtWidgets/QBlendStyleAnimation 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qitemeditorfactory.cpp"
        name: "QBooleanComboBox"
        prototype: "QComboBox"
        exports: ["qmluic.QtWidgets/QBooleanComboBox 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "value"; revision: 0; type: "bool" }
    }
    Component {
        file: "qboxlayout.h"
        name: "QBoxLayout"
        prototype: "QLayout"
        exports: ["qmluic.QtWidgets/QBoxLayout 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qbuttongroup.h"
        name: "QButtonGroup"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QButtonGroup 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "exclusive"; revision: 0; type: "bool" }
        Signal {
            name: "buttonClicked"
            revision: 0
            Parameter { type: "QAbstractButton"; isPointer: true }
        }
        Signal {
            name: "buttonPressed"
            revision: 0
            Parameter { type: "QAbstractButton"; isPointer: true }
        }
        Signal {
            name: "buttonReleased"
            revision: 0
            Parameter { type: "QAbstractButton"; isPointer: true }
        }
        Signal {
            name: "buttonToggled"
            revision: 0
            Parameter { type: "QAbstractButton"; isPointer: true }
            Parameter { type: "bool" }
        }
        Signal {
            name: "idClicked"
            revision: 0
            Parameter { type: "int" }
        }
        Signal {
            name: "idPressed"
            revision: 0
            Parameter { type: "int" }
        }
        Signal {
            name: "idReleased"
            revision: 0
            Parameter { type: "int" }
        }
        Signal {
            name: "idToggled"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "bool" }
        }
        Signal {
            name: "buttonClicked"
            revision: 0
            Parameter { type: "int" }
        }
        Signal {
            name: "buttonPressed"
            revision: 0
            Parameter { type: "int" }
        }
        Signal {
            name: "buttonReleased"
            revision: 0
            Parameter { type: "int" }
        }
        Signal {
            name: "buttonToggled"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "bool" }
        }
    }
    Component {
        file: "qcalendarwidget.cpp"
        name: "QCalendarDelegate"
        prototype: "QItemDelegate"
        exports: ["qmluic.QtWidgets/QCalendarDelegate 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qcalendarwidget.cpp"
        name: "QCalendarModel"
        prototype: "QAbstractTableModel"
        exports: ["qmluic.QtWidgets/QCalendarModel 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qdatetimeedit_p.h"
        name: "QCalendarPopup"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QCalendarPopup 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "activated"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Signal {
            name: "newDateSelected"
            revision: 0
            Parameter { name: "newDate"; type: "QDate" }
        }
        Signal {
            name: "hidingCalendar"
            revision: 0
            Parameter { name: "oldDate"; type: "QDate" }
        }
        Signal { name: "resetButton"; revision: 0 }
        Method {
            name: "dateSelected"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Method { name: "dateSelectionChanged"; revision: 0 }
    }
    Component {
        file: "qcalendarwidget.cpp"
        name: "QCalendarTextNavigator"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QCalendarTextNavigator 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "dateChanged"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Signal { name: "editingFinished"; revision: 0 }
    }
    Component {
        file: "qcalendarwidget.cpp"
        name: "QCalendarView"
        prototype: "QTableView"
        exports: ["qmluic.QtWidgets/QCalendarView 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "showDate"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Signal {
            name: "changeDate"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
            Parameter { name: "changeMonth"; type: "bool" }
        }
        Signal {
            name: "clicked"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Signal { name: "editingFinished"; revision: 0 }
    }
    Component {
        file: "qcalendarwidget.h"
        name: "QCalendarWidget"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QCalendarWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "HorizontalHeaderFormat"
            alias: ""
            values: [
                "NoHorizontalHeader",
                "SingleLetterDayNames",
                "ShortDayNames",
                "LongDayNames"
            ]
        }
        Enum {
            name: "VerticalHeaderFormat"
            alias: ""
            values: ["NoVerticalHeader", "ISOWeekNumbers"]
        }
        Enum {
            name: "SelectionMode"
            alias: ""
            values: ["NoSelection", "SingleSelection"]
        }
        Property { name: "selectedDate"; revision: 0; type: "QDate" }
        Property { name: "minimumDate"; revision: 0; type: "QDate" }
        Property { name: "maximumDate"; revision: 0; type: "QDate" }
        Property { name: "firstDayOfWeek"; revision: 0; type: "Qt::DayOfWeek" }
        Property { name: "gridVisible"; revision: 0; type: "bool" }
        Property { name: "selectionMode"; revision: 0; type: "SelectionMode" }
        Property { name: "horizontalHeaderFormat"; revision: 0; type: "HorizontalHeaderFormat" }
        Property { name: "verticalHeaderFormat"; revision: 0; type: "VerticalHeaderFormat" }
        Property { name: "navigationBarVisible"; revision: 0; type: "bool" }
        Property { name: "dateEditEnabled"; revision: 0; type: "bool" }
        Property { name: "dateEditAcceptDelay"; revision: 0; type: "int" }
        Signal { name: "selectionChanged"; revision: 0 }
        Signal {
            name: "clicked"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Signal {
            name: "activated"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Signal {
            name: "currentPageChanged"
            revision: 0
            Parameter { name: "year"; type: "int" }
            Parameter { name: "month"; type: "int" }
        }
        Method {
            name: "setSelectedDate"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Method {
            name: "setDateRange"
            revision: 0
            Parameter { name: "min"; type: "QDate" }
            Parameter { name: "max"; type: "QDate" }
        }
        Method {
            name: "setCurrentPage"
            revision: 0
            Parameter { name: "year"; type: "int" }
            Parameter { name: "month"; type: "int" }
        }
        Method {
            name: "setGridVisible"
            revision: 0
            Parameter { name: "show"; type: "bool" }
        }
        Method {
            name: "setNavigationBarVisible"
            revision: 0
            Parameter { name: "visible"; type: "bool" }
        }
        Method { name: "showNextMonth"; revision: 0 }
        Method { name: "showPreviousMonth"; revision: 0 }
        Method { name: "showNextYear"; revision: 0 }
        Method { name: "showPreviousYear"; revision: 0 }
        Method { name: "showSelectedDate"; revision: 0 }
        Method { name: "showToday"; revision: 0 }
        Method {
            name: "_q_slotShowDate"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Method {
            name: "_q_slotChangeDate"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Method {
            name: "_q_slotChangeDate"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
            Parameter { name: "changeMonth"; type: "bool" }
        }
        Method { name: "_q_editingFinished"; revision: 0 }
        Method { name: "_q_prevMonthClicked"; revision: 0 }
        Method { name: "_q_nextMonthClicked"; revision: 0 }
        Method { name: "_q_yearEditingFinished"; revision: 0 }
        Method { name: "_q_yearClicked"; revision: 0 }
        Method {
            name: "_q_monthChanged"
            revision: 0
            Parameter { name: "act"; type: "QAction"; isPointer: true }
        }
    }
    Component {
        file: "qcheckbox.h"
        name: "QCheckBox"
        prototype: "QAbstractButton"
        exports: ["qmluic.QtWidgets/QCheckBox 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "tristate"; revision: 0; type: "bool" }
        Signal {
            name: "stateChanged"
            revision: 0
            Parameter { type: "int" }
        }
    }
    Component {
        file: "qcolordialog.h"
        name: "QColorDialog"
        prototype: "QDialog"
        exports: ["qmluic.QtWidgets/QColorDialog 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ColorDialogOption"
            alias: ""
            values: ["ShowAlphaChannel", "NoButtons", "DontUseNativeDialog"]
        }
        Property { name: "currentColor"; revision: 0; type: "QColor" }
        Property { name: "options"; revision: 0; type: "ColorDialogOptions" }
        Signal {
            name: "currentColorChanged"
            revision: 0
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "colorSelected"
            revision: 0
            Parameter { name: "color"; type: "QColor" }
        }
        Method { name: "_q_addCustom"; revision: 0 }
        Method {
            name: "_q_newHsv"
            revision: 0
            Parameter { name: "h"; type: "int" }
            Parameter { name: "s"; type: "int" }
            Parameter { name: "v"; type: "int" }
        }
        Method {
            name: "_q_newColorTypedIn"
            revision: 0
            Parameter { name: "rgb"; type: "QRgb" }
        }
        Method {
            name: "_q_nextCustom"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_newCustom"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_newStandard"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method { name: "_q_pickScreenColor"; revision: 0 }
        Method { name: "_q_updateColorPicking"; revision: 0 }
    }
    Component {
        file: "qcolordialog.cpp"
        name: "QColorLuminancePicker"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QColorLuminancePicker 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "newHsv"
            revision: 0
            Parameter { name: "h"; type: "int" }
            Parameter { name: "s"; type: "int" }
            Parameter { name: "v"; type: "int" }
        }
        Method {
            name: "setCol"
            revision: 0
            Parameter { name: "h"; type: "int" }
            Parameter { name: "s"; type: "int" }
            Parameter { name: "v"; type: "int" }
        }
        Method {
            name: "setCol"
            revision: 0
            Parameter { name: "h"; type: "int" }
            Parameter { name: "s"; type: "int" }
        }
    }
    Component {
        file: "qcolordialog.cpp"
        name: "QColorPicker"
        prototype: "QFrame"
        exports: ["qmluic.QtWidgets/QColorPicker 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "newCol"
            revision: 0
            Parameter { name: "h"; type: "int" }
            Parameter { name: "s"; type: "int" }
        }
        Method {
            name: "setCol"
            revision: 0
            Parameter { name: "h"; type: "int" }
            Parameter { name: "s"; type: "int" }
        }
    }
    Component {
        file: "qcolordialog.cpp"
        name: "QColorShowLabel"
        prototype: "QFrame"
        exports: ["qmluic.QtWidgets/QColorShowLabel 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "colorDropped"
            revision: 0
            Parameter { type: "QRgb" }
        }
    }
    Component {
        file: "qcolordialog.cpp"
        name: "QColorShower"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QColorShower 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "newCol"
            revision: 0
            Parameter { name: "rgb"; type: "QRgb" }
        }
        Signal {
            name: "currentColorChanged"
            revision: 0
            Parameter { name: "color"; type: "QColor" }
        }
        Method {
            name: "setRgb"
            revision: 0
            Parameter { name: "rgb"; type: "QRgb" }
        }
        Method { name: "rgbEd"; revision: 0 }
        Method { name: "hsvEd"; revision: 0 }
        Method { name: "htmlEd"; revision: 0 }
    }
    Component {
        file: "qcolumnview.h"
        name: "QColumnView"
        prototype: "QAbstractItemView"
        exports: ["qmluic.QtWidgets/QColumnView 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "resizeGripsVisible"; revision: 0; type: "bool" }
        Signal {
            name: "updatePreviewWidget"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_gripMoved"
            revision: 0
            Parameter { type: "int" }
        }
        Method { name: "_q_changeCurrentColumn"; revision: 0 }
        Method {
            name: "_q_clicked"
            revision: 0
            Parameter { type: "QModelIndex" }
        }
    }
    Component {
        file: "qcolumnviewgrip_p.h"
        name: "QColumnViewGrip"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QColumnViewGrip 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "gripMoved"
            revision: 0
            Parameter { name: "offset"; type: "int" }
        }
    }
    Component {
        file: "qcombobox.h"
        name: "QComboBox"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QComboBox 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "InsertPolicy"
            alias: ""
            values: [
                "NoInsert",
                "InsertAtTop",
                "InsertAtCurrent",
                "InsertAtBottom",
                "InsertAfterCurrent",
                "InsertBeforeCurrent",
                "InsertAlphabetically"
            ]
        }
        Enum {
            name: "SizeAdjustPolicy"
            alias: ""
            values: [
                "AdjustToContents",
                "AdjustToContentsOnFirstShow",
                "AdjustToMinimumContentsLength",
                "AdjustToMinimumContentsLengthWithIcon"
            ]
        }
        Property { name: "editable"; revision: 0; type: "bool" }
        Property { name: "count"; revision: 0; type: "int" }
        Property { name: "currentText"; revision: 0; type: "string" }
        Property { name: "currentIndex"; revision: 0; type: "int" }
        Property { name: "currentData"; revision: 0; type: "QVariant" }
        Property { name: "maxVisibleItems"; revision: 0; type: "int" }
        Property { name: "maxCount"; revision: 0; type: "int" }
        Property { name: "insertPolicy"; revision: 0; type: "InsertPolicy" }
        Property { name: "sizeAdjustPolicy"; revision: 0; type: "SizeAdjustPolicy" }
        Property { name: "minimumContentsLength"; revision: 0; type: "int" }
        Property { name: "iconSize"; revision: 0; type: "QSize" }
        Property { name: "placeholderText"; revision: 0; type: "string" }
        Property { name: "autoCompletion"; revision: 0; type: "bool" }
        Property { name: "autoCompletionCaseSensitivity"; revision: 0; type: "Qt::CaseSensitivity" }
        Property { name: "duplicatesEnabled"; revision: 0; type: "bool" }
        Property { name: "frame"; revision: 0; type: "bool" }
        Property { name: "modelColumn"; revision: 0; type: "int" }
        Signal {
            name: "editTextChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "activated"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "textActivated"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "highlighted"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "textHighlighted"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "currentIndexChanged"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "currentIndexChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "currentTextChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "activated"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "highlighted"
            revision: 0
            Parameter { type: "string" }
        }
        Method { name: "clear"; revision: 0 }
        Method { name: "clearEditText"; revision: 0 }
        Method {
            name: "setEditText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "setCurrentIndex"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "_q_itemSelected"
            revision: 0
            Parameter { name: "item"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitHighlighted"
            revision: 0
            Parameter { type: "QModelIndex" }
        }
        Method {
            name: "_q_emitCurrentIndexChanged"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method { name: "_q_editingFinished"; revision: 0 }
        Method { name: "_q_returnPressed"; revision: 0 }
        Method { name: "_q_resetButton"; revision: 0 }
        Method {
            name: "_q_dataChanged"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "QModelIndex" }
        }
        Method { name: "_q_updateIndexBeforeChange"; revision: 0 }
        Method {
            name: "_q_rowsInserted"
            revision: 0
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
        }
        Method {
            name: "_q_rowsRemoved"
            revision: 0
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
        }
        Method { name: "_q_modelDestroyed"; revision: 0 }
        Method { name: "_q_modelReset"; revision: 0 }
        Method {
            name: "_q_completerActivated"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "inputMethodQuery"
            revision: 0
            type: "QVariant"
            Parameter { name: "query"; type: "Qt::InputMethodQuery" }
            Parameter { name: "argument"; type: "QVariant" }
        }
    }
    Component {
        file: "qcombobox_p.h"
        name: "QComboBoxDelegate"
        prototype: "QItemDelegate"
        exports: ["qmluic.QtWidgets/QComboBoxDelegate 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qcombobox_p.h"
        name: "QComboBoxListView"
        prototype: "QListView"
        exports: ["qmluic.QtWidgets/QComboBoxListView 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qcombobox_p.h"
        name: "QComboBoxPrivateContainer"
        prototype: "QFrame"
        exports: ["qmluic.QtWidgets/QComboBoxPrivateContainer 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "itemSelected"
            revision: 0
            Parameter { type: "QModelIndex" }
        }
        Signal { name: "resetButton"; revision: 0 }
        Method {
            name: "scrollItemView"
            revision: 0
            Parameter { name: "action"; type: "int" }
        }
        Method { name: "hideScrollers"; revision: 0 }
        Method { name: "updateScrollers"; revision: 0 }
        Method { name: "viewDestroyed"; revision: 0 }
    }
    Component {
        file: "qcombobox_p.h"
        name: "QComboBoxPrivateScroller"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QComboBoxPrivateScroller 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "doScroll"
            revision: 0
            Parameter { name: "action"; type: "int" }
        }
    }
    Component {
        file: "qcombobox_p.h"
        name: "QComboMenuDelegate"
        prototype: "QAbstractItemDelegate"
        exports: ["qmluic.QtWidgets/QComboMenuDelegate 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qcommandlinkbutton.h"
        name: "QCommandLinkButton"
        prototype: "QPushButton"
        exports: ["qmluic.QtWidgets/QCommandLinkButton 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "description"; revision: 0; type: "string" }
        Property { name: "flat"; revision: 0; type: "bool" }
    }
    Component {
        file: "qcommonstyle.h"
        name: "QCommonStyle"
        prototype: "QStyle"
        exports: ["qmluic.QtWidgets/QCommonStyle 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "_q_removeAnimation"; revision: 0 }
    }
    Component {
        file: "qcompleter.h"
        name: "QCompleter"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QCompleter 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "CompletionMode"
            alias: ""
            values: [
                "PopupCompletion",
                "UnfilteredPopupCompletion",
                "InlineCompletion"
            ]
        }
        Enum {
            name: "ModelSorting"
            alias: ""
            values: [
                "UnsortedModel",
                "CaseSensitivelySortedModel",
                "CaseInsensitivelySortedModel"
            ]
        }
        Property { name: "completionPrefix"; revision: 0; type: "string" }
        Property { name: "modelSorting"; revision: 0; type: "ModelSorting" }
        Property { name: "filterMode"; revision: 0; type: "Qt::MatchFlags" }
        Property { name: "completionMode"; revision: 0; type: "CompletionMode" }
        Property { name: "completionColumn"; revision: 0; type: "int" }
        Property { name: "completionRole"; revision: 0; type: "int" }
        Property { name: "maxVisibleItems"; revision: 0; type: "int" }
        Property { name: "caseSensitivity"; revision: 0; type: "Qt::CaseSensitivity" }
        Property { name: "wrapAround"; revision: 0; type: "bool" }
        Signal {
            name: "activated"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Signal {
            name: "activated"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Signal {
            name: "highlighted"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Signal {
            name: "highlighted"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setCompletionPrefix"
            revision: 0
            Parameter { name: "prefix"; type: "string" }
        }
        Method {
            name: "complete"
            revision: 0
            Parameter { name: "rect"; type: "QRect" }
        }
        Method { name: "complete"; revision: 0 }
        Method {
            name: "setWrapAround"
            revision: 0
            Parameter { name: "wrap"; type: "bool" }
        }
        Method {
            name: "_q_complete"
            revision: 0
            Parameter { type: "QModelIndex" }
        }
        Method {
            name: "_q_completionSelected"
            revision: 0
            Parameter { type: "QItemSelection" }
        }
        Method { name: "_q_autoResizePopup"; revision: 0 }
        Method {
            name: "_q_fileSystemModelDirectoryLoaded"
            revision: 0
            Parameter { type: "string" }
        }
    }
    Component {
        file: "qcompleter_p.h"
        name: "QCompletionModel"
        prototype: "QAbstractProxyModel"
        exports: ["qmluic.QtWidgets/QCompletionModel 5.0"]
        exportMetaObjectRevisions: [0]
        Signal { name: "rowsAdded"; revision: 0 }
        Method { name: "invalidate"; revision: 0 }
        Method { name: "rowsInserted"; revision: 0 }
        Method { name: "modelDestroyed"; revision: 0 }
    }
    Component {
        file: "qdatawidgetmapper.h"
        name: "QDataWidgetMapper"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QDataWidgetMapper 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "SubmitPolicy"
            alias: ""
            values: ["AutoSubmit", "ManualSubmit"]
        }
        Property { name: "currentIndex"; revision: 0; type: "int" }
        Property { name: "orientation"; revision: 0; type: "Qt::Orientation" }
        Property { name: "submitPolicy"; revision: 0; type: "SubmitPolicy" }
        Signal {
            name: "currentIndexChanged"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "revert"; revision: 0 }
        Method { name: "submit"; revision: 0; type: "bool" }
        Method { name: "toFirst"; revision: 0 }
        Method { name: "toLast"; revision: 0 }
        Method { name: "toNext"; revision: 0 }
        Method { name: "toPrevious"; revision: 0 }
        Method {
            name: "setCurrentIndex"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentModelIndex"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_dataChanged"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "QModelIndex" }
            Parameter { type: "QVector<int>" }
        }
        Method {
            name: "_q_commitData"
            revision: 0
            Parameter { type: "QWidget"; isPointer: true }
        }
        Method {
            name: "_q_closeEditor"
            revision: 0
            Parameter { type: "QWidget"; isPointer: true }
            Parameter { type: "QAbstractItemDelegate::EndEditHint" }
        }
        Method { name: "_q_modelDestroyed"; revision: 0 }
    }
    Component {
        file: "qdatetimeedit.h"
        name: "QDateEdit"
        prototype: "QDateTimeEdit"
        exports: ["qmluic.QtWidgets/QDateEdit 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "date"; revision: 0; type: "QDate" }
        Signal {
            name: "userDateChanged"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
    }
    Component {
        file: "qdatetimeedit.h"
        name: "QDateTimeEdit"
        prototype: "QAbstractSpinBox"
        exports: ["qmluic.QtWidgets/QDateTimeEdit 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Section"
            alias: ""
            values: [
                "NoSection",
                "AmPmSection",
                "MSecSection",
                "SecondSection",
                "MinuteSection",
                "HourSection",
                "DaySection",
                "MonthSection",
                "YearSection",
                "TimeSections_Mask",
                "DateSections_Mask"
            ]
        }
        Enum {
            name: "Sections"
            alias: "Section"
            isFlag: true
            values: [
                "NoSection",
                "AmPmSection",
                "MSecSection",
                "SecondSection",
                "MinuteSection",
                "HourSection",
                "DaySection",
                "MonthSection",
                "YearSection",
                "TimeSections_Mask",
                "DateSections_Mask"
            ]
        }
        Property { name: "dateTime"; revision: 0; type: "QDateTime" }
        Property { name: "date"; revision: 0; type: "QDate" }
        Property { name: "time"; revision: 0; type: "QTime" }
        Property { name: "maximumDateTime"; revision: 0; type: "QDateTime" }
        Property { name: "minimumDateTime"; revision: 0; type: "QDateTime" }
        Property { name: "maximumDate"; revision: 0; type: "QDate" }
        Property { name: "minimumDate"; revision: 0; type: "QDate" }
        Property { name: "maximumTime"; revision: 0; type: "QTime" }
        Property { name: "minimumTime"; revision: 0; type: "QTime" }
        Property { name: "currentSection"; revision: 0; type: "Section" }
        Property { name: "displayedSections"; revision: 0; type: "Sections" }
        Property { name: "displayFormat"; revision: 0; type: "string" }
        Property { name: "calendarPopup"; revision: 0; type: "bool" }
        Property { name: "currentSectionIndex"; revision: 0; type: "int" }
        Property { name: "sectionCount"; revision: 0; type: "int" }
        Property { name: "timeSpec"; revision: 0; type: "Qt::TimeSpec" }
        Signal {
            name: "dateTimeChanged"
            revision: 0
            Parameter { name: "dateTime"; type: "QDateTime" }
        }
        Signal {
            name: "timeChanged"
            revision: 0
            Parameter { name: "time"; type: "QTime" }
        }
        Signal {
            name: "dateChanged"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Method {
            name: "setDateTime"
            revision: 0
            Parameter { name: "dateTime"; type: "QDateTime" }
        }
        Method {
            name: "setDate"
            revision: 0
            Parameter { name: "date"; type: "QDate" }
        }
        Method {
            name: "setTime"
            revision: 0
            Parameter { name: "time"; type: "QTime" }
        }
        Method { name: "_q_resetButton"; revision: 0 }
    }
    Component {
        file: "qdesktopwidget_p.h"
        name: "QDesktopScreenWidget"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QDesktopScreenWidget 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qdesktopwidget.h"
        name: "QDesktopWidget"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QDesktopWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "virtualDesktop"; revision: 0; type: "bool" }
        Property { name: "screenCount"; revision: 0; type: "int" }
        Property { name: "primaryScreen"; revision: 0; type: "int" }
        Signal {
            name: "resized"
            revision: 0
            Parameter { type: "int" }
        }
        Signal {
            name: "workAreaResized"
            revision: 0
            Parameter { type: "int" }
        }
        Signal {
            name: "screenCountChanged"
            revision: 0
            Parameter { type: "int" }
        }
        Signal { name: "primaryScreenChanged"; revision: 0 }
        Method { name: "_q_updateScreens"; revision: 0 }
        Method { name: "_q_availableGeometryChanged"; revision: 0 }
    }
    Component {
        file: "qdial.h"
        name: "QDial"
        prototype: "QAbstractSlider"
        exports: ["qmluic.QtWidgets/QDial 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "wrapping"; revision: 0; type: "bool" }
        Property { name: "notchSize"; revision: 0; type: "int" }
        Property { name: "notchTarget"; revision: 0; type: "double" }
        Property { name: "notchesVisible"; revision: 0; type: "bool" }
        Method {
            name: "setNotchesVisible"
            revision: 0
            Parameter { name: "visible"; type: "bool" }
        }
        Method {
            name: "setWrapping"
            revision: 0
            Parameter { name: "on"; type: "bool" }
        }
    }
    Component {
        file: "qdialog.h"
        name: "QDialog"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QDialog 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "sizeGripEnabled"; revision: 0; type: "bool" }
        Property { name: "modal"; revision: 0; type: "bool" }
        Signal {
            name: "finished"
            revision: 0
            Parameter { name: "result"; type: "int" }
        }
        Signal { name: "accepted"; revision: 0 }
        Signal { name: "rejected"; revision: 0 }
        Method { name: "open"; revision: 0 }
        Method { name: "exec"; revision: 0; type: "int" }
        Method {
            name: "done"
            revision: 0
            Parameter { type: "int" }
        }
        Method { name: "accept"; revision: 0 }
        Method { name: "reject"; revision: 0 }
        Method {
            name: "showExtension"
            revision: 0
            Parameter { type: "bool" }
        }
    }
    Component {
        file: "qdialogbuttonbox.h"
        name: "QDialogButtonBox"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QDialogButtonBox 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "StandardButtons"
            alias: "StandardButton"
            isFlag: true
            values: [
                "NoButton",
                "Ok",
                "Save",
                "SaveAll",
                "Open",
                "Yes",
                "YesToAll",
                "No",
                "NoToAll",
                "Abort",
                "Retry",
                "Ignore",
                "Close",
                "Cancel",
                "Discard",
                "Help",
                "Apply",
                "Reset",
                "RestoreDefaults"
            ]
        }
        Property { name: "orientation"; revision: 0; type: "Qt::Orientation" }
        Property { name: "standardButtons"; revision: 0; type: "StandardButtons" }
        Property { name: "centerButtons"; revision: 0; type: "bool" }
        Signal {
            name: "clicked"
            revision: 0
            Parameter { name: "button"; type: "QAbstractButton"; isPointer: true }
        }
        Signal { name: "accepted"; revision: 0 }
        Signal { name: "helpRequested"; revision: 0 }
        Signal { name: "rejected"; revision: 0 }
        Method { name: "_q_handleButtonClicked"; revision: 0 }
        Method { name: "_q_handleButtonDestroyed"; revision: 0 }
    }
    Component {
        file: "qdirmodel.h"
        name: "QDirModel"
        prototype: "QAbstractItemModel"
        exports: ["qmluic.QtWidgets/QDirModel 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "resolveSymlinks"; revision: 0; type: "bool" }
        Property { name: "readOnly"; revision: 0; type: "bool" }
        Property { name: "lazyChildCount"; revision: 0; type: "bool" }
        Method {
            name: "refresh"
            revision: 0
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "refresh"; revision: 0 }
        Method { name: "_q_refresh"; revision: 0 }
    }
    Component {
        file: "qdockwidget.h"
        name: "QDockWidget"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QDockWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DockWidgetFeatures"
            alias: "DockWidgetFeature"
            isFlag: true
            values: [
                "DockWidgetClosable",
                "DockWidgetMovable",
                "DockWidgetFloatable",
                "DockWidgetVerticalTitleBar",
                "DockWidgetFeatureMask",
                "AllDockWidgetFeatures",
                "NoDockWidgetFeatures",
                "Reserved"
            ]
        }
        Property { name: "floating"; revision: 0; type: "bool" }
        Property { name: "features"; revision: 0; type: "DockWidgetFeatures" }
        Property { name: "allowedAreas"; revision: 0; type: "Qt::DockWidgetAreas" }
        Property { name: "windowTitle"; revision: 0; type: "string" }
        Signal {
            name: "featuresChanged"
            revision: 0
            Parameter { name: "features"; type: "QDockWidget::DockWidgetFeatures" }
        }
        Signal {
            name: "topLevelChanged"
            revision: 0
            Parameter { name: "topLevel"; type: "bool" }
        }
        Signal {
            name: "allowedAreasChanged"
            revision: 0
            Parameter { name: "allowedAreas"; type: "Qt::DockWidgetAreas" }
        }
        Signal {
            name: "visibilityChanged"
            revision: 0
            Parameter { name: "visible"; type: "bool" }
        }
        Signal {
            name: "dockLocationChanged"
            revision: 0
            Parameter { name: "area"; type: "Qt::DockWidgetArea" }
        }
        Method {
            name: "_q_toggleView"
            revision: 0
            Parameter { type: "bool" }
        }
        Method { name: "_q_toggleTopLevel"; revision: 0 }
    }
    Component {
        file: "qmainwindowlayout_p.h"
        name: "QDockWidgetGroupWindow"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QDockWidgetGroupWindow 5.0"]
        exportMetaObjectRevisions: [0]
        Signal { name: "resized"; revision: 0 }
    }
    Component {
        file: "qdockwidget_p.h"
        name: "QDockWidgetLayout"
        prototype: "QLayout"
        exports: ["qmluic.QtWidgets/QDockWidgetLayout 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qdockwidget.cpp"
        name: "QDockWidgetTitleButton"
        prototype: "QAbstractButton"
        exports: ["qmluic.QtWidgets/QDockWidgetTitleButton 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qspinbox.h"
        name: "QDoubleSpinBox"
        prototype: "QAbstractSpinBox"
        exports: ["qmluic.QtWidgets/QDoubleSpinBox 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "prefix"; revision: 0; type: "string" }
        Property { name: "suffix"; revision: 0; type: "string" }
        Property { name: "cleanText"; revision: 0; type: "string" }
        Property { name: "decimals"; revision: 0; type: "int" }
        Property { name: "minimum"; revision: 0; type: "double" }
        Property { name: "maximum"; revision: 0; type: "double" }
        Property { name: "singleStep"; revision: 0; type: "double" }
        Property { name: "stepType"; revision: 0; type: "StepType" }
        Property { name: "value"; revision: 0; type: "double" }
        Signal {
            name: "valueChanged"
            revision: 0
            Parameter { type: "double" }
        }
        Signal {
            name: "textChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "valueChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Method {
            name: "setValue"
            revision: 0
            Parameter { name: "val"; type: "double" }
        }
    }
    Component {
        file: "qerrormessage.h"
        name: "QErrorMessage"
        prototype: "QDialog"
        exports: ["qmluic.QtWidgets/QErrorMessage 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "message"; type: "string" }
            Parameter { name: "type"; type: "string" }
        }
    }
    Component {
        name: "QEventTransition"
        prototype: "QAbstractTransition"
        Property { name: "eventSource"; type: "QObject"; isPointer: true }
        Property { name: "eventType"; type: "QEvent::Type" }
    }
    Component {
        file: "qitemeditorfactory_p.h"
        name: "QExpandingLineEdit"
        prototype: "QLineEdit"
        exports: ["qmluic.QtWidgets/QExpandingLineEdit 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "resizeToContents"; revision: 0 }
    }
    Component {
        file: "qfiledialog.h"
        name: "QFileDialog"
        prototype: "QDialog"
        exports: ["qmluic.QtWidgets/QFileDialog 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ViewMode"
            alias: ""
            values: ["Detail", "List"]
        }
        Enum {
            name: "FileMode"
            alias: ""
            values: [
                "AnyFile",
                "ExistingFile",
                "Directory",
                "ExistingFiles",
                "DirectoryOnly"
            ]
        }
        Enum {
            name: "AcceptMode"
            alias: ""
            values: ["AcceptOpen", "AcceptSave"]
        }
        Enum {
            name: "Option"
            alias: ""
            values: [
                "ShowDirsOnly",
                "DontResolveSymlinks",
                "DontConfirmOverwrite",
                "DontUseSheet",
                "DontUseNativeDialog",
                "ReadOnly",
                "HideNameFilterDetails",
                "DontUseCustomDirectoryIcons"
            ]
        }
        Enum {
            name: "Options"
            alias: "Option"
            isFlag: true
            values: [
                "ShowDirsOnly",
                "DontResolveSymlinks",
                "DontConfirmOverwrite",
                "DontUseSheet",
                "DontUseNativeDialog",
                "ReadOnly",
                "HideNameFilterDetails",
                "DontUseCustomDirectoryIcons"
            ]
        }
        Property { name: "viewMode"; revision: 0; type: "ViewMode" }
        Property { name: "fileMode"; revision: 0; type: "FileMode" }
        Property { name: "acceptMode"; revision: 0; type: "AcceptMode" }
        Property { name: "defaultSuffix"; revision: 0; type: "string" }
        Property { name: "readOnly"; revision: 0; type: "bool" }
        Property { name: "confirmOverwrite"; revision: 0; type: "bool" }
        Property { name: "resolveSymlinks"; revision: 0; type: "bool" }
        Property { name: "nameFilterDetailsVisible"; revision: 0; type: "bool" }
        Property { name: "options"; revision: 0; type: "Options" }
        Property { name: "supportedSchemes"; revision: 0; type: "QStringList" }
        Signal {
            name: "fileSelected"
            revision: 0
            Parameter { name: "file"; type: "string" }
        }
        Signal {
            name: "filesSelected"
            revision: 0
            Parameter { name: "files"; type: "QStringList" }
        }
        Signal {
            name: "currentChanged"
            revision: 0
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "directoryEntered"
            revision: 0
            Parameter { name: "directory"; type: "string" }
        }
        Signal {
            name: "urlSelected"
            revision: 0
            Parameter { name: "url"; type: "QUrl" }
        }
        Signal {
            name: "urlsSelected"
            revision: 0
            Parameter { name: "urls"; type: "QList<QUrl>" }
        }
        Signal {
            name: "currentUrlChanged"
            revision: 0
            Parameter { name: "url"; type: "QUrl" }
        }
        Signal {
            name: "directoryUrlEntered"
            revision: 0
            Parameter { name: "directory"; type: "QUrl" }
        }
        Signal {
            name: "filterSelected"
            revision: 0
            Parameter { name: "filter"; type: "string" }
        }
        Method {
            name: "_q_pathChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Method { name: "_q_navigateBackward"; revision: 0 }
        Method { name: "_q_navigateForward"; revision: 0 }
        Method { name: "_q_navigateToParent"; revision: 0 }
        Method { name: "_q_createDirectory"; revision: 0 }
        Method { name: "_q_showListView"; revision: 0 }
        Method { name: "_q_showDetailsView"; revision: 0 }
        Method {
            name: "_q_showContextMenu"
            revision: 0
            Parameter { type: "QPoint" }
        }
        Method { name: "_q_renameCurrent"; revision: 0 }
        Method { name: "_q_deleteCurrent"; revision: 0 }
        Method { name: "_q_showHidden"; revision: 0 }
        Method { name: "_q_updateOkButton"; revision: 0 }
        Method {
            name: "_q_currentChanged"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_enterDirectory"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitUrlSelected"
            revision: 0
            Parameter { type: "QUrl" }
        }
        Method {
            name: "_q_emitUrlsSelected"
            revision: 0
            Parameter { type: "QList<QUrl>" }
        }
        Method {
            name: "_q_nativeCurrentChanged"
            revision: 0
            Parameter { type: "QUrl" }
        }
        Method {
            name: "_q_nativeEnterDirectory"
            revision: 0
            Parameter { type: "QUrl" }
        }
        Method {
            name: "_q_goToDirectory"
            revision: 0
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "_q_useNameFilter"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "_q_selectionChanged"; revision: 0 }
        Method {
            name: "_q_goToUrl"
            revision: 0
            Parameter { name: "url"; type: "QUrl" }
        }
        Method { name: "_q_goHome"; revision: 0 }
        Method {
            name: "_q_showHeader"
            revision: 0
            Parameter { type: "QAction"; isPointer: true }
        }
        Method {
            name: "_q_autoCompleteFileName"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "_q_rowsInserted"
            revision: 0
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "_q_fileRenamed"
            revision: 0
            Parameter { name: "path"; type: "string" }
            Parameter { name: "oldName"; type: "string" }
            Parameter { name: "newName"; type: "string" }
        }
    }
    Component {
        file: "qfileinfogatherer_p.h"
        name: "QFileInfoGatherer"
        prototype: "QThread"
        exports: ["qmluic.QtWidgets/QFileInfoGatherer 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "updates"
            revision: 0
            Parameter { name: "directory"; type: "string" }
            Parameter { name: "updates"; type: "QVector<QPair<QString,QFileInfo> >" }
        }
        Signal {
            name: "newListOfFiles"
            revision: 0
            Parameter { name: "directory"; type: "string" }
            Parameter { name: "listOfFiles"; type: "QStringList" }
        }
        Signal {
            name: "nameResolved"
            revision: 0
            Parameter { name: "fileName"; type: "string" }
            Parameter { name: "resolvedName"; type: "string" }
        }
        Signal {
            name: "directoryLoaded"
            revision: 0
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "list"
            revision: 0
            Parameter { name: "directoryPath"; type: "string" }
        }
        Method {
            name: "fetchExtendedInformation"
            revision: 0
            Parameter { name: "path"; type: "string" }
            Parameter { name: "files"; type: "QStringList" }
        }
        Method {
            name: "updateFile"
            revision: 0
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "setResolveSymlinks"
            revision: 0
            Parameter { name: "enable"; type: "bool" }
        }
        Method {
            name: "setIconProvider"
            revision: 0
            Parameter { name: "provider"; type: "QFileIconProvider"; isPointer: true }
        }
        Method { name: "driveAdded"; revision: 0 }
        Method { name: "driveRemoved"; revision: 0 }
    }
    Component {
        file: "qfilesystemmodel.h"
        name: "QFileSystemModel"
        prototype: "QAbstractItemModel"
        exports: ["qmluic.QtWidgets/QFileSystemModel 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Option"
            alias: ""
            values: [
                "DontWatchForChanges",
                "DontResolveSymlinks",
                "DontUseCustomDirectoryIcons"
            ]
        }
        Property { name: "resolveSymlinks"; revision: 0; type: "bool" }
        Property { name: "readOnly"; revision: 0; type: "bool" }
        Property { name: "nameFilterDisables"; revision: 0; type: "bool" }
        Property { name: "options"; revision: 0; type: "Options" }
        Signal {
            name: "rootPathChanged"
            revision: 0
            Parameter { name: "newPath"; type: "string" }
        }
        Signal {
            name: "fileRenamed"
            revision: 0
            Parameter { name: "path"; type: "string" }
            Parameter { name: "oldName"; type: "string" }
            Parameter { name: "newName"; type: "string" }
        }
        Signal {
            name: "directoryLoaded"
            revision: 0
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "_q_directoryChanged"
            revision: 0
            Parameter { name: "directory"; type: "string" }
            Parameter { name: "list"; type: "QStringList" }
        }
        Method { name: "_q_performDelayedSort"; revision: 0 }
        Method {
            name: "_q_fileSystemChanged"
            revision: 0
            Parameter { name: "path"; type: "string" }
            Parameter { type: "QVector<QPair<QString,QFileInfo> >" }
        }
        Method {
            name: "_q_resolvedName"
            revision: 0
            Parameter { name: "fileName"; type: "string" }
            Parameter { name: "resolvedName"; type: "string" }
        }
    }
    Component {
        file: "qflickgesture_p.h"
        name: "QFlickGesture"
        prototype: "QGesture"
        exports: ["qmluic.QtWidgets/QFlickGesture 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qfocusframe.h"
        name: "QFocusFrame"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QFocusFrame 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qfontcombobox.h"
        name: "QFontComboBox"
        prototype: "QComboBox"
        exports: ["qmluic.QtWidgets/QFontComboBox 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "FontFilters"
            alias: "FontFilter"
            isFlag: true
            values: [
                "AllFonts",
                "ScalableFonts",
                "NonScalableFonts",
                "MonospacedFonts",
                "ProportionalFonts"
            ]
        }
        Property { name: "writingSystem"; revision: 0; type: "QFontDatabase::WritingSystem" }
        Property { name: "fontFilters"; revision: 0; type: "FontFilters" }
        Property { name: "currentFont"; revision: 0; type: "QFont" }
        Signal {
            name: "currentFontChanged"
            revision: 0
            Parameter { name: "f"; type: "QFont" }
        }
        Method {
            name: "setCurrentFont"
            revision: 0
            Parameter { name: "f"; type: "QFont" }
        }
        Method {
            name: "_q_currentChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Method { name: "_q_updateModel"; revision: 0 }
    }
    Component {
        file: "qfontdialog.h"
        name: "QFontDialog"
        prototype: "QDialog"
        exports: ["qmluic.QtWidgets/QFontDialog 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "FontDialogOption"
            alias: ""
            values: [
                "NoButtons",
                "DontUseNativeDialog",
                "ScalableFonts",
                "NonScalableFonts",
                "MonospacedFonts",
                "ProportionalFonts"
            ]
        }
        Property { name: "currentFont"; revision: 0; type: "QFont" }
        Property { name: "options"; revision: 0; type: "FontDialogOptions" }
        Signal {
            name: "currentFontChanged"
            revision: 0
            Parameter { name: "font"; type: "QFont" }
        }
        Signal {
            name: "fontSelected"
            revision: 0
            Parameter { name: "font"; type: "QFont" }
        }
        Method {
            name: "_q_sizeChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Method {
            name: "_q_familyHighlighted"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "_q_writingSystemHighlighted"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "_q_styleHighlighted"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sizeHighlighted"
            revision: 0
            Parameter { type: "int" }
        }
        Method { name: "_q_updateSample"; revision: 0 }
    }
    Component {
        file: "qfontcombobox.cpp"
        name: "QFontFamilyDelegate"
        prototype: "QAbstractItemDelegate"
        exports: ["qmluic.QtWidgets/QFontFamilyDelegate 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qfontdialog.cpp"
        name: "QFontListView"
        prototype: "QListView"
        exports: ["qmluic.QtWidgets/QFontListView 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "highlighted"
            revision: 0
            Parameter { type: "int" }
        }
    }
    Component {
        file: "qformlayout.h"
        name: "QFormLayout"
        prototype: "QLayout"
        exports: ["qmluic.QtWidgets/QFormLayout 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "FieldGrowthPolicy"
            alias: ""
            values: [
                "FieldsStayAtSizeHint",
                "ExpandingFieldsGrow",
                "AllNonFixedFieldsGrow"
            ]
        }
        Enum {
            name: "RowWrapPolicy"
            alias: ""
            values: ["DontWrapRows", "WrapLongRows", "WrapAllRows"]
        }
        Enum {
            name: "ItemRole"
            alias: ""
            values: ["LabelRole", "FieldRole", "SpanningRole"]
        }
        Property { name: "fieldGrowthPolicy"; revision: 0; type: "FieldGrowthPolicy" }
        Property { name: "rowWrapPolicy"; revision: 0; type: "RowWrapPolicy" }
        Property { name: "labelAlignment"; revision: 0; type: "Qt::Alignment" }
        Property { name: "formAlignment"; revision: 0; type: "Qt::Alignment" }
        Property { name: "horizontalSpacing"; revision: 0; type: "int" }
        Property { name: "verticalSpacing"; revision: 0; type: "int" }
    }
    Component {
        file: "qframe.h"
        name: "QFrame"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QFrame 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Shape"
            alias: ""
            values: [
                "NoFrame",
                "Box",
                "Panel",
                "WinPanel",
                "HLine",
                "VLine",
                "StyledPanel"
            ]
        }
        Enum {
            name: "Shadow"
            alias: ""
            values: ["Plain", "Raised", "Sunken"]
        }
        Property { name: "frameShape"; revision: 0; type: "Shape" }
        Property { name: "frameShadow"; revision: 0; type: "Shadow" }
        Property { name: "lineWidth"; revision: 0; type: "int" }
        Property { name: "midLineWidth"; revision: 0; type: "int" }
        Property { name: "frameWidth"; revision: 0; type: "int" }
        Property { name: "frameRect"; revision: 0; type: "QRect" }
    }
    Component {
        file: "qfusionstyle_p.h"
        name: "QFusionStyle"
        prototype: "QCommonStyle"
        exports: ["qmluic.QtWidgets/QFusionStyle 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qgesture.h"
        name: "QGesture"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QGesture 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "state"; revision: 0; type: "Qt::GestureState" }
        Property { name: "gestureType"; revision: 0; type: "Qt::GestureType" }
        Property { name: "gestureCancelPolicy"; revision: 0; type: "QGesture::GestureCancelPolicy" }
        Property { name: "hotSpot"; revision: 0; type: "QPointF" }
        Property { name: "hasHotSpot"; revision: 0; type: "bool" }
    }
    Component {
        file: "qgesturemanager_p.h"
        name: "QGestureManager"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QGestureManager 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qgraphicsanchorlayout.h"
        name: "QGraphicsAnchor"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QGraphicsAnchor 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "spacing"; revision: 0; type: "double" }
        Property { name: "sizePolicy"; revision: 0; type: "QSizePolicy::Policy" }
    }
    Component {
        file: "qgraphicseffect.h"
        name: "QGraphicsBlurEffect"
        prototype: "QGraphicsEffect"
        exports: ["qmluic.QtWidgets/QGraphicsBlurEffect 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "BlurHint"
            alias: ""
            isFlag: true
            values: ["PerformanceHint", "QualityHint", "AnimationHint"]
        }
        Enum {
            name: "BlurHints"
            alias: "BlurHint"
            isFlag: true
            values: ["PerformanceHint", "QualityHint", "AnimationHint"]
        }
        Property { name: "blurRadius"; revision: 0; type: "double" }
        Property { name: "blurHints"; revision: 0; type: "BlurHints" }
        Signal {
            name: "blurRadiusChanged"
            revision: 0
            Parameter { name: "blurRadius"; type: "double" }
        }
        Signal {
            name: "blurHintsChanged"
            revision: 0
            Parameter { name: "hints"; type: "BlurHints" }
        }
        Method {
            name: "setBlurRadius"
            revision: 0
            Parameter { name: "blurRadius"; type: "double" }
        }
        Method {
            name: "setBlurHints"
            revision: 0
            Parameter { name: "hints"; type: "BlurHints" }
        }
    }
    Component {
        file: "qgraphicseffect.h"
        name: "QGraphicsColorizeEffect"
        prototype: "QGraphicsEffect"
        exports: ["qmluic.QtWidgets/QGraphicsColorizeEffect 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "color"; revision: 0; type: "QColor" }
        Property { name: "strength"; revision: 0; type: "double" }
        Signal {
            name: "colorChanged"
            revision: 0
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "strengthChanged"
            revision: 0
            Parameter { name: "strength"; type: "double" }
        }
        Method {
            name: "setColor"
            revision: 0
            Parameter { name: "c"; type: "QColor" }
        }
        Method {
            name: "setStrength"
            revision: 0
            Parameter { name: "strength"; type: "double" }
        }
    }
    Component {
        file: "qgraphicseffect.h"
        name: "QGraphicsDropShadowEffect"
        prototype: "QGraphicsEffect"
        exports: ["qmluic.QtWidgets/QGraphicsDropShadowEffect 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "offset"; revision: 0; type: "QPointF" }
        Property { name: "xOffset"; revision: 0; type: "double" }
        Property { name: "yOffset"; revision: 0; type: "double" }
        Property { name: "blurRadius"; revision: 0; type: "double" }
        Property { name: "color"; revision: 0; type: "QColor" }
        Signal {
            name: "offsetChanged"
            revision: 0
            Parameter { name: "offset"; type: "QPointF" }
        }
        Signal {
            name: "blurRadiusChanged"
            revision: 0
            Parameter { name: "blurRadius"; type: "double" }
        }
        Signal {
            name: "colorChanged"
            revision: 0
            Parameter { name: "color"; type: "QColor" }
        }
        Method {
            name: "setOffset"
            revision: 0
            Parameter { name: "ofs"; type: "QPointF" }
        }
        Method {
            name: "setOffset"
            revision: 0
            Parameter { name: "dx"; type: "double" }
            Parameter { name: "dy"; type: "double" }
        }
        Method {
            name: "setOffset"
            revision: 0
            Parameter { name: "d"; type: "double" }
        }
        Method {
            name: "setXOffset"
            revision: 0
            Parameter { name: "dx"; type: "double" }
        }
        Method {
            name: "setYOffset"
            revision: 0
            Parameter { name: "dy"; type: "double" }
        }
        Method {
            name: "setBlurRadius"
            revision: 0
            Parameter { name: "blurRadius"; type: "double" }
        }
        Method {
            name: "setColor"
            revision: 0
            Parameter { name: "color"; type: "QColor" }
        }
    }
    Component {
        file: "qgraphicseffect.h"
        name: "QGraphicsEffect"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QGraphicsEffect 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ChangeFlags"
            alias: "ChangeFlag"
            isFlag: true
            values: [
                "SourceAttached",
                "SourceDetached",
                "SourceBoundingRectChanged",
                "SourceInvalidated"
            ]
        }
        Property { name: "enabled"; revision: 0; type: "bool" }
        Signal {
            name: "enabledChanged"
            revision: 0
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "setEnabled"
            revision: 0
            Parameter { name: "enable"; type: "bool" }
        }
        Method { name: "update"; revision: 0 }
    }
    Component {
        file: "qgraphicseffect_p.h"
        name: "QGraphicsEffectSource"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QGraphicsEffectSource 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qgraphicsitemanimation.h"
        name: "QGraphicsItemAnimation"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QGraphicsItemAnimation 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "setStep"
            revision: 0
            Parameter { name: "x"; type: "double" }
        }
        Method { name: "reset"; revision: 0 }
    }
    Component {
        file: "qgraphicsitem.h"
        name: "QGraphicsObject"
        defaultProperty: "children"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QGraphicsObject 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "parent"; revision: 0; type: "QGraphicsObject"; isPointer: true }
        Property { name: "opacity"; revision: 0; type: "double" }
        Property { name: "enabled"; revision: 0; type: "bool" }
        Property { name: "visible"; revision: 0; type: "bool" }
        Property { name: "pos"; revision: 0; type: "QPointF" }
        Property { name: "x"; revision: 0; type: "double" }
        Property { name: "y"; revision: 0; type: "double" }
        Property { name: "z"; revision: 0; type: "double" }
        Property { name: "rotation"; revision: 0; type: "double" }
        Property { name: "scale"; revision: 0; type: "double" }
        Property { name: "transformOriginPoint"; revision: 0; type: "QPointF" }
        Property { name: "effect"; revision: 0; type: "QGraphicsEffect"; isPointer: true }
        Property { name: "children"; revision: 0; type: "QDeclarativeListProperty<QGraphicsObject>" }
        Property { name: "width"; revision: 0; type: "double" }
        Property { name: "height"; revision: 0; type: "double" }
        Signal { name: "parentChanged"; revision: 0 }
        Signal { name: "opacityChanged"; revision: 0 }
        Signal { name: "visibleChanged"; revision: 0 }
        Signal { name: "enabledChanged"; revision: 0 }
        Signal { name: "xChanged"; revision: 0 }
        Signal { name: "yChanged"; revision: 0 }
        Signal { name: "zChanged"; revision: 0 }
        Signal { name: "rotationChanged"; revision: 0 }
        Signal { name: "scaleChanged"; revision: 0 }
        Signal { name: "childrenChanged"; revision: 0 }
        Signal { name: "widthChanged"; revision: 0 }
        Signal { name: "heightChanged"; revision: 0 }
        Method { name: "updateMicroFocus"; revision: 0 }
    }
    Component {
        file: "qgraphicseffect.h"
        name: "QGraphicsOpacityEffect"
        prototype: "QGraphicsEffect"
        exports: ["qmluic.QtWidgets/QGraphicsOpacityEffect 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "opacity"; revision: 0; type: "double" }
        Property { name: "opacityMask"; revision: 0; type: "QBrush" }
        Signal {
            name: "opacityChanged"
            revision: 0
            Parameter { name: "opacity"; type: "double" }
        }
        Signal {
            name: "opacityMaskChanged"
            revision: 0
            Parameter { name: "mask"; type: "QBrush" }
        }
        Method {
            name: "setOpacity"
            revision: 0
            Parameter { name: "opacity"; type: "double" }
        }
        Method {
            name: "setOpacityMask"
            revision: 0
            Parameter { name: "mask"; type: "QBrush" }
        }
    }
    Component {
        file: "qgraphicsproxywidget.h"
        name: "QGraphicsProxyWidget"
        prototype: "QGraphicsWidget"
        exports: ["qmluic.QtWidgets/QGraphicsProxyWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "newProxyWidget"
            revision: 0
            type: "QGraphicsProxyWidget*"
            Parameter { type: "const QWidget"; isPointer: true }
        }
        Method { name: "_q_removeWidgetSlot"; revision: 0 }
    }
    Component {
        file: "qgraphicstransform.h"
        name: "QGraphicsRotation"
        prototype: "QGraphicsTransform"
        exports: ["qmluic.QtWidgets/QGraphicsRotation 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "origin"; revision: 0; type: "QVector3D" }
        Property { name: "angle"; revision: 0; type: "double" }
        Property { name: "axis"; revision: 0; type: "QVector3D" }
        Signal { name: "originChanged"; revision: 0 }
        Signal { name: "angleChanged"; revision: 0 }
        Signal { name: "axisChanged"; revision: 0 }
    }
    Component {
        file: "qgraphicstransform.h"
        name: "QGraphicsScale"
        prototype: "QGraphicsTransform"
        exports: ["qmluic.QtWidgets/QGraphicsScale 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "origin"; revision: 0; type: "QVector3D" }
        Property { name: "xScale"; revision: 0; type: "double" }
        Property { name: "yScale"; revision: 0; type: "double" }
        Property { name: "zScale"; revision: 0; type: "double" }
        Signal { name: "originChanged"; revision: 0 }
        Signal { name: "xScaleChanged"; revision: 0 }
        Signal { name: "yScaleChanged"; revision: 0 }
        Signal { name: "zScaleChanged"; revision: 0 }
        Signal { name: "scaleChanged"; revision: 0 }
    }
    Component {
        file: "qgraphicsscene.h"
        name: "QGraphicsScene"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QGraphicsScene 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ItemIndexMethod"
            alias: ""
            values: ["BspTreeIndex", "NoIndex"]
        }
        Property { name: "backgroundBrush"; revision: 0; type: "QBrush" }
        Property { name: "foregroundBrush"; revision: 0; type: "QBrush" }
        Property { name: "itemIndexMethod"; revision: 0; type: "ItemIndexMethod" }
        Property { name: "sceneRect"; revision: 0; type: "QRectF" }
        Property { name: "bspTreeDepth"; revision: 0; type: "int" }
        Property { name: "palette"; revision: 0; type: "QPalette" }
        Property { name: "font"; revision: 0; type: "QFont" }
        Property { name: "sortCacheEnabled"; revision: 0; type: "bool" }
        Property { name: "stickyFocus"; revision: 0; type: "bool" }
        Property { name: "minimumRenderSize"; revision: 0; type: "double" }
        Property { name: "focusOnTouch"; revision: 0; type: "bool" }
        Signal {
            name: "changed"
            revision: 0
            Parameter { name: "region"; type: "QList<QRectF>" }
        }
        Signal {
            name: "sceneRectChanged"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
        }
        Signal { name: "selectionChanged"; revision: 0 }
        Signal {
            name: "focusItemChanged"
            revision: 0
            Parameter { name: "newFocus"; type: "QGraphicsItem"; isPointer: true }
            Parameter { name: "oldFocus"; type: "QGraphicsItem"; isPointer: true }
            Parameter { name: "reason"; type: "Qt::FocusReason" }
        }
        Method {
            name: "update"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
        }
        Method { name: "update"; revision: 0 }
        Method {
            name: "invalidate"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
            Parameter { name: "layers"; type: "SceneLayers" }
        }
        Method {
            name: "invalidate"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
        }
        Method { name: "invalidate"; revision: 0 }
        Method { name: "advance"; revision: 0 }
        Method { name: "clearSelection"; revision: 0 }
        Method { name: "clear"; revision: 0 }
        Method {
            name: "focusNextPrevChild"
            revision: 0
            type: "bool"
            Parameter { name: "next"; type: "bool" }
        }
        Method { name: "_q_emitUpdated"; revision: 0 }
        Method { name: "_q_polishItems"; revision: 0 }
        Method { name: "_q_processDirtyItems"; revision: 0 }
        Method { name: "_q_updateScenePosDescendants"; revision: 0 }
    }
    Component {
        file: "qgraphicsscenebsptreeindex_p.h"
        name: "QGraphicsSceneBspTreeIndex"
        prototype: "QGraphicsSceneIndex"
        exports: ["qmluic.QtWidgets/QGraphicsSceneBspTreeIndex 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "bspTreeDepth"; revision: 0; type: "int" }
        Method {
            name: "updateSceneRect"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
        }
        Method { name: "_q_updateSortCache"; revision: 0 }
        Method { name: "_q_updateIndex"; revision: 0 }
    }
    Component {
        file: "qgraphicssceneindex_p.h"
        name: "QGraphicsSceneIndex"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QGraphicsSceneIndex 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "updateSceneRect"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
        }
    }
    Component {
        file: "qgraphicsscenelinearindex_p.h"
        name: "QGraphicsSceneLinearIndex"
        prototype: "QGraphicsSceneIndex"
        exports: ["qmluic.QtWidgets/QGraphicsSceneLinearIndex 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qgraphicsitem.h"
        name: "QGraphicsTextItem"
        defaultProperty: "children"
        prototype: "QGraphicsObject"
        exports: ["qmluic.QtWidgets/QGraphicsTextItem 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "linkActivated"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "linkHovered"
            revision: 0
            Parameter { type: "string" }
        }
        Method {
            name: "_q_updateBoundingRect"
            revision: 0
            Parameter { type: "QSizeF" }
        }
        Method {
            name: "_q_update"
            revision: 0
            Parameter { type: "QRectF" }
        }
        Method {
            name: "_q_ensureVisible"
            revision: 0
            Parameter { type: "QRectF" }
        }
    }
    Component {
        file: "qgraphicstransform.h"
        name: "QGraphicsTransform"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QGraphicsTransform 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "update"; revision: 0 }
    }
    Component {
        file: "qgraphicsview.h"
        name: "QGraphicsView"
        prototype: "QAbstractScrollArea"
        exports: ["qmluic.QtWidgets/QGraphicsView 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ViewportAnchor"
            alias: ""
            values: ["NoAnchor", "AnchorViewCenter", "AnchorUnderMouse"]
        }
        Enum {
            name: "CacheMode"
            alias: "CacheModeFlag"
            isFlag: true
            values: ["CacheNone", "CacheBackground"]
        }
        Enum {
            name: "DragMode"
            alias: ""
            values: ["NoDrag", "ScrollHandDrag", "RubberBandDrag"]
        }
        Enum {
            name: "ViewportUpdateMode"
            alias: ""
            values: [
                "FullViewportUpdate",
                "MinimalViewportUpdate",
                "SmartViewportUpdate",
                "NoViewportUpdate",
                "BoundingRectViewportUpdate"
            ]
        }
        Enum {
            name: "OptimizationFlags"
            alias: "OptimizationFlag"
            isFlag: true
            values: [
                "DontClipPainter",
                "DontSavePainterState",
                "DontAdjustForAntialiasing",
                "IndirectPainting"
            ]
        }
        Property { name: "backgroundBrush"; revision: 0; type: "QBrush" }
        Property { name: "foregroundBrush"; revision: 0; type: "QBrush" }
        Property { name: "interactive"; revision: 0; type: "bool" }
        Property { name: "sceneRect"; revision: 0; type: "QRectF" }
        Property { name: "alignment"; revision: 0; type: "Qt::Alignment" }
        Property { name: "renderHints"; revision: 0; type: "QPainter::RenderHints" }
        Property { name: "dragMode"; revision: 0; type: "DragMode" }
        Property { name: "cacheMode"; revision: 0; type: "CacheMode" }
        Property { name: "transformationAnchor"; revision: 0; type: "ViewportAnchor" }
        Property { name: "resizeAnchor"; revision: 0; type: "ViewportAnchor" }
        Property { name: "viewportUpdateMode"; revision: 0; type: "ViewportUpdateMode" }
        Property { name: "rubberBandSelectionMode"; revision: 0; type: "Qt::ItemSelectionMode" }
        Property { name: "optimizationFlags"; revision: 0; type: "OptimizationFlags" }
        Signal {
            name: "rubberBandChanged"
            revision: 0
            Parameter { name: "viewportRect"; type: "QRect" }
            Parameter { name: "fromScenePoint"; type: "QPointF" }
            Parameter { name: "toScenePoint"; type: "QPointF" }
        }
        Method {
            name: "updateScene"
            revision: 0
            Parameter { name: "rects"; type: "QList<QRectF>" }
        }
        Method {
            name: "invalidateScene"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
            Parameter { name: "layers"; type: "QGraphicsScene::SceneLayers" }
        }
        Method {
            name: "invalidateScene"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
        }
        Method { name: "invalidateScene"; revision: 0 }
        Method {
            name: "updateSceneRect"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
        }
        Method {
            name: "setupViewport"
            revision: 0
            Parameter { name: "widget"; type: "QWidget"; isPointer: true }
        }
        Method {
            name: "_q_setViewportCursor"
            revision: 0
            Parameter { type: "QCursor" }
        }
        Method { name: "_q_unsetViewportCursor"; revision: 0 }
    }
    Component {
        file: "qgraphicswidget.h"
        name: "QGraphicsWidget"
        defaultProperty: "children"
        prototype: "QGraphicsObject"
        exports: ["qmluic.QtWidgets/QGraphicsWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "palette"; revision: 0; type: "QPalette" }
        Property { name: "font"; revision: 0; type: "QFont" }
        Property { name: "layoutDirection"; revision: 0; type: "Qt::LayoutDirection" }
        Property { name: "size"; revision: 0; type: "QSizeF" }
        Property { name: "minimumSize"; revision: 0; type: "QSizeF" }
        Property { name: "preferredSize"; revision: 0; type: "QSizeF" }
        Property { name: "maximumSize"; revision: 0; type: "QSizeF" }
        Property { name: "sizePolicy"; revision: 0; type: "QSizePolicy" }
        Property { name: "focusPolicy"; revision: 0; type: "Qt::FocusPolicy" }
        Property { name: "windowFlags"; revision: 0; type: "Qt::WindowFlags" }
        Property { name: "windowTitle"; revision: 0; type: "string" }
        Property { name: "geometry"; revision: 0; type: "QRectF" }
        Property { name: "autoFillBackground"; revision: 0; type: "bool" }
        Property { name: "layout"; revision: 0; type: "QGraphicsLayout"; isPointer: true }
        Signal { name: "geometryChanged"; revision: 0 }
        Signal { name: "layoutChanged"; revision: 0 }
        Method { name: "close"; revision: 0; type: "bool" }
    }
    Component {
        file: "qgridlayout.h"
        name: "QGridLayout"
        prototype: "QLayout"
        exports: ["qmluic.QtWidgets/QGridLayout 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "horizontalSpacing"; revision: 0; type: "int" }
        Property { name: "verticalSpacing"; revision: 0; type: "int" }
    }
    Component {
        file: "qgroupbox.h"
        name: "QGroupBox"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QGroupBox 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "title"; revision: 0; type: "string" }
        Property { name: "alignment"; revision: 0; type: "Qt::Alignment" }
        Property { name: "flat"; revision: 0; type: "bool" }
        Property { name: "checkable"; revision: 0; type: "bool" }
        Property { name: "checked"; revision: 0; type: "bool" }
        Signal {
            name: "clicked"
            revision: 0
            Parameter { name: "checked"; type: "bool" }
        }
        Signal { name: "clicked"; revision: 0 }
        Signal {
            name: "toggled"
            revision: 0
            Parameter { type: "bool" }
        }
        Method {
            name: "setChecked"
            revision: 0
            Parameter { name: "checked"; type: "bool" }
        }
        Method {
            name: "_q_setChildrenEnabled"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
    }
    Component {
        file: "qboxlayout.h"
        name: "QHBoxLayout"
        prototype: "QBoxLayout"
        exports: ["qmluic.QtWidgets/QHBoxLayout 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qheaderview.h"
        name: "QHeaderView"
        prototype: "QAbstractItemView"
        exports: ["qmluic.QtWidgets/QHeaderView 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ResizeMode"
            alias: ""
            values: [
                "Interactive",
                "Stretch",
                "Fixed",
                "ResizeToContents",
                "Custom"
            ]
        }
        Property { name: "firstSectionMovable"; revision: 0; type: "bool" }
        Property { name: "showSortIndicator"; revision: 0; type: "bool" }
        Property { name: "highlightSections"; revision: 0; type: "bool" }
        Property { name: "stretchLastSection"; revision: 0; type: "bool" }
        Property { name: "cascadingSectionResizes"; revision: 0; type: "bool" }
        Property { name: "defaultSectionSize"; revision: 0; type: "int" }
        Property { name: "minimumSectionSize"; revision: 0; type: "int" }
        Property { name: "maximumSectionSize"; revision: 0; type: "int" }
        Property { name: "defaultAlignment"; revision: 0; type: "Qt::Alignment" }
        Signal {
            name: "sectionMoved"
            revision: 0
            Parameter { name: "logicalIndex"; type: "int" }
            Parameter { name: "oldVisualIndex"; type: "int" }
            Parameter { name: "newVisualIndex"; type: "int" }
        }
        Signal {
            name: "sectionResized"
            revision: 0
            Parameter { name: "logicalIndex"; type: "int" }
            Parameter { name: "oldSize"; type: "int" }
            Parameter { name: "newSize"; type: "int" }
        }
        Signal {
            name: "sectionPressed"
            revision: 0
            Parameter { name: "logicalIndex"; type: "int" }
        }
        Signal {
            name: "sectionClicked"
            revision: 0
            Parameter { name: "logicalIndex"; type: "int" }
        }
        Signal {
            name: "sectionEntered"
            revision: 0
            Parameter { name: "logicalIndex"; type: "int" }
        }
        Signal {
            name: "sectionDoubleClicked"
            revision: 0
            Parameter { name: "logicalIndex"; type: "int" }
        }
        Signal {
            name: "sectionCountChanged"
            revision: 0
            Parameter { name: "oldCount"; type: "int" }
            Parameter { name: "newCount"; type: "int" }
        }
        Signal {
            name: "sectionHandleDoubleClicked"
            revision: 0
            Parameter { name: "logicalIndex"; type: "int" }
        }
        Signal { name: "geometriesChanged"; revision: 0 }
        Signal {
            name: "sortIndicatorChanged"
            revision: 0
            Parameter { name: "logicalIndex"; type: "int" }
            Parameter { name: "order"; type: "Qt::SortOrder" }
        }
        Method {
            name: "setOffset"
            revision: 0
            Parameter { name: "offset"; type: "int" }
        }
        Method {
            name: "setOffsetToSectionPosition"
            revision: 0
            Parameter { name: "visualIndex"; type: "int" }
        }
        Method { name: "setOffsetToLastSection"; revision: 0 }
        Method {
            name: "headerDataChanged"
            revision: 0
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "logicalFirst"; type: "int" }
            Parameter { name: "logicalLast"; type: "int" }
        }
        Method {
            name: "updateSection"
            revision: 0
            Parameter { name: "logicalIndex"; type: "int" }
        }
        Method { name: "resizeSections"; revision: 0 }
        Method {
            name: "sectionsInserted"
            revision: 0
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "logicalFirst"; type: "int" }
            Parameter { name: "logicalLast"; type: "int" }
        }
        Method {
            name: "sectionsAboutToBeRemoved"
            revision: 0
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "logicalFirst"; type: "int" }
            Parameter { name: "logicalLast"; type: "int" }
        }
        Method {
            name: "_q_sectionsRemoved"
            revision: 0
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "logicalFirst"; type: "int" }
            Parameter { name: "logicalLast"; type: "int" }
        }
        Method {
            name: "_q_sectionsAboutToBeMoved"
            revision: 0
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "logicalStart"; type: "int" }
            Parameter { name: "logicalEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "logicalDestination"; type: "int" }
        }
        Method {
            name: "_q_sectionsMoved"
            revision: 0
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "logicalStart"; type: "int" }
            Parameter { name: "logicalEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "logicalDestination"; type: "int" }
        }
        Method {
            name: "_q_sectionsAboutToBeChanged"
            revision: 0
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Method {
            name: "_q_sectionsAboutToBeChanged"
            revision: 0
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Method { name: "_q_sectionsAboutToBeChanged"; revision: 0 }
        Method {
            name: "_q_sectionsChanged"
            revision: 0
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Method {
            name: "_q_sectionsChanged"
            revision: 0
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Method { name: "_q_sectionsChanged"; revision: 0 }
    }
    Component {
        file: "qinputdialog.h"
        name: "QInputDialog"
        prototype: "QDialog"
        exports: ["qmluic.QtWidgets/QInputDialog 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "textValueChanged"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Signal {
            name: "textValueSelected"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Signal {
            name: "intValueChanged"
            revision: 0
            Parameter { name: "value"; type: "int" }
        }
        Signal {
            name: "intValueSelected"
            revision: 0
            Parameter { name: "value"; type: "int" }
        }
        Signal {
            name: "doubleValueChanged"
            revision: 0
            Parameter { name: "value"; type: "double" }
        }
        Signal {
            name: "doubleValueSelected"
            revision: 0
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "_q_textChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Method { name: "_q_plainTextEditTextChanged"; revision: 0 }
        Method {
            name: "_q_currentRowChanged"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "QModelIndex" }
        }
    }
    Component {
        file: "qinputdialog.cpp"
        name: "QInputDialogDoubleSpinBox"
        prototype: "QDoubleSpinBox"
        exports: ["qmluic.QtWidgets/QInputDialogDoubleSpinBox 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "textChanged"
            revision: 0
            Parameter { type: "bool" }
        }
        Method { name: "notifyTextChanged"; revision: 0 }
    }
    Component {
        file: "qinputdialog.cpp"
        name: "QInputDialogSpinBox"
        prototype: "QSpinBox"
        exports: ["qmluic.QtWidgets/QInputDialogSpinBox 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "textChanged"
            revision: 0
            Parameter { type: "bool" }
        }
        Method { name: "notifyTextChanged"; revision: 0 }
    }
    Component {
        file: "qitemdelegate.h"
        name: "QItemDelegate"
        prototype: "QAbstractItemDelegate"
        exports: ["qmluic.QtWidgets/QItemDelegate 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "clipping"; revision: 0; type: "bool" }
    }
    Component {
        file: "qkeyeventtransition.h"
        name: "QKeyEventTransition"
        prototype: "QEventTransition"
        exports: [
            "qmluic.QtWidgets/QKeyEventTransition 5.0",
            "qmluic.QtWidgets/QKeyEventTransition 5.1"
        ]
        exportMetaObjectRevisions: [0, 1]
        Property { name: "key"; revision: 0; type: "int" }
        Property { name: "modifierMask"; revision: 0; type: "Qt::KeyboardModifiers" }
    }
    Component {
        file: "qkeysequenceedit.h"
        name: "QKeySequenceEdit"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QKeySequenceEdit 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "keySequence"; revision: 0; type: "QKeySequence" }
        Signal { name: "editingFinished"; revision: 0 }
        Signal {
            name: "keySequenceChanged"
            revision: 0
            Parameter { name: "keySequence"; type: "QKeySequence" }
        }
        Method {
            name: "setKeySequence"
            revision: 0
            Parameter { name: "keySequence"; type: "QKeySequence" }
        }
        Method { name: "clear"; revision: 0 }
    }
    Component {
        file: "qlcdnumber.h"
        name: "QLCDNumber"
        prototype: "QFrame"
        exports: ["qmluic.QtWidgets/QLCDNumber 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Mode"
            alias: ""
            values: ["Hex", "Dec", "Oct", "Bin"]
        }
        Enum {
            name: "SegmentStyle"
            alias: ""
            values: ["Outline", "Filled", "Flat"]
        }
        Property { name: "smallDecimalPoint"; revision: 0; type: "bool" }
        Property { name: "digitCount"; revision: 0; type: "int" }
        Property { name: "mode"; revision: 0; type: "Mode" }
        Property { name: "segmentStyle"; revision: 0; type: "SegmentStyle" }
        Property { name: "value"; revision: 0; type: "double" }
        Property { name: "intValue"; revision: 0; type: "int" }
        Signal { name: "overflow"; revision: 0 }
        Method {
            name: "display"
            revision: 0
            Parameter { name: "str"; type: "string" }
        }
        Method {
            name: "display"
            revision: 0
            Parameter { name: "num"; type: "int" }
        }
        Method {
            name: "display"
            revision: 0
            Parameter { name: "num"; type: "double" }
        }
        Method { name: "setHexMode"; revision: 0 }
        Method { name: "setDecMode"; revision: 0 }
        Method { name: "setOctMode"; revision: 0 }
        Method { name: "setBinMode"; revision: 0 }
        Method {
            name: "setSmallDecimalPoint"
            revision: 0
            Parameter { type: "bool" }
        }
    }
    Component {
        file: "qlabel.h"
        name: "QLabel"
        prototype: "QFrame"
        exports: ["qmluic.QtWidgets/QLabel 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "text"; revision: 0; type: "string" }
        Property { name: "textFormat"; revision: 0; type: "Qt::TextFormat" }
        Property { name: "pixmap"; revision: 0; type: "QPixmap" }
        Property { name: "scaledContents"; revision: 0; type: "bool" }
        Property { name: "alignment"; revision: 0; type: "Qt::Alignment" }
        Property { name: "wordWrap"; revision: 0; type: "bool" }
        Property { name: "margin"; revision: 0; type: "int" }
        Property { name: "indent"; revision: 0; type: "int" }
        Property { name: "openExternalLinks"; revision: 0; type: "bool" }
        Property { name: "textInteractionFlags"; revision: 0; type: "Qt::TextInteractionFlags" }
        Property { name: "hasSelectedText"; revision: 0; type: "bool" }
        Property { name: "selectedText"; revision: 0; type: "string" }
        Signal {
            name: "linkActivated"
            revision: 0
            Parameter { name: "link"; type: "string" }
        }
        Signal {
            name: "linkHovered"
            revision: 0
            Parameter { name: "link"; type: "string" }
        }
        Method {
            name: "setText"
            revision: 0
            Parameter { type: "string" }
        }
        Method {
            name: "setPixmap"
            revision: 0
            Parameter { type: "QPixmap" }
        }
        Method {
            name: "setPicture"
            revision: 0
            Parameter { type: "QPicture" }
        }
        Method {
            name: "setMovie"
            revision: 0
            Parameter { name: "movie"; type: "QMovie"; isPointer: true }
        }
        Method {
            name: "setNum"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "setNum"
            revision: 0
            Parameter { type: "double" }
        }
        Method { name: "clear"; revision: 0 }
        Method {
            name: "_q_movieUpdated"
            revision: 0
            Parameter { type: "QRect" }
        }
        Method {
            name: "_q_movieResized"
            revision: 0
            Parameter { type: "QSize" }
        }
        Method {
            name: "_q_linkHovered"
            revision: 0
            Parameter { type: "string" }
        }
        Method { name: "_q_buddyDeleted"; revision: 0 }
    }
    Component {
        file: "qlayout.h"
        name: "QLayout"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QLayout 5.0"]
        exportMetaObjectRevisions: [0]
        attachedType: "QLayoutAttached"
        Enum {
            name: "SizeConstraint"
            alias: ""
            values: [
                "SetDefaultConstraint",
                "SetNoConstraint",
                "SetMinimumSize",
                "SetFixedSize",
                "SetMaximumSize",
                "SetMinAndMaxSize"
            ]
        }
        Property { name: "margin"; revision: 0; type: "int" }
        Property { name: "spacing"; revision: 0; type: "int" }
        Property { name: "sizeConstraint"; revision: 0; type: "SizeConstraint" }
        Property { name: "contentsMargins"; revision: 0; type: "QMargins" }
    }
    Component {
        name: "QLayoutAttached"
        Property { name: "alignment"; revision: 0; type: "Qt::Alignment" }
        Property { name: "column"; revision: 0; type: "int" }
        Property { name: "columnMinimumWidth"; revision: 0; type: "int" }
        Property { name: "columnSpan"; revision: 0; type: "int" }
        Property { name: "columnStretch"; revision: 0; type: "int" }
        Property { name: "row"; revision: 0; type: "int" }
        Property { name: "rowMinimumHeight"; revision: 0; type: "int" }
        Property { name: "rowSpan"; revision: 0; type: "int" }
        Property { name: "rowStretch"; revision: 0; type: "int" }
    }
    Component {
        file: "qlineedit.h"
        name: "QLineEdit"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QLineEdit 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ActionPosition"
            alias: ""
            values: ["LeadingPosition", "TrailingPosition"]
        }
        Enum {
            name: "EchoMode"
            alias: ""
            values: ["Normal", "NoEcho", "Password", "PasswordEchoOnEdit"]
        }
        Property { name: "inputMask"; revision: 0; type: "string" }
        Property { name: "text"; revision: 0; type: "string" }
        Property { name: "maxLength"; revision: 0; type: "int" }
        Property { name: "frame"; revision: 0; type: "bool" }
        Property { name: "echoMode"; revision: 0; type: "EchoMode" }
        Property { name: "displayText"; revision: 0; type: "string" }
        Property { name: "cursorPosition"; revision: 0; type: "int" }
        Property { name: "alignment"; revision: 0; type: "Qt::Alignment" }
        Property { name: "modified"; revision: 0; type: "bool" }
        Property { name: "hasSelectedText"; revision: 0; type: "bool" }
        Property { name: "selectedText"; revision: 0; type: "string" }
        Property { name: "dragEnabled"; revision: 0; type: "bool" }
        Property { name: "readOnly"; revision: 0; type: "bool" }
        Property { name: "undoAvailable"; revision: 0; type: "bool" }
        Property { name: "redoAvailable"; revision: 0; type: "bool" }
        Property { name: "acceptableInput"; revision: 0; type: "bool" }
        Property { name: "placeholderText"; revision: 0; type: "string" }
        Property { name: "cursorMoveStyle"; revision: 0; type: "Qt::CursorMoveStyle" }
        Property { name: "clearButtonEnabled"; revision: 0; type: "bool" }
        Signal {
            name: "textChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "textEdited"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "cursorPositionChanged"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Signal { name: "returnPressed"; revision: 0 }
        Signal { name: "editingFinished"; revision: 0 }
        Signal { name: "selectionChanged"; revision: 0 }
        Signal { name: "inputRejected"; revision: 0 }
        Method {
            name: "setText"
            revision: 0
            Parameter { type: "string" }
        }
        Method { name: "clear"; revision: 0 }
        Method { name: "selectAll"; revision: 0 }
        Method { name: "undo"; revision: 0 }
        Method { name: "redo"; revision: 0 }
        Method { name: "cut"; revision: 0 }
        Method { name: "copy"; revision: 0 }
        Method { name: "paste"; revision: 0 }
        Method { name: "_q_handleWindowActivate"; revision: 0 }
        Method {
            name: "_q_textEdited"
            revision: 0
            Parameter { type: "string" }
        }
        Method {
            name: "_q_cursorPositionChanged"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_completionHighlighted"
            revision: 0
            Parameter { type: "string" }
        }
        Method { name: "_q_selectionChanged"; revision: 0 }
        Method {
            name: "_q_updateNeeded"
            revision: 0
            Parameter { type: "QRect" }
        }
        Method {
            name: "_q_textChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Method { name: "_q_clearButtonClicked"; revision: 0 }
        Method {
            name: "inputMethodQuery"
            revision: 0
            type: "QVariant"
            Parameter { name: "property"; type: "Qt::InputMethodQuery" }
            Parameter { name: "argument"; type: "QVariant" }
        }
    }
    Component {
        file: "qlineedit_p.h"
        name: "QLineEditIconButton"
        prototype: "QToolButton"
        exports: ["qmluic.QtWidgets/QLineEditIconButton 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "opacity"; revision: 0; type: "double" }
        Method { name: "updateCursor"; revision: 0 }
        Method { name: "onAnimationFinished"; revision: 0 }
    }
    Component {
        file: "qlistwidget_p.h"
        name: "QListModel"
        prototype: "QAbstractListModel"
        exports: ["qmluic.QtWidgets/QListModel 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qlistview.h"
        name: "QListView"
        prototype: "QAbstractItemView"
        exports: ["qmluic.QtWidgets/QListView 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Movement"
            alias: ""
            values: ["Static", "Free", "Snap"]
        }
        Enum {
            name: "Flow"
            alias: ""
            values: ["LeftToRight", "TopToBottom"]
        }
        Enum {
            name: "ResizeMode"
            alias: ""
            values: ["Fixed", "Adjust"]
        }
        Enum {
            name: "LayoutMode"
            alias: ""
            values: ["SinglePass", "Batched"]
        }
        Enum {
            name: "ViewMode"
            alias: ""
            values: ["ListMode", "IconMode"]
        }
        Property { name: "movement"; revision: 0; type: "Movement" }
        Property { name: "flow"; revision: 0; type: "Flow" }
        Property { name: "isWrapping"; revision: 0; type: "bool" }
        Property { name: "resizeMode"; revision: 0; type: "ResizeMode" }
        Property { name: "layoutMode"; revision: 0; type: "LayoutMode" }
        Property { name: "spacing"; revision: 0; type: "int" }
        Property { name: "gridSize"; revision: 0; type: "QSize" }
        Property { name: "viewMode"; revision: 0; type: "ViewMode" }
        Property { name: "modelColumn"; revision: 0; type: "int" }
        Property { name: "uniformItemSizes"; revision: 0; type: "bool" }
        Property { name: "batchSize"; revision: 0; type: "int" }
        Property { name: "wordWrap"; revision: 0; type: "bool" }
        Property { name: "selectionRectVisible"; revision: 0; type: "bool" }
        Property { name: "itemAlignment"; revision: 0; type: "Qt::Alignment" }
        Signal {
            name: "indexesMoved"
            revision: 0
            Parameter { name: "indexes"; type: "QModelIndexList" }
        }
    }
    Component {
        file: "qlistwidget.h"
        name: "QListWidget"
        prototype: "QListView"
        exports: ["qmluic.QtWidgets/QListWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; revision: 0; type: "int" }
        Property { name: "currentRow"; revision: 0; type: "int" }
        Property { name: "sortingEnabled"; revision: 0; type: "bool" }
        Signal {
            name: "itemPressed"
            revision: 0
            Parameter { name: "item"; type: "QListWidgetItem"; isPointer: true }
        }
        Signal {
            name: "itemClicked"
            revision: 0
            Parameter { name: "item"; type: "QListWidgetItem"; isPointer: true }
        }
        Signal {
            name: "itemDoubleClicked"
            revision: 0
            Parameter { name: "item"; type: "QListWidgetItem"; isPointer: true }
        }
        Signal {
            name: "itemActivated"
            revision: 0
            Parameter { name: "item"; type: "QListWidgetItem"; isPointer: true }
        }
        Signal {
            name: "itemEntered"
            revision: 0
            Parameter { name: "item"; type: "QListWidgetItem"; isPointer: true }
        }
        Signal {
            name: "itemChanged"
            revision: 0
            Parameter { name: "item"; type: "QListWidgetItem"; isPointer: true }
        }
        Signal {
            name: "currentItemChanged"
            revision: 0
            Parameter { name: "current"; type: "QListWidgetItem"; isPointer: true }
            Parameter { name: "previous"; type: "QListWidgetItem"; isPointer: true }
        }
        Signal {
            name: "currentTextChanged"
            revision: 0
            Parameter { name: "currentText"; type: "string" }
        }
        Signal {
            name: "currentRowChanged"
            revision: 0
            Parameter { name: "currentRow"; type: "int" }
        }
        Signal { name: "itemSelectionChanged"; revision: 0 }
        Method {
            name: "scrollToItem"
            revision: 0
            Parameter { name: "item"; type: "const QListWidgetItem"; isPointer: true }
            Parameter { name: "hint"; type: "QAbstractItemView::ScrollHint" }
        }
        Method {
            name: "scrollToItem"
            revision: 0
            Parameter { name: "item"; type: "const QListWidgetItem"; isPointer: true }
        }
        Method { name: "clear"; revision: 0 }
        Method {
            name: "_q_emitItemPressed"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemClicked"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemDoubleClicked"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemActivated"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemEntered"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemChanged"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitCurrentItemChanged"
            revision: 0
            Parameter { name: "previous"; type: "QModelIndex" }
            Parameter { name: "current"; type: "QModelIndex" }
        }
        Method { name: "_q_sort"; revision: 0 }
        Method {
            name: "_q_dataChanged"
            revision: 0
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
    }
    Component {
        file: "qlistwidget.cpp"
        name: "QListWidgetMimeData"
        prototype: "QMimeData"
        exports: ["qmluic.QtWidgets/QListWidgetMimeData 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qmainwindow.h"
        name: "QMainWindow"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QMainWindow 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DockOption"
            alias: ""
            values: [
                "AnimatedDocks",
                "AllowNestedDocks",
                "AllowTabbedDocks",
                "ForceTabbedDocks",
                "VerticalTabs",
                "GroupedDragging"
            ]
        }
        Enum {
            name: "DockOptions"
            alias: "DockOption"
            isFlag: true
            values: [
                "AnimatedDocks",
                "AllowNestedDocks",
                "AllowTabbedDocks",
                "ForceTabbedDocks",
                "VerticalTabs",
                "GroupedDragging"
            ]
        }
        Property { name: "iconSize"; revision: 0; type: "QSize" }
        Property { name: "toolButtonStyle"; revision: 0; type: "Qt::ToolButtonStyle" }
        Property { name: "animated"; revision: 0; type: "bool" }
        Property { name: "documentMode"; revision: 0; type: "bool" }
        Property { name: "tabShape"; revision: 0; type: "QTabWidget::TabShape" }
        Property { name: "dockNestingEnabled"; revision: 0; type: "bool" }
        Property { name: "dockOptions"; revision: 0; type: "DockOptions" }
        Property { name: "unifiedTitleAndToolBarOnMac"; revision: 0; type: "bool" }
        Signal {
            name: "iconSizeChanged"
            revision: 0
            Parameter { name: "iconSize"; type: "QSize" }
        }
        Signal {
            name: "toolButtonStyleChanged"
            revision: 0
            Parameter { name: "toolButtonStyle"; type: "Qt::ToolButtonStyle" }
        }
        Signal {
            name: "tabifiedDockWidgetActivated"
            revision: 0
            Parameter { name: "dockWidget"; type: "QDockWidget"; isPointer: true }
        }
        Method {
            name: "setAnimated"
            revision: 0
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "setDockNestingEnabled"
            revision: 0
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "setUnifiedTitleAndToolBarOnMac"
            revision: 0
            Parameter { name: "set"; type: "bool" }
        }
    }
    Component {
        file: "qmainwindowlayout_p.h"
        name: "QMainWindowLayout"
        prototype: "QLayout"
        exports: ["qmluic.QtWidgets/QMainWindowLayout 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "updateGapIndicator"; revision: 0 }
        Method { name: "tabChanged"; revision: 0 }
        Method {
            name: "tabMoved"
            revision: 0
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
    }
    Component {
        file: "qmdisubwindow.cpp"
        name: "QMdi::ControlLabel"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/ControlLabel 5.0"]
        exportMetaObjectRevisions: [0]
        Signal { name: "_q_clicked"; revision: 0 }
        Signal { name: "_q_doubleClicked"; revision: 0 }
    }
    Component {
        file: "qmdisubwindow.cpp"
        name: "QMdi::ControllerWidget"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/ControllerWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Signal { name: "_q_minimize"; revision: 0 }
        Signal { name: "_q_restore"; revision: 0 }
        Signal { name: "_q_close"; revision: 0 }
    }
    Component {
        file: "qmdiarea.h"
        name: "QMdiArea"
        prototype: "QAbstractScrollArea"
        exports: ["qmluic.QtWidgets/QMdiArea 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "WindowOrder"
            alias: ""
            values: [
                "CreationOrder",
                "StackingOrder",
                "ActivationHistoryOrder"
            ]
        }
        Enum {
            name: "ViewMode"
            alias: ""
            values: ["SubWindowView", "TabbedView"]
        }
        Property { name: "background"; revision: 0; type: "QBrush" }
        Property { name: "activationOrder"; revision: 0; type: "WindowOrder" }
        Property { name: "viewMode"; revision: 0; type: "ViewMode" }
        Property { name: "documentMode"; revision: 0; type: "bool" }
        Property { name: "tabsClosable"; revision: 0; type: "bool" }
        Property { name: "tabsMovable"; revision: 0; type: "bool" }
        Property { name: "tabShape"; revision: 0; type: "QTabWidget::TabShape" }
        Property { name: "tabPosition"; revision: 0; type: "QTabWidget::TabPosition" }
        Signal {
            name: "subWindowActivated"
            revision: 0
            Parameter { type: "QMdiSubWindow"; isPointer: true }
        }
        Method {
            name: "setActiveSubWindow"
            revision: 0
            Parameter { name: "window"; type: "QMdiSubWindow"; isPointer: true }
        }
        Method { name: "tileSubWindows"; revision: 0 }
        Method { name: "cascadeSubWindows"; revision: 0 }
        Method { name: "closeActiveSubWindow"; revision: 0 }
        Method { name: "closeAllSubWindows"; revision: 0 }
        Method { name: "activateNextSubWindow"; revision: 0 }
        Method { name: "activatePreviousSubWindow"; revision: 0 }
        Method {
            name: "setupViewport"
            revision: 0
            Parameter { name: "viewport"; type: "QWidget"; isPointer: true }
        }
        Method { name: "_q_deactivateAllWindows"; revision: 0 }
        Method {
            name: "_q_processWindowStateChanged"
            revision: 0
            Parameter { type: "Qt::WindowStates" }
            Parameter { type: "Qt::WindowStates" }
        }
        Method {
            name: "_q_currentTabChanged"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "_q_closeTab"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "_q_moveTab"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
    }
    Component {
        file: "qmdisubwindow.h"
        name: "QMdiSubWindow"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QMdiSubWindow 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "keyboardSingleStep"; revision: 0; type: "int" }
        Property { name: "keyboardPageStep"; revision: 0; type: "int" }
        Signal {
            name: "windowStateChanged"
            revision: 0
            Parameter { name: "oldState"; type: "Qt::WindowStates" }
            Parameter { name: "newState"; type: "Qt::WindowStates" }
        }
        Signal { name: "aboutToActivate"; revision: 0 }
        Method { name: "showSystemMenu"; revision: 0 }
        Method { name: "showShaded"; revision: 0 }
        Method { name: "_q_updateStaysOnTopHint"; revision: 0 }
        Method { name: "_q_enterInteractiveMode"; revision: 0 }
        Method {
            name: "_q_processFocusChanged"
            revision: 0
            Parameter { type: "QWidget"; isPointer: true }
            Parameter { type: "QWidget"; isPointer: true }
        }
    }
    Component {
        file: "qmenu.h"
        name: "QMenu"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QMenu 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "tearOffEnabled"; revision: 0; type: "bool" }
        Property { name: "title"; revision: 0; type: "string" }
        Property { name: "icon"; revision: 0; type: "QIcon" }
        Property { name: "separatorsCollapsible"; revision: 0; type: "bool" }
        Property { name: "toolTipsVisible"; revision: 0; type: "bool" }
        Signal { name: "aboutToShow"; revision: 0 }
        Signal { name: "aboutToHide"; revision: 0 }
        Signal {
            name: "triggered"
            revision: 0
            Parameter { name: "action"; type: "QAction"; isPointer: true }
        }
        Signal {
            name: "hovered"
            revision: 0
            Parameter { name: "action"; type: "QAction"; isPointer: true }
        }
        Method { name: "internalDelayedPopup"; revision: 0 }
        Method { name: "_q_actionTriggered"; revision: 0 }
        Method { name: "_q_actionHovered"; revision: 0 }
        Method { name: "_q_overrideMenuActionDestroyed"; revision: 0 }
        Method { name: "_q_platformMenuAboutToShow"; revision: 0 }
    }
    Component {
        file: "qmenubar.h"
        name: "QMenuBar"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QMenuBar 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "defaultUp"; revision: 0; type: "bool" }
        Property { name: "nativeMenuBar"; revision: 0; type: "bool" }
        Signal {
            name: "triggered"
            revision: 0
            Parameter { name: "action"; type: "QAction"; isPointer: true }
        }
        Signal {
            name: "hovered"
            revision: 0
            Parameter { name: "action"; type: "QAction"; isPointer: true }
        }
        Method {
            name: "setVisible"
            revision: 0
            Parameter { name: "visible"; type: "bool" }
        }
        Method { name: "_q_actionTriggered"; revision: 0 }
        Method { name: "_q_actionHovered"; revision: 0 }
        Method {
            name: "_q_internalShortcutActivated"
            revision: 0
            Parameter { type: "int" }
        }
        Method { name: "_q_updateLayout"; revision: 0 }
    }
    Component {
        file: "qmessagebox.h"
        name: "QMessageBox"
        prototype: "QDialog"
        exports: ["qmluic.QtWidgets/QMessageBox 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Icon"
            alias: ""
            values: [
                "NoIcon",
                "Information",
                "Warning",
                "Critical",
                "Question"
            ]
        }
        Enum {
            name: "StandardButtons"
            alias: "StandardButton"
            isFlag: true
            values: [
                "NoButton",
                "Ok",
                "Save",
                "SaveAll",
                "Open",
                "Yes",
                "YesToAll",
                "No",
                "NoToAll",
                "Abort",
                "Retry",
                "Ignore",
                "Close",
                "Cancel",
                "Discard",
                "Help",
                "Apply",
                "Reset",
                "RestoreDefaults",
                "FirstButton",
                "LastButton",
                "YesAll",
                "NoAll",
                "Default",
                "Escape",
                "FlagMask",
                "ButtonMask"
            ]
        }
        Property { name: "text"; revision: 0; type: "string" }
        Property { name: "icon"; revision: 0; type: "Icon" }
        Property { name: "iconPixmap"; revision: 0; type: "QPixmap" }
        Property { name: "textFormat"; revision: 0; type: "Qt::TextFormat" }
        Property { name: "standardButtons"; revision: 0; type: "StandardButtons" }
        Property { name: "detailedText"; revision: 0; type: "string" }
        Property { name: "informativeText"; revision: 0; type: "string" }
        Property { name: "textInteractionFlags"; revision: 0; type: "Qt::TextInteractionFlags" }
        Signal {
            name: "buttonClicked"
            revision: 0
            Parameter { name: "button"; type: "QAbstractButton"; isPointer: true }
        }
        Method {
            name: "_q_buttonClicked"
            revision: 0
            Parameter { type: "QAbstractButton"; isPointer: true }
        }
        Method {
            name: "_q_clicked"
            revision: 0
            Parameter { type: "QPlatformDialogHelper::StandardButton" }
            Parameter { type: "QPlatformDialogHelper::ButtonRole" }
        }
    }
    Component {
        file: "qmessagebox.cpp"
        name: "QMessageBoxDetailsText"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QMessageBoxDetailsText 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "textCopyAvailable"
            revision: 0
            Parameter { name: "available"; type: "bool" }
        }
    }
    Component { name: "QMimeData"; prototype: "QObject" }
    Component {
        file: "qmouseeventtransition.h"
        name: "QMouseEventTransition"
        prototype: "QEventTransition"
        exports: [
            "qmluic.QtWidgets/QMouseEventTransition 5.0",
            "qmluic.QtWidgets/QMouseEventTransition 5.1"
        ]
        exportMetaObjectRevisions: [0, 1]
        Property { name: "button"; revision: 0; type: "Qt::MouseButton" }
        Property { name: "modifierMask"; revision: 0; type: "Qt::KeyboardModifiers" }
    }
    Component {
        file: "qstyleanimation_p.h"
        name: "QNumberStyleAnimation"
        prototype: "QStyleAnimation"
        exports: ["qmluic.QtWidgets/QNumberStyleAnimation 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QObject"
        Property { name: "objectName"; type: "string" }
        Signal {
            name: "destroyed"
            Parameter { type: "QObject"; isPointer: true }
        }
        Signal { name: "destroyed" }
        Signal {
            name: "objectNameChanged"
            Parameter { name: "objectName"; type: "string" }
        }
        Method { name: "deleteLater" }
        Method {
            name: "_q_reregisterTimers"
            Parameter { type: "void"; isPointer: true }
        }
    }
    Component {
        file: "qopenglwidget.h"
        name: "QOpenGLWidget"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QOpenGLWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Signal { name: "aboutToCompose"; revision: 0 }
        Signal { name: "frameSwapped"; revision: 0 }
        Signal { name: "aboutToResize"; revision: 0 }
        Signal { name: "resized"; revision: 0 }
    }
    Component {
        file: "qgesture.h"
        name: "QPanGesture"
        prototype: "QGesture"
        exports: ["qmluic.QtWidgets/QPanGesture 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "lastOffset"; revision: 0; type: "QPointF" }
        Property { name: "offset"; revision: 0; type: "QPointF" }
        Property { name: "delta"; revision: 0; type: "QPointF" }
        Property { name: "acceleration"; revision: 0; type: "double" }
        Property { name: "horizontalVelocity"; revision: 0; type: "double" }
        Property { name: "verticalVelocity"; revision: 0; type: "double" }
    }
    Component {
        file: "qgesture.h"
        name: "QPinchGesture"
        prototype: "QGesture"
        exports: ["qmluic.QtWidgets/QPinchGesture 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ChangeFlag"
            alias: ""
            isFlag: true
            values: [
                "ScaleFactorChanged",
                "RotationAngleChanged",
                "CenterPointChanged"
            ]
        }
        Enum {
            name: "ChangeFlags"
            alias: "ChangeFlag"
            isFlag: true
            values: [
                "ScaleFactorChanged",
                "RotationAngleChanged",
                "CenterPointChanged"
            ]
        }
        Property { name: "totalChangeFlags"; revision: 0; type: "ChangeFlags" }
        Property { name: "changeFlags"; revision: 0; type: "ChangeFlags" }
        Property { name: "totalScaleFactor"; revision: 0; type: "double" }
        Property { name: "lastScaleFactor"; revision: 0; type: "double" }
        Property { name: "scaleFactor"; revision: 0; type: "double" }
        Property { name: "totalRotationAngle"; revision: 0; type: "double" }
        Property { name: "lastRotationAngle"; revision: 0; type: "double" }
        Property { name: "rotationAngle"; revision: 0; type: "double" }
        Property { name: "startCenterPoint"; revision: 0; type: "QPointF" }
        Property { name: "lastCenterPoint"; revision: 0; type: "QPointF" }
        Property { name: "centerPoint"; revision: 0; type: "QPointF" }
    }
    Component {
        file: "qpixmapfilter_p.h"
        name: "QPixmapBlurFilter"
        prototype: "QPixmapFilter"
        exports: ["qmluic.QtWidgets/QPixmapBlurFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qpixmapfilter_p.h"
        name: "QPixmapColorizeFilter"
        prototype: "QPixmapFilter"
        exports: ["qmluic.QtWidgets/QPixmapColorizeFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qpixmapfilter_p.h"
        name: "QPixmapConvolutionFilter"
        prototype: "QPixmapFilter"
        exports: ["qmluic.QtWidgets/QPixmapConvolutionFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qpixmapfilter_p.h"
        name: "QPixmapDropShadowFilter"
        prototype: "QPixmapFilter"
        exports: ["qmluic.QtWidgets/QPixmapDropShadowFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qpixmapfilter_p.h"
        name: "QPixmapFilter"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QPixmapFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qpixmapstyle_p.h"
        name: "QPixmapStyle"
        prototype: "QCommonStyle"
        exports: ["qmluic.QtWidgets/QPixmapStyle 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qplaintextedit.h"
        name: "QPlainTextDocumentLayout"
        exports: ["qmluic.QtWidgets/QPlainTextDocumentLayout 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "cursorWidth"; revision: 0; type: "int" }
    }
    Component {
        file: "qplaintextedit.h"
        name: "QPlainTextEdit"
        prototype: "QAbstractScrollArea"
        exports: ["qmluic.QtWidgets/QPlainTextEdit 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "LineWrapMode"
            alias: ""
            values: ["NoWrap", "WidgetWidth"]
        }
        Property { name: "tabChangesFocus"; revision: 0; type: "bool" }
        Property { name: "documentTitle"; revision: 0; type: "string" }
        Property { name: "undoRedoEnabled"; revision: 0; type: "bool" }
        Property { name: "lineWrapMode"; revision: 0; type: "LineWrapMode" }
        Property { name: "readOnly"; revision: 0; type: "bool" }
        Property { name: "plainText"; revision: 0; type: "string" }
        Property { name: "overwriteMode"; revision: 0; type: "bool" }
        Property { name: "tabStopWidth"; revision: 0; type: "int" }
        Property { name: "tabStopDistance"; revision: 0; type: "double" }
        Property { name: "cursorWidth"; revision: 0; type: "int" }
        Property { name: "textInteractionFlags"; revision: 0; type: "Qt::TextInteractionFlags" }
        Property { name: "blockCount"; revision: 0; type: "int" }
        Property { name: "maximumBlockCount"; revision: 0; type: "int" }
        Property { name: "backgroundVisible"; revision: 0; type: "bool" }
        Property { name: "centerOnScroll"; revision: 0; type: "bool" }
        Property { name: "placeholderText"; revision: 0; type: "string" }
        Signal { name: "textChanged"; revision: 0 }
        Signal {
            name: "undoAvailable"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Signal {
            name: "redoAvailable"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Signal {
            name: "copyAvailable"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Signal { name: "selectionChanged"; revision: 0 }
        Signal { name: "cursorPositionChanged"; revision: 0 }
        Signal {
            name: "updateRequest"
            revision: 0
            Parameter { name: "rect"; type: "QRect" }
            Parameter { name: "dy"; type: "int" }
        }
        Signal {
            name: "blockCountChanged"
            revision: 0
            Parameter { name: "newBlockCount"; type: "int" }
        }
        Signal {
            name: "modificationChanged"
            revision: 0
            Parameter { type: "bool" }
        }
        Method {
            name: "setPlainText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method { name: "cut"; revision: 0 }
        Method { name: "copy"; revision: 0 }
        Method { name: "paste"; revision: 0 }
        Method { name: "undo"; revision: 0 }
        Method { name: "redo"; revision: 0 }
        Method { name: "clear"; revision: 0 }
        Method { name: "selectAll"; revision: 0 }
        Method {
            name: "insertPlainText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "appendPlainText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "appendHtml"
            revision: 0
            Parameter { name: "html"; type: "string" }
        }
        Method { name: "centerCursor"; revision: 0 }
        Method {
            name: "zoomIn"
            revision: 0
            Parameter { name: "range"; type: "int" }
        }
        Method { name: "zoomIn"; revision: 0 }
        Method {
            name: "zoomOut"
            revision: 0
            Parameter { name: "range"; type: "int" }
        }
        Method { name: "zoomOut"; revision: 0 }
        Method {
            name: "_q_repaintContents"
            revision: 0
            Parameter { name: "r"; type: "QRectF" }
        }
        Method { name: "_q_textChanged"; revision: 0 }
        Method { name: "_q_adjustScrollbars"; revision: 0 }
        Method {
            name: "_q_verticalScrollbarActionTriggered"
            revision: 0
            Parameter { type: "int" }
        }
        Method { name: "_q_cursorPositionChanged"; revision: 0 }
        Method {
            name: "inputMethodQuery"
            revision: 0
            type: "QVariant"
            Parameter { name: "query"; type: "Qt::InputMethodQuery" }
            Parameter { name: "argument"; type: "QVariant" }
        }
    }
    Component {
        file: "qplaintextedit_p.h"
        name: "QPlainTextEditControl"
        prototype: "QWidgetTextControl"
        exports: ["qmluic.QtWidgets/QPlainTextEditControl 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qwidgetrepaintmanager.cpp"
        name: "QPlatformTextureListWatcher"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QPlatformTextureListWatcher 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "onLockStatusChanged"
            revision: 0
            Parameter { name: "locked"; type: "bool" }
        }
    }
    Component {
        file: "qcalendarwidget.cpp"
        name: "QPrevNextCalButton"
        prototype: "QToolButton"
        exports: ["qmluic.QtWidgets/QPrevNextCalButton 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qprogressbar.h"
        name: "QProgressBar"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QProgressBar 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Direction"
            alias: ""
            values: ["TopToBottom", "BottomToTop"]
        }
        Property { name: "minimum"; revision: 0; type: "int" }
        Property { name: "maximum"; revision: 0; type: "int" }
        Property { name: "text"; revision: 0; type: "string" }
        Property { name: "value"; revision: 0; type: "int" }
        Property { name: "alignment"; revision: 0; type: "Qt::Alignment" }
        Property { name: "textVisible"; revision: 0; type: "bool" }
        Property { name: "orientation"; revision: 0; type: "Qt::Orientation" }
        Property { name: "invertedAppearance"; revision: 0; type: "bool" }
        Property { name: "textDirection"; revision: 0; type: "Direction" }
        Property { name: "format"; revision: 0; type: "string" }
        Signal {
            name: "valueChanged"
            revision: 0
            Parameter { name: "value"; type: "int" }
        }
        Method { name: "reset"; revision: 0 }
        Method {
            name: "setRange"
            revision: 0
            Parameter { name: "minimum"; type: "int" }
            Parameter { name: "maximum"; type: "int" }
        }
        Method {
            name: "setMinimum"
            revision: 0
            Parameter { name: "minimum"; type: "int" }
        }
        Method {
            name: "setMaximum"
            revision: 0
            Parameter { name: "maximum"; type: "int" }
        }
        Method {
            name: "setValue"
            revision: 0
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "setOrientation"
            revision: 0
            Parameter { type: "Qt::Orientation" }
        }
    }
    Component {
        file: "qprogressdialog.h"
        name: "QProgressDialog"
        prototype: "QDialog"
        exports: ["qmluic.QtWidgets/QProgressDialog 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "wasCanceled"; revision: 0; type: "bool" }
        Property { name: "minimum"; revision: 0; type: "int" }
        Property { name: "maximum"; revision: 0; type: "int" }
        Property { name: "value"; revision: 0; type: "int" }
        Property { name: "autoReset"; revision: 0; type: "bool" }
        Property { name: "autoClose"; revision: 0; type: "bool" }
        Property { name: "minimumDuration"; revision: 0; type: "int" }
        Property { name: "labelText"; revision: 0; type: "string" }
        Signal { name: "canceled"; revision: 0 }
        Method { name: "cancel"; revision: 0 }
        Method { name: "reset"; revision: 0 }
        Method {
            name: "setMaximum"
            revision: 0
            Parameter { name: "maximum"; type: "int" }
        }
        Method {
            name: "setMinimum"
            revision: 0
            Parameter { name: "minimum"; type: "int" }
        }
        Method {
            name: "setRange"
            revision: 0
            Parameter { name: "minimum"; type: "int" }
            Parameter { name: "maximum"; type: "int" }
        }
        Method {
            name: "setValue"
            revision: 0
            Parameter { name: "progress"; type: "int" }
        }
        Method {
            name: "setLabelText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "setCancelButtonText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "setMinimumDuration"
            revision: 0
            Parameter { name: "ms"; type: "int" }
        }
        Method { name: "forceShow"; revision: 0 }
        Method { name: "_q_disconnectOnClose"; revision: 0 }
    }
    Component {
        file: "qstyleanimation_p.h"
        name: "QProgressStyleAnimation"
        prototype: "QStyleAnimation"
        exports: ["qmluic.QtWidgets/QProgressStyleAnimation 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qproxystyle.h"
        name: "QProxyStyle"
        prototype: "QCommonStyle"
        exports: ["qmluic.QtWidgets/QProxyStyle 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qpushbutton.h"
        name: "QPushButton"
        prototype: "QAbstractButton"
        exports: ["qmluic.QtWidgets/QPushButton 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "autoDefault"; revision: 0; type: "bool" }
        Property { name: "default"; revision: 0; type: "bool" }
        Property { name: "flat"; revision: 0; type: "bool" }
        Method { name: "showMenu"; revision: 0 }
        Method { name: "_q_popupPressed"; revision: 0 }
    }
    Component {
        file: "qradiobutton.h"
        name: "QRadioButton"
        prototype: "QAbstractButton"
        exports: ["qmluic.QtWidgets/QRadioButton 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qeffects.cpp"
        name: "QRollEffect"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QRollEffect 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "scroll"; revision: 0 }
    }
    Component {
        file: "qrubberband.h"
        name: "QRubberBand"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QRubberBand 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qscrollarea.h"
        name: "QScrollArea"
        prototype: "QAbstractScrollArea"
        exports: ["qmluic.QtWidgets/QScrollArea 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "widgetResizable"; revision: 0; type: "bool" }
        Property { name: "alignment"; revision: 0; type: "Qt::Alignment" }
    }
    Component {
        file: "qscrollbar.h"
        name: "QScrollBar"
        prototype: "QAbstractSlider"
        exports: ["qmluic.QtWidgets/QScrollBar 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qstyleanimation_p.h"
        name: "QScrollbarStyleAnimation"
        prototype: "QNumberStyleAnimation"
        exports: ["qmluic.QtWidgets/QScrollbarStyleAnimation 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "updateCurrentTime"
            revision: 0
            Parameter { name: "time"; type: "int" }
        }
    }
    Component {
        file: "qscroller.h"
        name: "QScroller"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QScroller 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "State"
            alias: ""
            values: ["Inactive", "Pressed", "Dragging", "Scrolling"]
        }
        Property { name: "state"; revision: 0; type: "State" }
        Property { name: "scrollerProperties"; revision: 0; type: "QScrollerProperties" }
        Signal {
            name: "stateChanged"
            revision: 0
            Parameter { name: "newstate"; type: "QScroller::State" }
        }
        Signal {
            name: "scrollerPropertiesChanged"
            revision: 0
            Parameter { type: "QScrollerProperties" }
        }
        Method {
            name: "setScrollerProperties"
            revision: 0
            Parameter { name: "prop"; type: "QScrollerProperties" }
        }
        Method {
            name: "scrollTo"
            revision: 0
            Parameter { name: "pos"; type: "QPointF" }
        }
        Method {
            name: "scrollTo"
            revision: 0
            Parameter { name: "pos"; type: "QPointF" }
            Parameter { name: "scrollTime"; type: "int" }
        }
        Method {
            name: "ensureVisible"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
            Parameter { name: "xmargin"; type: "double" }
            Parameter { name: "ymargin"; type: "double" }
        }
        Method {
            name: "ensureVisible"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
            Parameter { name: "xmargin"; type: "double" }
            Parameter { name: "ymargin"; type: "double" }
            Parameter { name: "scrollTime"; type: "int" }
        }
        Method { name: "resendPrepareEvent"; revision: 0 }
    }
    Component {
        file: "qscroller_p.h"
        name: "QScrollerPrivate"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QScrollerPrivate 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "targetDestroyed"; revision: 0 }
    }
    Component {
        file: "qshortcut.h"
        name: "QShortcut"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QShortcut 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "key"; revision: 0; type: "QKeySequence" }
        Property { name: "whatsThis"; revision: 0; type: "string" }
        Property { name: "enabled"; revision: 0; type: "bool" }
        Property { name: "autoRepeat"; revision: 0; type: "bool" }
        Property { name: "context"; revision: 0; type: "Qt::ShortcutContext" }
        Signal { name: "activated"; revision: 0 }
        Signal { name: "activatedAmbiguously"; revision: 0 }
    }
    Component {
        file: "qsidebar_p.h"
        name: "QSidebar"
        prototype: "QListView"
        exports: ["qmluic.QtWidgets/QSidebar 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "goToUrl"
            revision: 0
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "clicked"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "showContextMenu"
            revision: 0
            Parameter { name: "position"; type: "QPoint" }
        }
        Method { name: "removeEntry"; revision: 0 }
    }
    Component {
        file: "qsizegrip.h"
        name: "QSizeGrip"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QSizeGrip 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "_q_showIfNotHidden"; revision: 0 }
    }
    Component {
        file: "qsizepolicy.h"
        name: "QSizePolicy"
        exports: ["qmluic.QtWidgets/QSizePolicy 5.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Policy"
            alias: ""
            values: [
                "Fixed",
                "Minimum",
                "Maximum",
                "Preferred",
                "MinimumExpanding",
                "Expanding",
                "Ignored"
            ]
        }
        Enum {
            name: "ControlTypes"
            alias: "ControlType"
            isFlag: true
            values: [
                "DefaultType",
                "ButtonBox",
                "CheckBox",
                "ComboBox",
                "Frame",
                "GroupBox",
                "Label",
                "Line",
                "LineEdit",
                "PushButton",
                "RadioButton",
                "Slider",
                "SpinBox",
                "TabWidget",
                "ToolButton"
            ]
        }
    }
    Component {
        file: "qslider.h"
        name: "QSlider"
        prototype: "QAbstractSlider"
        exports: ["qmluic.QtWidgets/QSlider 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "TickPosition"
            alias: ""
            values: [
                "NoTicks",
                "TicksAbove",
                "TicksLeft",
                "TicksBelow",
                "TicksRight",
                "TicksBothSides"
            ]
        }
        Property { name: "tickPosition"; revision: 0; type: "TickPosition" }
        Property { name: "tickInterval"; revision: 0; type: "int" }
    }
    Component {
        name: "QSpacerItem"
        exports: ["qmluic.QtWidgets/QSpacerItem 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "orientation"; revision: 0; type: "Qt::Orientation" }
        Property { name: "sizeHint"; revision: 0; type: "QSize" }
        Property { name: "sizeType"; revision: 0; type: "QSizePolicy" }
    }
    Component {
        file: "qspinbox.h"
        name: "QSpinBox"
        prototype: "QAbstractSpinBox"
        exports: ["qmluic.QtWidgets/QSpinBox 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "suffix"; revision: 0; type: "string" }
        Property { name: "prefix"; revision: 0; type: "string" }
        Property { name: "cleanText"; revision: 0; type: "string" }
        Property { name: "minimum"; revision: 0; type: "int" }
        Property { name: "maximum"; revision: 0; type: "int" }
        Property { name: "singleStep"; revision: 0; type: "int" }
        Property { name: "stepType"; revision: 0; type: "StepType" }
        Property { name: "value"; revision: 0; type: "int" }
        Property { name: "displayIntegerBase"; revision: 0; type: "int" }
        Signal {
            name: "valueChanged"
            revision: 0
            Parameter { type: "int" }
        }
        Signal {
            name: "textChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "valueChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Method {
            name: "setValue"
            revision: 0
            Parameter { name: "val"; type: "int" }
        }
    }
    Component {
        file: "qsplashscreen.h"
        name: "QSplashScreen"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QSplashScreen 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "messageChanged"
            revision: 0
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "message"; type: "string" }
            Parameter { name: "alignment"; type: "int" }
            Parameter { name: "color"; type: "QColor" }
        }
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "message"; type: "string" }
            Parameter { name: "alignment"; type: "int" }
        }
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "message"; type: "string" }
        }
        Method { name: "clearMessage"; revision: 0 }
    }
    Component {
        file: "qsplitter.h"
        name: "QSplitter"
        prototype: "QFrame"
        exports: ["qmluic.QtWidgets/QSplitter 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "orientation"; revision: 0; type: "Qt::Orientation" }
        Property { name: "opaqueResize"; revision: 0; type: "bool" }
        Property { name: "handleWidth"; revision: 0; type: "int" }
        Property { name: "childrenCollapsible"; revision: 0; type: "bool" }
        Signal {
            name: "splitterMoved"
            revision: 0
            Parameter { name: "pos"; type: "int" }
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        file: "qsplitter.h"
        name: "QSplitterHandle"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QSplitterHandle 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qstackedlayout.h"
        name: "QStackedLayout"
        prototype: "QLayout"
        exports: ["qmluic.QtWidgets/QStackedLayout 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "StackingMode"
            alias: ""
            values: ["StackOne", "StackAll"]
        }
        Property { name: "currentIndex"; revision: 0; type: "int" }
        Property { name: "stackingMode"; revision: 0; type: "StackingMode" }
        Signal {
            name: "widgetRemoved"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "currentChanged"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentIndex"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentWidget"
            revision: 0
            Parameter { name: "w"; type: "QWidget"; isPointer: true }
        }
    }
    Component {
        file: "qstackedwidget.h"
        name: "QStackedWidget"
        prototype: "QFrame"
        exports: ["qmluic.QtWidgets/QStackedWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "currentIndex"; revision: 0; type: "int" }
        Property { name: "count"; revision: 0; type: "int" }
        Signal {
            name: "currentChanged"
            revision: 0
            Parameter { type: "int" }
        }
        Signal {
            name: "widgetRemoved"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentIndex"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentWidget"
            revision: 0
            Parameter { name: "w"; type: "QWidget"; isPointer: true }
        }
    }
    Component {
        file: "qstatusbar.h"
        name: "QStatusBar"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QStatusBar 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "sizeGripEnabled"; revision: 0; type: "bool" }
        Signal {
            name: "messageChanged"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "text"; type: "string" }
            Parameter { name: "timeout"; type: "int" }
        }
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method { name: "clearMessage"; revision: 0 }
    }
    Component {
        file: "qstyle.h"
        name: "QStyle"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QStyle 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "StateFlag"
            alias: ""
            values: [
                "State_None",
                "State_Enabled",
                "State_Raised",
                "State_Sunken",
                "State_Off",
                "State_NoChange",
                "State_On",
                "State_DownArrow",
                "State_Horizontal",
                "State_HasFocus",
                "State_Top",
                "State_Bottom",
                "State_FocusAtBorder",
                "State_AutoRaise",
                "State_MouseOver",
                "State_UpArrow",
                "State_Selected",
                "State_Active",
                "State_Window",
                "State_Open",
                "State_Children",
                "State_Item",
                "State_Sibling",
                "State_Editing",
                "State_KeyboardFocusChange",
                "State_ReadOnly",
                "State_Small",
                "State_Mini"
            ]
        }
        Enum {
            name: "PrimitiveElement"
            alias: ""
            values: [
                "PE_Frame",
                "PE_FrameDefaultButton",
                "PE_FrameDockWidget",
                "PE_FrameFocusRect",
                "PE_FrameGroupBox",
                "PE_FrameLineEdit",
                "PE_FrameMenu",
                "PE_FrameStatusBarItem",
                "PE_FrameStatusBar",
                "PE_FrameTabWidget",
                "PE_FrameWindow",
                "PE_FrameButtonBevel",
                "PE_FrameButtonTool",
                "PE_FrameTabBarBase",
                "PE_PanelButtonCommand",
                "PE_PanelButtonBevel",
                "PE_PanelButtonTool",
                "PE_PanelMenuBar",
                "PE_PanelToolBar",
                "PE_PanelLineEdit",
                "PE_IndicatorArrowDown",
                "PE_IndicatorArrowLeft",
                "PE_IndicatorArrowRight",
                "PE_IndicatorArrowUp",
                "PE_IndicatorBranch",
                "PE_IndicatorButtonDropDown",
                "PE_IndicatorItemViewItemCheck",
                "PE_IndicatorViewItemCheck",
                "PE_IndicatorCheckBox",
                "PE_IndicatorDockWidgetResizeHandle",
                "PE_IndicatorHeaderArrow",
                "PE_IndicatorMenuCheckMark",
                "PE_IndicatorProgressChunk",
                "PE_IndicatorRadioButton",
                "PE_IndicatorSpinDown",
                "PE_IndicatorSpinMinus",
                "PE_IndicatorSpinPlus",
                "PE_IndicatorSpinUp",
                "PE_IndicatorToolBarHandle",
                "PE_IndicatorToolBarSeparator",
                "PE_PanelTipLabel",
                "PE_IndicatorTabTear",
                "PE_IndicatorTabTearLeft",
                "PE_PanelScrollAreaCorner",
                "PE_Widget",
                "PE_IndicatorColumnViewArrow",
                "PE_IndicatorItemViewItemDrop",
                "PE_PanelItemViewItem",
                "PE_PanelItemViewRow",
                "PE_PanelStatusBar",
                "PE_IndicatorTabClose",
                "PE_PanelMenu",
                "PE_IndicatorTabTearRight",
                "PE_CustomBase"
            ]
        }
        Enum {
            name: "ControlElement"
            alias: ""
            values: [
                "CE_PushButton",
                "CE_PushButtonBevel",
                "CE_PushButtonLabel",
                "CE_CheckBox",
                "CE_CheckBoxLabel",
                "CE_RadioButton",
                "CE_RadioButtonLabel",
                "CE_TabBarTab",
                "CE_TabBarTabShape",
                "CE_TabBarTabLabel",
                "CE_ProgressBar",
                "CE_ProgressBarGroove",
                "CE_ProgressBarContents",
                "CE_ProgressBarLabel",
                "CE_MenuItem",
                "CE_MenuScroller",
                "CE_MenuVMargin",
                "CE_MenuHMargin",
                "CE_MenuTearoff",
                "CE_MenuEmptyArea",
                "CE_MenuBarItem",
                "CE_MenuBarEmptyArea",
                "CE_ToolButtonLabel",
                "CE_Header",
                "CE_HeaderSection",
                "CE_HeaderLabel",
                "CE_ToolBoxTab",
                "CE_SizeGrip",
                "CE_Splitter",
                "CE_RubberBand",
                "CE_DockWidgetTitle",
                "CE_ScrollBarAddLine",
                "CE_ScrollBarSubLine",
                "CE_ScrollBarAddPage",
                "CE_ScrollBarSubPage",
                "CE_ScrollBarSlider",
                "CE_ScrollBarFirst",
                "CE_ScrollBarLast",
                "CE_FocusFrame",
                "CE_ComboBoxLabel",
                "CE_ToolBar",
                "CE_ToolBoxTabShape",
                "CE_ToolBoxTabLabel",
                "CE_HeaderEmptyArea",
                "CE_ColumnViewGrip",
                "CE_ItemViewItem",
                "CE_ShapedFrame",
                "CE_CustomBase"
            ]
        }
        Enum {
            name: "SubElement"
            alias: ""
            values: [
                "SE_PushButtonContents",
                "SE_PushButtonFocusRect",
                "SE_CheckBoxIndicator",
                "SE_CheckBoxContents",
                "SE_CheckBoxFocusRect",
                "SE_CheckBoxClickRect",
                "SE_RadioButtonIndicator",
                "SE_RadioButtonContents",
                "SE_RadioButtonFocusRect",
                "SE_RadioButtonClickRect",
                "SE_ComboBoxFocusRect",
                "SE_SliderFocusRect",
                "SE_ProgressBarGroove",
                "SE_ProgressBarContents",
                "SE_ProgressBarLabel",
                "SE_ToolBoxTabContents",
                "SE_HeaderLabel",
                "SE_HeaderArrow",
                "SE_TabWidgetTabBar",
                "SE_TabWidgetTabPane",
                "SE_TabWidgetTabContents",
                "SE_TabWidgetLeftCorner",
                "SE_TabWidgetRightCorner",
                "SE_ItemViewItemCheckIndicator",
                "SE_ViewItemCheckIndicator",
                "SE_TabBarTearIndicator",
                "SE_TabBarTearIndicatorLeft",
                "SE_TreeViewDisclosureItem",
                "SE_LineEditContents",
                "SE_FrameContents",
                "SE_DockWidgetCloseButton",
                "SE_DockWidgetFloatButton",
                "SE_DockWidgetTitleBarText",
                "SE_DockWidgetIcon",
                "SE_CheckBoxLayoutItem",
                "SE_ComboBoxLayoutItem",
                "SE_DateTimeEditLayoutItem",
                "SE_DialogButtonBoxLayoutItem",
                "SE_LabelLayoutItem",
                "SE_ProgressBarLayoutItem",
                "SE_PushButtonLayoutItem",
                "SE_RadioButtonLayoutItem",
                "SE_SliderLayoutItem",
                "SE_SpinBoxLayoutItem",
                "SE_ToolButtonLayoutItem",
                "SE_FrameLayoutItem",
                "SE_GroupBoxLayoutItem",
                "SE_TabWidgetLayoutItem",
                "SE_ItemViewItemDecoration",
                "SE_ItemViewItemText",
                "SE_ItemViewItemFocusRect",
                "SE_TabBarTabLeftButton",
                "SE_TabBarTabRightButton",
                "SE_TabBarTabText",
                "SE_ShapedFrameContents",
                "SE_ToolBarHandle",
                "SE_TabBarScrollLeftButton",
                "SE_TabBarScrollRightButton",
                "SE_TabBarTearIndicatorRight",
                "SE_PushButtonBevel",
                "SE_CustomBase"
            ]
        }
        Enum {
            name: "ComplexControl"
            alias: ""
            values: [
                "CC_SpinBox",
                "CC_ComboBox",
                "CC_ScrollBar",
                "CC_Slider",
                "CC_ToolButton",
                "CC_TitleBar",
                "CC_Dial",
                "CC_GroupBox",
                "CC_MdiControls",
                "CC_CustomBase"
            ]
        }
        Enum {
            name: "SubControl"
            alias: ""
            values: [
                "SC_None",
                "SC_ScrollBarAddLine",
                "SC_ScrollBarSubLine",
                "SC_ScrollBarAddPage",
                "SC_ScrollBarSubPage",
                "SC_ScrollBarFirst",
                "SC_ScrollBarLast",
                "SC_ScrollBarSlider",
                "SC_ScrollBarGroove",
                "SC_SpinBoxUp",
                "SC_SpinBoxDown",
                "SC_SpinBoxFrame",
                "SC_SpinBoxEditField",
                "SC_ComboBoxFrame",
                "SC_ComboBoxEditField",
                "SC_ComboBoxArrow",
                "SC_ComboBoxListBoxPopup",
                "SC_SliderGroove",
                "SC_SliderHandle",
                "SC_SliderTickmarks",
                "SC_ToolButton",
                "SC_ToolButtonMenu",
                "SC_TitleBarSysMenu",
                "SC_TitleBarMinButton",
                "SC_TitleBarMaxButton",
                "SC_TitleBarCloseButton",
                "SC_TitleBarNormalButton",
                "SC_TitleBarShadeButton",
                "SC_TitleBarUnshadeButton",
                "SC_TitleBarContextHelpButton",
                "SC_TitleBarLabel",
                "SC_DialGroove",
                "SC_DialHandle",
                "SC_DialTickmarks",
                "SC_GroupBoxCheckBox",
                "SC_GroupBoxLabel",
                "SC_GroupBoxContents",
                "SC_GroupBoxFrame",
                "SC_MdiMinButton",
                "SC_MdiNormalButton",
                "SC_MdiCloseButton",
                "SC_CustomBase",
                "SC_All"
            ]
        }
        Enum {
            name: "PixelMetric"
            alias: ""
            values: [
                "PM_ButtonMargin",
                "PM_ButtonDefaultIndicator",
                "PM_MenuButtonIndicator",
                "PM_ButtonShiftHorizontal",
                "PM_ButtonShiftVertical",
                "PM_DefaultFrameWidth",
                "PM_SpinBoxFrameWidth",
                "PM_ComboBoxFrameWidth",
                "PM_MaximumDragDistance",
                "PM_ScrollBarExtent",
                "PM_ScrollBarSliderMin",
                "PM_SliderThickness",
                "PM_SliderControlThickness",
                "PM_SliderLength",
                "PM_SliderTickmarkOffset",
                "PM_SliderSpaceAvailable",
                "PM_DockWidgetSeparatorExtent",
                "PM_DockWidgetHandleExtent",
                "PM_DockWidgetFrameWidth",
                "PM_TabBarTabOverlap",
                "PM_TabBarTabHSpace",
                "PM_TabBarTabVSpace",
                "PM_TabBarBaseHeight",
                "PM_TabBarBaseOverlap",
                "PM_ProgressBarChunkWidth",
                "PM_SplitterWidth",
                "PM_TitleBarHeight",
                "PM_MenuScrollerHeight",
                "PM_MenuHMargin",
                "PM_MenuVMargin",
                "PM_MenuPanelWidth",
                "PM_MenuTearoffHeight",
                "PM_MenuDesktopFrameWidth",
                "PM_MenuBarPanelWidth",
                "PM_MenuBarItemSpacing",
                "PM_MenuBarVMargin",
                "PM_MenuBarHMargin",
                "PM_IndicatorWidth",
                "PM_IndicatorHeight",
                "PM_ExclusiveIndicatorWidth",
                "PM_ExclusiveIndicatorHeight",
                "PM_DialogButtonsSeparator",
                "PM_DialogButtonsButtonWidth",
                "PM_DialogButtonsButtonHeight",
                "PM_MdiSubWindowFrameWidth",
                "PM_MdiSubWindowMinimizedWidth",
                "PM_MDIFrameWidth",
                "PM_MDIMinimizedWidth",
                "PM_HeaderMargin",
                "PM_HeaderMarkSize",
                "PM_HeaderGripMargin",
                "PM_TabBarTabShiftHorizontal",
                "PM_TabBarTabShiftVertical",
                "PM_TabBarScrollButtonWidth",
                "PM_ToolBarFrameWidth",
                "PM_ToolBarHandleExtent",
                "PM_ToolBarItemSpacing",
                "PM_ToolBarItemMargin",
                "PM_ToolBarSeparatorExtent",
                "PM_ToolBarExtensionExtent",
                "PM_SpinBoxSliderHeight",
                "PM_DefaultTopLevelMargin",
                "PM_DefaultChildMargin",
                "PM_DefaultLayoutSpacing",
                "PM_ToolBarIconSize",
                "PM_ListViewIconSize",
                "PM_IconViewIconSize",
                "PM_SmallIconSize",
                "PM_LargeIconSize",
                "PM_FocusFrameVMargin",
                "PM_FocusFrameHMargin",
                "PM_ToolTipLabelFrameWidth",
                "PM_CheckBoxLabelSpacing",
                "PM_TabBarIconSize",
                "PM_SizeGripSize",
                "PM_DockWidgetTitleMargin",
                "PM_MessageBoxIconSize",
                "PM_ButtonIconSize",
                "PM_DockWidgetTitleBarButtonMargin",
                "PM_RadioButtonLabelSpacing",
                "PM_LayoutLeftMargin",
                "PM_LayoutTopMargin",
                "PM_LayoutRightMargin",
                "PM_LayoutBottomMargin",
                "PM_LayoutHorizontalSpacing",
                "PM_LayoutVerticalSpacing",
                "PM_TabBar_ScrollButtonOverlap",
                "PM_TextCursorWidth",
                "PM_TabCloseIndicatorWidth",
                "PM_TabCloseIndicatorHeight",
                "PM_ScrollView_ScrollBarSpacing",
                "PM_ScrollView_ScrollBarOverlap",
                "PM_SubMenuOverlap",
                "PM_TreeViewIndentation",
                "PM_HeaderDefaultSectionSizeHorizontal",
                "PM_HeaderDefaultSectionSizeVertical",
                "PM_TitleBarButtonIconSize",
                "PM_TitleBarButtonSize",
                "PM_CustomBase"
            ]
        }
        Enum {
            name: "ContentsType"
            alias: ""
            values: [
                "CT_PushButton",
                "CT_CheckBox",
                "CT_RadioButton",
                "CT_ToolButton",
                "CT_ComboBox",
                "CT_Splitter",
                "CT_ProgressBar",
                "CT_MenuItem",
                "CT_MenuBarItem",
                "CT_MenuBar",
                "CT_Menu",
                "CT_TabBarTab",
                "CT_Slider",
                "CT_ScrollBar",
                "CT_LineEdit",
                "CT_SpinBox",
                "CT_SizeGrip",
                "CT_TabWidget",
                "CT_DialogButtons",
                "CT_HeaderSection",
                "CT_GroupBox",
                "CT_MdiControls",
                "CT_ItemViewItem",
                "CT_CustomBase"
            ]
        }
        Enum {
            name: "RequestSoftwareInputPanel"
            alias: ""
            values: [
                "RSIP_OnMouseClickAndAlreadyFocused",
                "RSIP_OnMouseClick"
            ]
        }
        Enum {
            name: "StyleHint"
            alias: ""
            values: [
                "SH_EtchDisabledText",
                "SH_DitherDisabledText",
                "SH_ScrollBar_MiddleClickAbsolutePosition",
                "SH_ScrollBar_ScrollWhenPointerLeavesControl",
                "SH_TabBar_SelectMouseType",
                "SH_TabBar_Alignment",
                "SH_Header_ArrowAlignment",
                "SH_Slider_SnapToValue",
                "SH_Slider_SloppyKeyEvents",
                "SH_ProgressDialog_CenterCancelButton",
                "SH_ProgressDialog_TextLabelAlignment",
                "SH_PrintDialog_RightAlignButtons",
                "SH_MainWindow_SpaceBelowMenuBar",
                "SH_FontDialog_SelectAssociatedText",
                "SH_Menu_AllowActiveAndDisabled",
                "SH_Menu_SpaceActivatesItem",
                "SH_Menu_SubMenuPopupDelay",
                "SH_ScrollView_FrameOnlyAroundContents",
                "SH_MenuBar_AltKeyNavigation",
                "SH_ComboBox_ListMouseTracking",
                "SH_Menu_MouseTracking",
                "SH_MenuBar_MouseTracking",
                "SH_ItemView_ChangeHighlightOnFocus",
                "SH_Widget_ShareActivation",
                "SH_Workspace_FillSpaceOnMaximize",
                "SH_ComboBox_Popup",
                "SH_TitleBar_NoBorder",
                "SH_Slider_StopMouseOverSlider",
                "SH_ScrollBar_StopMouseOverSlider",
                "SH_BlinkCursorWhenTextSelected",
                "SH_RichText_FullWidthSelection",
                "SH_Menu_Scrollable",
                "SH_GroupBox_TextLabelVerticalAlignment",
                "SH_GroupBox_TextLabelColor",
                "SH_Menu_SloppySubMenus",
                "SH_Table_GridLineColor",
                "SH_LineEdit_PasswordCharacter",
                "SH_DialogButtons_DefaultButton",
                "SH_ToolBox_SelectedPageTitleBold",
                "SH_TabBar_PreferNoArrows",
                "SH_ScrollBar_LeftClickAbsolutePosition",
                "SH_ListViewExpand_SelectMouseType",
                "SH_UnderlineShortcut",
                "SH_SpinBox_AnimateButton",
                "SH_SpinBox_KeyPressAutoRepeatRate",
                "SH_SpinBox_ClickAutoRepeatRate",
                "SH_Menu_FillScreenWithScroll",
                "SH_ToolTipLabel_Opacity",
                "SH_DrawMenuBarSeparator",
                "SH_TitleBar_ModifyNotification",
                "SH_Button_FocusPolicy",
                "SH_MessageBox_UseBorderForButtonSpacing",
                "SH_TitleBar_AutoRaise",
                "SH_ToolButton_PopupDelay",
                "SH_FocusFrame_Mask",
                "SH_RubberBand_Mask",
                "SH_WindowFrame_Mask",
                "SH_SpinControls_DisableOnBounds",
                "SH_Dial_BackgroundRole",
                "SH_ComboBox_LayoutDirection",
                "SH_ItemView_EllipsisLocation",
                "SH_ItemView_ShowDecorationSelected",
                "SH_ItemView_ActivateItemOnSingleClick",
                "SH_ScrollBar_ContextMenu",
                "SH_ScrollBar_RollBetweenButtons",
                "SH_Slider_AbsoluteSetButtons",
                "SH_Slider_PageSetButtons",
                "SH_Menu_KeyboardSearch",
                "SH_TabBar_ElideMode",
                "SH_DialogButtonLayout",
                "SH_ComboBox_PopupFrameStyle",
                "SH_MessageBox_TextInteractionFlags",
                "SH_DialogButtonBox_ButtonsHaveIcons",
                "SH_SpellCheckUnderlineStyle",
                "SH_MessageBox_CenterButtons",
                "SH_Menu_SelectionWrap",
                "SH_ItemView_MovementWithoutUpdatingSelection",
                "SH_ToolTip_Mask",
                "SH_FocusFrame_AboveWidget",
                "SH_TextControl_FocusIndicatorTextCharFormat",
                "SH_WizardStyle",
                "SH_ItemView_ArrowKeysNavigateIntoChildren",
                "SH_Menu_Mask",
                "SH_Menu_FlashTriggeredItem",
                "SH_Menu_FadeOutOnHide",
                "SH_SpinBox_ClickAutoRepeatThreshold",
                "SH_ItemView_PaintAlternatingRowColorsForEmptyArea",
                "SH_FormLayoutWrapPolicy",
                "SH_TabWidget_DefaultTabPosition",
                "SH_ToolBar_Movable",
                "SH_FormLayoutFieldGrowthPolicy",
                "SH_FormLayoutFormAlignment",
                "SH_FormLayoutLabelAlignment",
                "SH_ItemView_DrawDelegateFrame",
                "SH_TabBar_CloseButtonPosition",
                "SH_DockWidget_ButtonsHaveFrame",
                "SH_ToolButtonStyle",
                "SH_RequestSoftwareInputPanel",
                "SH_ScrollBar_Transient",
                "SH_Menu_SupportsSections",
                "SH_ToolTip_WakeUpDelay",
                "SH_ToolTip_FallAsleepDelay",
                "SH_Widget_Animate",
                "SH_Splitter_OpaqueResize",
                "SH_ComboBox_UseNativePopup",
                "SH_LineEdit_PasswordMaskDelay",
                "SH_TabBar_ChangeCurrentDelay",
                "SH_Menu_SubMenuUniDirection",
                "SH_Menu_SubMenuUniDirectionFailCount",
                "SH_Menu_SubMenuSloppySelectOtherActions",
                "SH_Menu_SubMenuSloppyCloseTimeout",
                "SH_Menu_SubMenuResetWhenReenteringParent",
                "SH_Menu_SubMenuDontStartSloppyOnLeave",
                "SH_ItemView_ScrollMode",
                "SH_TitleBar_ShowToolTipsOnButtons",
                "SH_Widget_Animation_Duration",
                "SH_ComboBox_AllowWheelScrolling",
                "SH_SpinBox_ButtonsInsideFrame",
                "SH_SpinBox_StepModifier",
                "SH_CustomBase"
            ]
        }
        Enum {
            name: "StandardPixmap"
            alias: ""
            values: [
                "SP_TitleBarMenuButton",
                "SP_TitleBarMinButton",
                "SP_TitleBarMaxButton",
                "SP_TitleBarCloseButton",
                "SP_TitleBarNormalButton",
                "SP_TitleBarShadeButton",
                "SP_TitleBarUnshadeButton",
                "SP_TitleBarContextHelpButton",
                "SP_DockWidgetCloseButton",
                "SP_MessageBoxInformation",
                "SP_MessageBoxWarning",
                "SP_MessageBoxCritical",
                "SP_MessageBoxQuestion",
                "SP_DesktopIcon",
                "SP_TrashIcon",
                "SP_ComputerIcon",
                "SP_DriveFDIcon",
                "SP_DriveHDIcon",
                "SP_DriveCDIcon",
                "SP_DriveDVDIcon",
                "SP_DriveNetIcon",
                "SP_DirOpenIcon",
                "SP_DirClosedIcon",
                "SP_DirLinkIcon",
                "SP_DirLinkOpenIcon",
                "SP_FileIcon",
                "SP_FileLinkIcon",
                "SP_ToolBarHorizontalExtensionButton",
                "SP_ToolBarVerticalExtensionButton",
                "SP_FileDialogStart",
                "SP_FileDialogEnd",
                "SP_FileDialogToParent",
                "SP_FileDialogNewFolder",
                "SP_FileDialogDetailedView",
                "SP_FileDialogInfoView",
                "SP_FileDialogContentsView",
                "SP_FileDialogListView",
                "SP_FileDialogBack",
                "SP_DirIcon",
                "SP_DialogOkButton",
                "SP_DialogCancelButton",
                "SP_DialogHelpButton",
                "SP_DialogOpenButton",
                "SP_DialogSaveButton",
                "SP_DialogCloseButton",
                "SP_DialogApplyButton",
                "SP_DialogResetButton",
                "SP_DialogDiscardButton",
                "SP_DialogYesButton",
                "SP_DialogNoButton",
                "SP_ArrowUp",
                "SP_ArrowDown",
                "SP_ArrowLeft",
                "SP_ArrowRight",
                "SP_ArrowBack",
                "SP_ArrowForward",
                "SP_DirHomeIcon",
                "SP_CommandLink",
                "SP_VistaShield",
                "SP_BrowserReload",
                "SP_BrowserStop",
                "SP_MediaPlay",
                "SP_MediaStop",
                "SP_MediaPause",
                "SP_MediaSkipForward",
                "SP_MediaSkipBackward",
                "SP_MediaSeekForward",
                "SP_MediaSeekBackward",
                "SP_MediaVolume",
                "SP_MediaVolumeMuted",
                "SP_LineEditClearButton",
                "SP_DialogYesToAllButton",
                "SP_DialogNoToAllButton",
                "SP_DialogSaveAllButton",
                "SP_DialogAbortButton",
                "SP_DialogRetryButton",
                "SP_DialogIgnoreButton",
                "SP_RestoreDefaultsButton",
                "SP_CustomBase"
            ]
        }
    }
    Component {
        file: "qstyleanimation_p.h"
        name: "QStyleAnimation"
        prototype: "QAbstractAnimation"
        exports: ["qmluic.QtWidgets/QStyleAnimation 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "start"; revision: 0 }
    }
    Component {
        file: "qstyleplugin.h"
        name: "QStylePlugin"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QStylePlugin 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qstylesheetstyle_p.h"
        name: "QStyleSheetStyle"
        prototype: "QWindowsStyle"
        exports: ["qmluic.QtWidgets/QStyleSheetStyle 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qstylesheetstyle_p.h"
        name: "QStyleSheetStyleCaches"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QStyleSheetStyleCaches 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "objectDestroyed"
            revision: 0
            Parameter { type: "QObject"; isPointer: true }
        }
        Method {
            name: "styleDestroyed"
            revision: 0
            Parameter { type: "QObject"; isPointer: true }
        }
    }
    Component {
        file: "qstyleditemdelegate.h"
        name: "QStyledItemDelegate"
        prototype: "QAbstractItemDelegate"
        exports: ["qmluic.QtWidgets/QStyledItemDelegate 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qgesture.h"
        name: "QSwipeGesture"
        prototype: "QGesture"
        exports: ["qmluic.QtWidgets/QSwipeGesture 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "SwipeDirection"
            alias: ""
            values: ["NoDirection", "Left", "Right", "Up", "Down"]
        }
        Property { name: "horizontalDirection"; revision: 0; type: "SwipeDirection" }
        Property { name: "verticalDirection"; revision: 0; type: "SwipeDirection" }
        Property { name: "swipeAngle"; revision: 0; type: "double" }
        Property { name: "velocity"; revision: 0; type: "double" }
    }
    Component {
        file: "qsystemtrayicon.h"
        name: "QSystemTrayIcon"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QSystemTrayIcon 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "toolTip"; revision: 0; type: "string" }
        Property { name: "icon"; revision: 0; type: "QIcon" }
        Property { name: "visible"; revision: 0; type: "bool" }
        Signal {
            name: "activated"
            revision: 0
            Parameter { name: "reason"; type: "QSystemTrayIcon::ActivationReason" }
        }
        Signal { name: "messageClicked"; revision: 0 }
        Method {
            name: "setVisible"
            revision: 0
            Parameter { name: "visible"; type: "bool" }
        }
        Method { name: "show"; revision: 0 }
        Method { name: "hide"; revision: 0 }
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "title"; type: "string" }
            Parameter { name: "msg"; type: "string" }
            Parameter { name: "icon"; type: "QIcon" }
            Parameter { name: "msecs"; type: "int" }
        }
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "title"; type: "string" }
            Parameter { name: "msg"; type: "string" }
            Parameter { name: "icon"; type: "QIcon" }
        }
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "title"; type: "string" }
            Parameter { name: "msg"; type: "string" }
            Parameter { name: "icon"; type: "QSystemTrayIcon::MessageIcon" }
            Parameter { name: "msecs"; type: "int" }
        }
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "title"; type: "string" }
            Parameter { name: "msg"; type: "string" }
            Parameter { name: "icon"; type: "QSystemTrayIcon::MessageIcon" }
        }
        Method {
            name: "showMessage"
            revision: 0
            Parameter { name: "title"; type: "string" }
            Parameter { name: "msg"; type: "string" }
        }
        Method {
            name: "_q_emitActivated"
            revision: 0
            Parameter { type: "QPlatformSystemTrayIcon::ActivationReason" }
        }
    }
    Component {
        file: "qsystemtrayicon_x11.cpp"
        name: "QSystemTrayIconSys"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QSystemTrayIconSys 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qsystemtrayicon_x11.cpp"
        name: "QSystemTrayWatcher"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QSystemTrayWatcher 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "systemTrayWindowChanged"
            revision: 0
            Parameter { type: "QScreen"; isPointer: true }
        }
    }
    Component {
        file: "qtabbar.h"
        name: "QTabBar"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QTabBar 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Shape"
            alias: ""
            values: [
                "RoundedNorth",
                "RoundedSouth",
                "RoundedWest",
                "RoundedEast",
                "TriangularNorth",
                "TriangularSouth",
                "TriangularWest",
                "TriangularEast"
            ]
        }
        Property { name: "shape"; revision: 0; type: "Shape" }
        Property { name: "currentIndex"; revision: 0; type: "int" }
        Property { name: "count"; revision: 0; type: "int" }
        Property { name: "drawBase"; revision: 0; type: "bool" }
        Property { name: "iconSize"; revision: 0; type: "QSize" }
        Property { name: "elideMode"; revision: 0; type: "Qt::TextElideMode" }
        Property { name: "usesScrollButtons"; revision: 0; type: "bool" }
        Property { name: "tabsClosable"; revision: 0; type: "bool" }
        Property { name: "selectionBehaviorOnRemove"; revision: 0; type: "SelectionBehavior" }
        Property { name: "expanding"; revision: 0; type: "bool" }
        Property { name: "movable"; revision: 0; type: "bool" }
        Property { name: "documentMode"; revision: 0; type: "bool" }
        Property { name: "autoHide"; revision: 0; type: "bool" }
        Property { name: "changeCurrentOnDrag"; revision: 0; type: "bool" }
        Signal {
            name: "currentChanged"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "tabCloseRequested"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "tabMoved"
            revision: 0
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
        Signal {
            name: "tabBarClicked"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "tabBarDoubleClicked"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentIndex"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "_q_scrollTabs"; revision: 0 }
        Method { name: "_q_closeTab"; revision: 0 }
    }
    Component {
        file: "qtabwidget.h"
        name: "QTabWidget"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QTabWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "TabPosition"
            alias: ""
            values: ["North", "South", "West", "East"]
        }
        Enum {
            name: "TabShape"
            alias: ""
            values: ["Rounded", "Triangular"]
        }
        Property { name: "tabPosition"; revision: 0; type: "TabPosition" }
        Property { name: "tabShape"; revision: 0; type: "TabShape" }
        Property { name: "currentIndex"; revision: 0; type: "int" }
        Property { name: "count"; revision: 0; type: "int" }
        Property { name: "iconSize"; revision: 0; type: "QSize" }
        Property { name: "elideMode"; revision: 0; type: "Qt::TextElideMode" }
        Property { name: "usesScrollButtons"; revision: 0; type: "bool" }
        Property { name: "documentMode"; revision: 0; type: "bool" }
        Property { name: "tabsClosable"; revision: 0; type: "bool" }
        Property { name: "movable"; revision: 0; type: "bool" }
        Property { name: "tabBarAutoHide"; revision: 0; type: "bool" }
        Signal {
            name: "currentChanged"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "tabCloseRequested"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "tabBarClicked"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "tabBarDoubleClicked"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentIndex"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentWidget"
            revision: 0
            Parameter { name: "widget"; type: "QWidget"; isPointer: true }
        }
        Method {
            name: "_q_showTab"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "_q_removeTab"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "_q_tabMoved"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
    }
    Component {
        file: "qtableview.cpp"
        name: "QTableCornerButton"
        prototype: "QAbstractButton"
        exports: ["qmluic.QtWidgets/QTableCornerButton 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qtablewidget_p.h"
        name: "QTableModel"
        prototype: "QAbstractTableModel"
        exports: ["qmluic.QtWidgets/QTableModel 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qtableview.h"
        name: "QTableView"
        prototype: "QAbstractItemView"
        exports: ["qmluic.QtWidgets/QTableView 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "showGrid"; revision: 0; type: "bool" }
        Property { name: "gridStyle"; revision: 0; type: "Qt::PenStyle" }
        Property { name: "sortingEnabled"; revision: 0; type: "bool" }
        Property { name: "wordWrap"; revision: 0; type: "bool" }
        Property { name: "cornerButtonEnabled"; revision: 0; type: "bool" }
        Method {
            name: "selectRow"
            revision: 0
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "selectColumn"
            revision: 0
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "hideRow"
            revision: 0
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "hideColumn"
            revision: 0
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "showRow"
            revision: 0
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "showColumn"
            revision: 0
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "resizeRowToContents"
            revision: 0
            Parameter { name: "row"; type: "int" }
        }
        Method { name: "resizeRowsToContents"; revision: 0 }
        Method {
            name: "resizeColumnToContents"
            revision: 0
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "resizeColumnsToContents"; revision: 0 }
        Method {
            name: "sortByColumn"
            revision: 0
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "sortByColumn"
            revision: 0
            Parameter { name: "column"; type: "int" }
            Parameter { name: "order"; type: "Qt::SortOrder" }
        }
        Method {
            name: "setShowGrid"
            revision: 0
            Parameter { name: "show"; type: "bool" }
        }
        Method {
            name: "rowMoved"
            revision: 0
            Parameter { name: "row"; type: "int" }
            Parameter { name: "oldIndex"; type: "int" }
            Parameter { name: "newIndex"; type: "int" }
        }
        Method {
            name: "columnMoved"
            revision: 0
            Parameter { name: "column"; type: "int" }
            Parameter { name: "oldIndex"; type: "int" }
            Parameter { name: "newIndex"; type: "int" }
        }
        Method {
            name: "rowResized"
            revision: 0
            Parameter { name: "row"; type: "int" }
            Parameter { name: "oldHeight"; type: "int" }
            Parameter { name: "newHeight"; type: "int" }
        }
        Method {
            name: "columnResized"
            revision: 0
            Parameter { name: "column"; type: "int" }
            Parameter { name: "oldWidth"; type: "int" }
            Parameter { name: "newWidth"; type: "int" }
        }
        Method {
            name: "rowCountChanged"
            revision: 0
            Parameter { name: "oldCount"; type: "int" }
            Parameter { name: "newCount"; type: "int" }
        }
        Method {
            name: "columnCountChanged"
            revision: 0
            Parameter { name: "oldCount"; type: "int" }
            Parameter { name: "newCount"; type: "int" }
        }
        Method {
            name: "_q_selectRow"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "_q_selectColumn"
            revision: 0
            Parameter { type: "int" }
        }
        Method {
            name: "_q_updateSpanInsertedRows"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_updateSpanInsertedColumns"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_updateSpanRemovedRows"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_updateSpanRemovedColumns"
            revision: 0
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sortIndicatorChanged"
            revision: 0
            Parameter { name: "column"; type: "int" }
            Parameter { name: "order"; type: "Qt::SortOrder" }
        }
    }
    Component {
        file: "qtablewidget.h"
        name: "QTableWidget"
        prototype: "QTableView"
        exports: ["qmluic.QtWidgets/QTableWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "rowCount"; revision: 0; type: "int" }
        Property { name: "columnCount"; revision: 0; type: "int" }
        Signal {
            name: "itemPressed"
            revision: 0
            Parameter { name: "item"; type: "QTableWidgetItem"; isPointer: true }
        }
        Signal {
            name: "itemClicked"
            revision: 0
            Parameter { name: "item"; type: "QTableWidgetItem"; isPointer: true }
        }
        Signal {
            name: "itemDoubleClicked"
            revision: 0
            Parameter { name: "item"; type: "QTableWidgetItem"; isPointer: true }
        }
        Signal {
            name: "itemActivated"
            revision: 0
            Parameter { name: "item"; type: "QTableWidgetItem"; isPointer: true }
        }
        Signal {
            name: "itemEntered"
            revision: 0
            Parameter { name: "item"; type: "QTableWidgetItem"; isPointer: true }
        }
        Signal {
            name: "itemChanged"
            revision: 0
            Parameter { name: "item"; type: "QTableWidgetItem"; isPointer: true }
        }
        Signal {
            name: "currentItemChanged"
            revision: 0
            Parameter { name: "current"; type: "QTableWidgetItem"; isPointer: true }
            Parameter { name: "previous"; type: "QTableWidgetItem"; isPointer: true }
        }
        Signal { name: "itemSelectionChanged"; revision: 0 }
        Signal {
            name: "cellPressed"
            revision: 0
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "cellClicked"
            revision: 0
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "cellDoubleClicked"
            revision: 0
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "cellActivated"
            revision: 0
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "cellEntered"
            revision: 0
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "cellChanged"
            revision: 0
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "currentCellChanged"
            revision: 0
            Parameter { name: "currentRow"; type: "int" }
            Parameter { name: "currentColumn"; type: "int" }
            Parameter { name: "previousRow"; type: "int" }
            Parameter { name: "previousColumn"; type: "int" }
        }
        Method {
            name: "scrollToItem"
            revision: 0
            Parameter { name: "item"; type: "const QTableWidgetItem"; isPointer: true }
            Parameter { name: "hint"; type: "QAbstractItemView::ScrollHint" }
        }
        Method {
            name: "scrollToItem"
            revision: 0
            Parameter { name: "item"; type: "const QTableWidgetItem"; isPointer: true }
        }
        Method {
            name: "insertRow"
            revision: 0
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "insertColumn"
            revision: 0
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "removeRow"
            revision: 0
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "removeColumn"
            revision: 0
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "clear"; revision: 0 }
        Method { name: "clearContents"; revision: 0 }
        Method {
            name: "_q_emitItemPressed"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemClicked"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemDoubleClicked"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemActivated"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemEntered"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemChanged"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitCurrentItemChanged"
            revision: 0
            Parameter { name: "previous"; type: "QModelIndex" }
            Parameter { name: "current"; type: "QModelIndex" }
        }
        Method { name: "_q_sort"; revision: 0 }
        Method {
            name: "_q_dataChanged"
            revision: 0
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
    }
    Component {
        file: "qtablewidget_p.h"
        name: "QTableWidgetMimeData"
        prototype: "QMimeData"
        exports: ["qmluic.QtWidgets/QTableWidgetMimeData 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qgesture.h"
        name: "QTapAndHoldGesture"
        prototype: "QGesture"
        exports: ["qmluic.QtWidgets/QTapAndHoldGesture 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "position"; revision: 0; type: "QPointF" }
    }
    Component {
        file: "qgesture.h"
        name: "QTapGesture"
        prototype: "QGesture"
        exports: ["qmluic.QtWidgets/QTapGesture 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "position"; revision: 0; type: "QPointF" }
    }
    Component {
        file: "qtextbrowser.h"
        name: "QTextBrowser"
        prototype: "QTextEdit"
        exports: ["qmluic.QtWidgets/QTextBrowser 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; revision: 0; type: "QUrl" }
        Property { name: "sourceType"; revision: 0; type: "QTextDocument::ResourceType" }
        Property { name: "searchPaths"; revision: 0; type: "QStringList" }
        Property { name: "openExternalLinks"; revision: 0; type: "bool" }
        Property { name: "openLinks"; revision: 0; type: "bool" }
        Signal {
            name: "backwardAvailable"
            revision: 0
            Parameter { type: "bool" }
        }
        Signal {
            name: "forwardAvailable"
            revision: 0
            Parameter { type: "bool" }
        }
        Signal { name: "historyChanged"; revision: 0 }
        Signal {
            name: "sourceChanged"
            revision: 0
            Parameter { type: "QUrl" }
        }
        Signal {
            name: "highlighted"
            revision: 0
            Parameter { type: "QUrl" }
        }
        Signal {
            name: "highlighted"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "anchorClicked"
            revision: 0
            Parameter { type: "QUrl" }
        }
        Method {
            name: "setSource"
            revision: 0
            Parameter { name: "name"; type: "QUrl" }
        }
        Method {
            name: "setSource"
            revision: 0
            Parameter { name: "name"; type: "QUrl" }
            Parameter { name: "type"; type: "QTextDocument::ResourceType" }
        }
        Method { name: "backward"; revision: 0 }
        Method { name: "forward"; revision: 0 }
        Method { name: "home"; revision: 0 }
        Method { name: "reload"; revision: 0 }
        Method { name: "_q_documentModified"; revision: 0 }
        Method {
            name: "_q_activateAnchor"
            revision: 0
            Parameter { type: "string" }
        }
        Method {
            name: "_q_highlightLink"
            revision: 0
            Parameter { type: "string" }
        }
    }
    Component {
        file: "qtextedit.h"
        name: "QTextEdit"
        prototype: "QAbstractScrollArea"
        exports: ["qmluic.QtWidgets/QTextEdit 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "LineWrapMode"
            alias: ""
            values: [
                "NoWrap",
                "WidgetWidth",
                "FixedPixelWidth",
                "FixedColumnWidth"
            ]
        }
        Enum {
            name: "AutoFormatting"
            alias: "AutoFormattingFlag"
            isFlag: true
            values: ["AutoNone", "AutoBulletList", "AutoAll"]
        }
        Property { name: "autoFormatting"; revision: 0; type: "AutoFormatting" }
        Property { name: "tabChangesFocus"; revision: 0; type: "bool" }
        Property { name: "documentTitle"; revision: 0; type: "string" }
        Property { name: "undoRedoEnabled"; revision: 0; type: "bool" }
        Property { name: "lineWrapMode"; revision: 0; type: "LineWrapMode" }
        Property { name: "lineWrapColumnOrWidth"; revision: 0; type: "int" }
        Property { name: "readOnly"; revision: 0; type: "bool" }
        Property { name: "markdown"; revision: 0; type: "string" }
        Property { name: "html"; revision: 0; type: "string" }
        Property { name: "plainText"; revision: 0; type: "string" }
        Property { name: "overwriteMode"; revision: 0; type: "bool" }
        Property { name: "tabStopWidth"; revision: 0; type: "int" }
        Property { name: "tabStopDistance"; revision: 0; type: "double" }
        Property { name: "acceptRichText"; revision: 0; type: "bool" }
        Property { name: "cursorWidth"; revision: 0; type: "int" }
        Property { name: "textInteractionFlags"; revision: 0; type: "Qt::TextInteractionFlags" }
        Property { name: "document"; revision: 0; type: "QTextDocument"; isPointer: true }
        Property { name: "placeholderText"; revision: 0; type: "string" }
        Signal { name: "textChanged"; revision: 0 }
        Signal {
            name: "undoAvailable"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Signal {
            name: "redoAvailable"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Signal {
            name: "currentCharFormatChanged"
            revision: 0
            Parameter { name: "format"; type: "QTextCharFormat" }
        }
        Signal {
            name: "copyAvailable"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Signal { name: "selectionChanged"; revision: 0 }
        Signal { name: "cursorPositionChanged"; revision: 0 }
        Method {
            name: "setFontPointSize"
            revision: 0
            Parameter { name: "s"; type: "double" }
        }
        Method {
            name: "setFontFamily"
            revision: 0
            Parameter { name: "fontFamily"; type: "string" }
        }
        Method {
            name: "setFontWeight"
            revision: 0
            Parameter { name: "w"; type: "int" }
        }
        Method {
            name: "setFontUnderline"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Method {
            name: "setFontItalic"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Method {
            name: "setTextColor"
            revision: 0
            Parameter { name: "c"; type: "QColor" }
        }
        Method {
            name: "setTextBackgroundColor"
            revision: 0
            Parameter { name: "c"; type: "QColor" }
        }
        Method {
            name: "setCurrentFont"
            revision: 0
            Parameter { name: "f"; type: "QFont" }
        }
        Method {
            name: "setAlignment"
            revision: 0
            Parameter { name: "a"; type: "Qt::Alignment" }
        }
        Method {
            name: "setPlainText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "setHtml"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "setMarkdown"
            revision: 0
            Parameter { name: "markdown"; type: "string" }
        }
        Method {
            name: "setText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method { name: "cut"; revision: 0 }
        Method { name: "copy"; revision: 0 }
        Method { name: "paste"; revision: 0 }
        Method { name: "undo"; revision: 0 }
        Method { name: "redo"; revision: 0 }
        Method { name: "clear"; revision: 0 }
        Method { name: "selectAll"; revision: 0 }
        Method {
            name: "insertPlainText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "insertHtml"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "append"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "scrollToAnchor"
            revision: 0
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "zoomIn"
            revision: 0
            Parameter { name: "range"; type: "int" }
        }
        Method { name: "zoomIn"; revision: 0 }
        Method {
            name: "zoomOut"
            revision: 0
            Parameter { name: "range"; type: "int" }
        }
        Method { name: "zoomOut"; revision: 0 }
        Method {
            name: "_q_repaintContents"
            revision: 0
            Parameter { name: "r"; type: "QRectF" }
        }
        Method {
            name: "_q_currentCharFormatChanged"
            revision: 0
            Parameter { type: "QTextCharFormat" }
        }
        Method { name: "_q_adjustScrollbars"; revision: 0 }
        Method {
            name: "_q_ensureVisible"
            revision: 0
            Parameter { type: "QRectF" }
        }
        Method { name: "_q_cursorPositionChanged"; revision: 0 }
        Method {
            name: "_q_hoveredBlockWithMarkerChanged"
            revision: 0
            Parameter { type: "QTextBlock" }
        }
        Method {
            name: "loadResource"
            revision: 0
            type: "QVariant"
            Parameter { name: "type"; type: "int" }
            Parameter { name: "name"; type: "QUrl" }
        }
        Method {
            name: "inputMethodQuery"
            revision: 0
            type: "QVariant"
            Parameter { name: "query"; type: "Qt::InputMethodQuery" }
            Parameter { name: "argument"; type: "QVariant" }
        }
    }
    Component {
        name: "QThread"
        prototype: "QObject"
        Signal { name: "started" }
        Signal { name: "finished" }
        Method {
            name: "start"
            Parameter { type: "Priority" }
        }
        Method { name: "start" }
        Method { name: "terminate" }
        Method { name: "quit" }
    }
    Component {
        file: "qdatetimeedit.h"
        name: "QTimeEdit"
        prototype: "QDateTimeEdit"
        exports: ["qmluic.QtWidgets/QTimeEdit 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "time"; revision: 0; type: "QTime" }
        Signal {
            name: "userTimeChanged"
            revision: 0
            Parameter { name: "time"; type: "QTime" }
        }
    }
    Component {
        file: "qtooltip.cpp"
        name: "QTipLabel"
        prototype: "QLabel"
        exports: ["qmluic.QtWidgets/QTipLabel 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "styleSheetParentDestroyed"; revision: 0 }
    }
    Component {
        file: "qtoolbar.h"
        name: "QToolBar"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QToolBar 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "movable"; revision: 0; type: "bool" }
        Property { name: "allowedAreas"; revision: 0; type: "Qt::ToolBarAreas" }
        Property { name: "orientation"; revision: 0; type: "Qt::Orientation" }
        Property { name: "iconSize"; revision: 0; type: "QSize" }
        Property { name: "toolButtonStyle"; revision: 0; type: "Qt::ToolButtonStyle" }
        Property { name: "floating"; revision: 0; type: "bool" }
        Property { name: "floatable"; revision: 0; type: "bool" }
        Signal {
            name: "actionTriggered"
            revision: 0
            Parameter { name: "action"; type: "QAction"; isPointer: true }
        }
        Signal {
            name: "movableChanged"
            revision: 0
            Parameter { name: "movable"; type: "bool" }
        }
        Signal {
            name: "allowedAreasChanged"
            revision: 0
            Parameter { name: "allowedAreas"; type: "Qt::ToolBarAreas" }
        }
        Signal {
            name: "orientationChanged"
            revision: 0
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Signal {
            name: "iconSizeChanged"
            revision: 0
            Parameter { name: "iconSize"; type: "QSize" }
        }
        Signal {
            name: "toolButtonStyleChanged"
            revision: 0
            Parameter { name: "toolButtonStyle"; type: "Qt::ToolButtonStyle" }
        }
        Signal {
            name: "topLevelChanged"
            revision: 0
            Parameter { name: "topLevel"; type: "bool" }
        }
        Signal {
            name: "visibilityChanged"
            revision: 0
            Parameter { name: "visible"; type: "bool" }
        }
        Method {
            name: "setIconSize"
            revision: 0
            Parameter { name: "iconSize"; type: "QSize" }
        }
        Method {
            name: "setToolButtonStyle"
            revision: 0
            Parameter { name: "toolButtonStyle"; type: "Qt::ToolButtonStyle" }
        }
        Method {
            name: "_q_toggleView"
            revision: 0
            Parameter { type: "bool" }
        }
        Method {
            name: "_q_updateIconSize"
            revision: 0
            Parameter { type: "QSize" }
        }
        Method {
            name: "_q_updateToolButtonStyle"
            revision: 0
            Parameter { type: "Qt::ToolButtonStyle" }
        }
    }
    Component {
        file: "qtoolbarextension_p.h"
        name: "QToolBarExtension"
        prototype: "QToolButton"
        exports: ["qmluic.QtWidgets/QToolBarExtension 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "setOrientation"
            revision: 0
            Parameter { name: "o"; type: "Qt::Orientation" }
        }
    }
    Component {
        file: "qtoolbarlayout_p.h"
        name: "QToolBarLayout"
        prototype: "QLayout"
        exports: ["qmluic.QtWidgets/QToolBarLayout 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "setExpanded"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
    }
    Component {
        file: "qtoolbarseparator_p.h"
        name: "QToolBarSeparator"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QToolBarSeparator 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "setOrientation"
            revision: 0
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
    }
    Component {
        file: "qtoolbox.h"
        name: "QToolBox"
        prototype: "QFrame"
        exports: ["qmluic.QtWidgets/QToolBox 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "currentIndex"; revision: 0; type: "int" }
        Property { name: "count"; revision: 0; type: "int" }
        Signal {
            name: "currentChanged"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentIndex"
            revision: 0
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentWidget"
            revision: 0
            Parameter { name: "widget"; type: "QWidget"; isPointer: true }
        }
        Method { name: "_q_buttonClicked"; revision: 0 }
        Method {
            name: "_q_widgetDestroyed"
            revision: 0
            Parameter { type: "QObject"; isPointer: true }
        }
    }
    Component {
        file: "qtoolbox.cpp"
        name: "QToolBoxButton"
        prototype: "QAbstractButton"
        exports: ["qmluic.QtWidgets/QToolBoxButton 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qtoolbutton.h"
        name: "QToolButton"
        prototype: "QAbstractButton"
        exports: ["qmluic.QtWidgets/QToolButton 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ToolButtonPopupMode"
            alias: ""
            values: ["DelayedPopup", "MenuButtonPopup", "InstantPopup"]
        }
        Property { name: "popupMode"; revision: 0; type: "ToolButtonPopupMode" }
        Property { name: "toolButtonStyle"; revision: 0; type: "Qt::ToolButtonStyle" }
        Property { name: "autoRaise"; revision: 0; type: "bool" }
        Property { name: "arrowType"; revision: 0; type: "Qt::ArrowType" }
        Signal {
            name: "triggered"
            revision: 0
            Parameter { type: "QAction"; isPointer: true }
        }
        Method { name: "showMenu"; revision: 0 }
        Method {
            name: "setToolButtonStyle"
            revision: 0
            Parameter { name: "style"; type: "Qt::ToolButtonStyle" }
        }
        Method {
            name: "setDefaultAction"
            revision: 0
            Parameter { type: "QAction"; isPointer: true }
        }
        Method { name: "_q_buttonPressed"; revision: 0 }
        Method { name: "_q_buttonReleased"; revision: 0 }
        Method { name: "_q_updateButtonDown"; revision: 0 }
        Method {
            name: "_q_menuTriggered"
            revision: 0
            Parameter { type: "QAction"; isPointer: true }
        }
        Method { name: "_q_actionTriggered"; revision: 0 }
    }
    Component {
        file: "qmenu.cpp"
        name: "QTornOffMenu"
        prototype: "QMenu"
        exports: ["qmluic.QtWidgets/QTornOffMenu 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "onTrigger"
            revision: 0
            Parameter { name: "action"; type: "QAction"; isPointer: true }
        }
        Method {
            name: "onHovered"
            revision: 0
            Parameter { name: "action"; type: "QAction"; isPointer: true }
        }
    }
    Component {
        file: "qtreewidget_p.h"
        name: "QTreeModel"
        prototype: "QAbstractItemModel"
        exports: ["qmluic.QtWidgets/QTreeModel 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qtreeview.h"
        name: "QTreeView"
        prototype: "QAbstractItemView"
        exports: ["qmluic.QtWidgets/QTreeView 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "autoExpandDelay"; revision: 0; type: "int" }
        Property { name: "indentation"; revision: 0; type: "int" }
        Property { name: "rootIsDecorated"; revision: 0; type: "bool" }
        Property { name: "uniformRowHeights"; revision: 0; type: "bool" }
        Property { name: "itemsExpandable"; revision: 0; type: "bool" }
        Property { name: "sortingEnabled"; revision: 0; type: "bool" }
        Property { name: "animated"; revision: 0; type: "bool" }
        Property { name: "allColumnsShowFocus"; revision: 0; type: "bool" }
        Property { name: "wordWrap"; revision: 0; type: "bool" }
        Property { name: "headerHidden"; revision: 0; type: "bool" }
        Property { name: "expandsOnDoubleClick"; revision: 0; type: "bool" }
        Signal {
            name: "expanded"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Signal {
            name: "collapsed"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "hideColumn"
            revision: 0
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "showColumn"
            revision: 0
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "expand"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "collapse"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "resizeColumnToContents"
            revision: 0
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "sortByColumn"
            revision: 0
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "sortByColumn"
            revision: 0
            Parameter { name: "column"; type: "int" }
            Parameter { name: "order"; type: "Qt::SortOrder" }
        }
        Method { name: "expandAll"; revision: 0 }
        Method {
            name: "expandRecursively"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "depth"; type: "int" }
        }
        Method {
            name: "expandRecursively"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method { name: "collapseAll"; revision: 0 }
        Method {
            name: "expandToDepth"
            revision: 0
            Parameter { name: "depth"; type: "int" }
        }
        Method {
            name: "columnResized"
            revision: 0
            Parameter { name: "column"; type: "int" }
            Parameter { name: "oldSize"; type: "int" }
            Parameter { name: "newSize"; type: "int" }
        }
        Method {
            name: "columnCountChanged"
            revision: 0
            Parameter { name: "oldCount"; type: "int" }
            Parameter { name: "newCount"; type: "int" }
        }
        Method { name: "columnMoved"; revision: 0 }
        Method { name: "reexpand"; revision: 0 }
        Method {
            name: "rowsRemoved"
            revision: 0
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "verticalScrollbarValueChanged"
            revision: 0
            Parameter { name: "value"; type: "int" }
        }
        Method { name: "_q_endAnimatedOperation"; revision: 0 }
        Method { name: "_q_modelAboutToBeReset"; revision: 0 }
        Method {
            name: "_q_sortIndicatorChanged"
            revision: 0
            Parameter { name: "column"; type: "int" }
            Parameter { name: "order"; type: "Qt::SortOrder" }
        }
    }
    Component {
        file: "qtreewidget.h"
        name: "QTreeWidget"
        prototype: "QTreeView"
        exports: ["qmluic.QtWidgets/QTreeWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "columnCount"; revision: 0; type: "int" }
        Property { name: "topLevelItemCount"; revision: 0; type: "int" }
        Signal {
            name: "itemPressed"
            revision: 0
            Parameter { name: "item"; type: "QTreeWidgetItem"; isPointer: true }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "itemClicked"
            revision: 0
            Parameter { name: "item"; type: "QTreeWidgetItem"; isPointer: true }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "itemDoubleClicked"
            revision: 0
            Parameter { name: "item"; type: "QTreeWidgetItem"; isPointer: true }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "itemActivated"
            revision: 0
            Parameter { name: "item"; type: "QTreeWidgetItem"; isPointer: true }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "itemEntered"
            revision: 0
            Parameter { name: "item"; type: "QTreeWidgetItem"; isPointer: true }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "itemChanged"
            revision: 0
            Parameter { name: "item"; type: "QTreeWidgetItem"; isPointer: true }
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "itemExpanded"
            revision: 0
            Parameter { name: "item"; type: "QTreeWidgetItem"; isPointer: true }
        }
        Signal {
            name: "itemCollapsed"
            revision: 0
            Parameter { name: "item"; type: "QTreeWidgetItem"; isPointer: true }
        }
        Signal {
            name: "currentItemChanged"
            revision: 0
            Parameter { name: "current"; type: "QTreeWidgetItem"; isPointer: true }
            Parameter { name: "previous"; type: "QTreeWidgetItem"; isPointer: true }
        }
        Signal { name: "itemSelectionChanged"; revision: 0 }
        Method {
            name: "scrollToItem"
            revision: 0
            Parameter { name: "item"; type: "const QTreeWidgetItem"; isPointer: true }
            Parameter { name: "hint"; type: "QAbstractItemView::ScrollHint" }
        }
        Method {
            name: "scrollToItem"
            revision: 0
            Parameter { name: "item"; type: "const QTreeWidgetItem"; isPointer: true }
        }
        Method {
            name: "expandItem"
            revision: 0
            Parameter { name: "item"; type: "const QTreeWidgetItem"; isPointer: true }
        }
        Method {
            name: "collapseItem"
            revision: 0
            Parameter { name: "item"; type: "const QTreeWidgetItem"; isPointer: true }
        }
        Method { name: "clear"; revision: 0 }
        Method {
            name: "_q_emitItemPressed"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemClicked"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemDoubleClicked"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemActivated"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemEntered"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemChanged"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemExpanded"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitItemCollapsed"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "_q_emitCurrentItemChanged"
            revision: 0
            Parameter { name: "previous"; type: "QModelIndex" }
            Parameter { name: "current"; type: "QModelIndex" }
        }
        Method { name: "_q_sort"; revision: 0 }
        Method {
            name: "_q_dataChanged"
            revision: 0
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Method {
            name: "_q_selectionChanged"
            revision: 0
            Parameter { name: "selected"; type: "QItemSelection" }
            Parameter { name: "deselected"; type: "QItemSelection" }
        }
    }
    Component {
        file: "qitemeditorfactory.cpp"
        name: "QUIntSpinBox"
        prototype: "QSpinBox"
        exports: ["qmluic.QtWidgets/QUIntSpinBox 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "value"; revision: 0; type: "uint" }
        Signal { name: "uintValueChanged"; revision: 0 }
    }
    Component {
        file: "qundostack_p.h"
        name: "QUndoAction"
        prototype: "QAction"
        exports: ["qmluic.QtWidgets/QUndoAction 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "setPrefixedText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
    }
    Component {
        file: "qundogroup.h"
        name: "QUndoGroup"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QUndoGroup 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "activeStackChanged"
            revision: 0
            Parameter { name: "stack"; type: "QUndoStack"; isPointer: true }
        }
        Signal {
            name: "indexChanged"
            revision: 0
            Parameter { name: "idx"; type: "int" }
        }
        Signal {
            name: "cleanChanged"
            revision: 0
            Parameter { name: "clean"; type: "bool" }
        }
        Signal {
            name: "canUndoChanged"
            revision: 0
            Parameter { name: "canUndo"; type: "bool" }
        }
        Signal {
            name: "canRedoChanged"
            revision: 0
            Parameter { name: "canRedo"; type: "bool" }
        }
        Signal {
            name: "undoTextChanged"
            revision: 0
            Parameter { name: "undoText"; type: "string" }
        }
        Signal {
            name: "redoTextChanged"
            revision: 0
            Parameter { name: "redoText"; type: "string" }
        }
        Method { name: "undo"; revision: 0 }
        Method { name: "redo"; revision: 0 }
        Method {
            name: "setActiveStack"
            revision: 0
            Parameter { name: "stack"; type: "QUndoStack"; isPointer: true }
        }
    }
    Component {
        file: "qundoview.cpp"
        name: "QUndoModel"
        prototype: "QAbstractItemModel"
        exports: ["qmluic.QtWidgets/QUndoModel 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "setStack"
            revision: 0
            Parameter { name: "stack"; type: "QUndoStack"; isPointer: true }
        }
        Method { name: "stackChanged"; revision: 0 }
        Method {
            name: "stackDestroyed"
            revision: 0
            Parameter { name: "obj"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "setStackCurrentIndex"
            revision: 0
            Parameter { name: "index"; type: "QModelIndex" }
        }
    }
    Component {
        file: "qundostack.h"
        name: "QUndoStack"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QUndoStack 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "active"; revision: 0; type: "bool" }
        Property { name: "undoLimit"; revision: 0; type: "int" }
        Property { name: "canUndo"; revision: 0; type: "bool" }
        Property { name: "canRedo"; revision: 0; type: "bool" }
        Property { name: "undoText"; revision: 0; type: "string" }
        Property { name: "redoText"; revision: 0; type: "string" }
        Property { name: "clean"; revision: 0; type: "bool" }
        Signal {
            name: "indexChanged"
            revision: 0
            Parameter { name: "idx"; type: "int" }
        }
        Signal {
            name: "cleanChanged"
            revision: 0
            Parameter { name: "clean"; type: "bool" }
        }
        Signal {
            name: "canUndoChanged"
            revision: 0
            Parameter { name: "canUndo"; type: "bool" }
        }
        Signal {
            name: "canRedoChanged"
            revision: 0
            Parameter { name: "canRedo"; type: "bool" }
        }
        Signal {
            name: "undoTextChanged"
            revision: 0
            Parameter { name: "undoText"; type: "string" }
        }
        Signal {
            name: "redoTextChanged"
            revision: 0
            Parameter { name: "redoText"; type: "string" }
        }
        Method { name: "setClean"; revision: 0 }
        Method { name: "resetClean"; revision: 0 }
        Method {
            name: "setIndex"
            revision: 0
            Parameter { name: "idx"; type: "int" }
        }
        Method { name: "undo"; revision: 0 }
        Method { name: "redo"; revision: 0 }
        Method {
            name: "setActive"
            revision: 0
            Parameter { name: "active"; type: "bool" }
        }
        Method { name: "setActive"; revision: 0 }
    }
    Component {
        file: "qundoview.h"
        name: "QUndoView"
        prototype: "QListView"
        exports: ["qmluic.QtWidgets/QUndoView 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "emptyLabel"; revision: 0; type: "string" }
        Property { name: "cleanIcon"; revision: 0; type: "QIcon" }
        Method {
            name: "setStack"
            revision: 0
            Parameter { name: "stack"; type: "QUndoStack"; isPointer: true }
        }
        Method {
            name: "setGroup"
            revision: 0
            Parameter { name: "group"; type: "QUndoGroup"; isPointer: true }
        }
    }
    Component {
        file: "qwidgettextcontrol_p.h"
        name: "QUnicodeControlCharacterMenu"
        prototype: "QMenu"
        exports: ["qmluic.QtWidgets/QUnicodeControlCharacterMenu 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "menuActionTriggered"; revision: 0 }
    }
    Component {
        file: "qsidebar_p.h"
        name: "QUrlModel"
        exports: ["qmluic.QtWidgets/QUrlModel 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "dataChanged"
            revision: 0
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Method { name: "layoutChanged"; revision: 0 }
    }
    Component {
        file: "qboxlayout.h"
        name: "QVBoxLayout"
        prototype: "QBoxLayout"
        exports: ["qmluic.QtWidgets/QVBoxLayout 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qcolordialog.cpp"
        name: "QWellArray"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QWellArray 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "selectedColumn"; revision: 0; type: "int" }
        Property { name: "selectedRow"; revision: 0; type: "int" }
        Signal {
            name: "selected"
            revision: 0
            Parameter { name: "row"; type: "int" }
            Parameter { name: "col"; type: "int" }
        }
        Signal {
            name: "currentChanged"
            revision: 0
            Parameter { name: "row"; type: "int" }
            Parameter { name: "col"; type: "int" }
        }
        Signal {
            name: "colorChanged"
            revision: 0
            Parameter { name: "index"; type: "int" }
            Parameter { name: "color"; type: "QRgb" }
        }
    }
    Component {
        file: "qwhatsthis.cpp"
        name: "QWhatsThat"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QWhatsThat 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qwhatsthis.cpp"
        name: "QWhatsThisAction"
        prototype: "QAction"
        exports: ["qmluic.QtWidgets/QWhatsThisAction 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "actionTriggered"; revision: 0 }
    }
    Component {
        file: "qwidget.h"
        name: "QWidget"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QWidget 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "modal"; revision: 0; type: "bool" }
        Property { name: "windowModality"; revision: 0; type: "Qt::WindowModality" }
        Property { name: "enabled"; revision: 0; type: "bool" }
        Property { name: "geometry"; revision: 0; type: "QRect" }
        Property { name: "frameGeometry"; revision: 0; type: "QRect" }
        Property { name: "normalGeometry"; revision: 0; type: "QRect" }
        Property { name: "x"; revision: 0; type: "int" }
        Property { name: "y"; revision: 0; type: "int" }
        Property { name: "pos"; revision: 0; type: "QPoint" }
        Property { name: "frameSize"; revision: 0; type: "QSize" }
        Property { name: "size"; revision: 0; type: "QSize" }
        Property { name: "width"; revision: 0; type: "int" }
        Property { name: "height"; revision: 0; type: "int" }
        Property { name: "rect"; revision: 0; type: "QRect" }
        Property { name: "childrenRect"; revision: 0; type: "QRect" }
        Property { name: "childrenRegion"; revision: 0; type: "QRegion" }
        Property { name: "sizePolicy"; revision: 0; type: "QSizePolicy" }
        Property { name: "minimumSize"; revision: 0; type: "QSize" }
        Property { name: "maximumSize"; revision: 0; type: "QSize" }
        Property { name: "minimumWidth"; revision: 0; type: "int" }
        Property { name: "minimumHeight"; revision: 0; type: "int" }
        Property { name: "maximumWidth"; revision: 0; type: "int" }
        Property { name: "maximumHeight"; revision: 0; type: "int" }
        Property { name: "sizeIncrement"; revision: 0; type: "QSize" }
        Property { name: "baseSize"; revision: 0; type: "QSize" }
        Property { name: "palette"; revision: 0; type: "QPalette" }
        Property { name: "font"; revision: 0; type: "QFont" }
        Property { name: "cursor"; revision: 0; type: "QCursor" }
        Property { name: "mouseTracking"; revision: 0; type: "bool" }
        Property { name: "tabletTracking"; revision: 0; type: "bool" }
        Property { name: "isActiveWindow"; revision: 0; type: "bool" }
        Property { name: "focusPolicy"; revision: 0; type: "Qt::FocusPolicy" }
        Property { name: "focus"; revision: 0; type: "bool" }
        Property { name: "contextMenuPolicy"; revision: 0; type: "Qt::ContextMenuPolicy" }
        Property { name: "updatesEnabled"; revision: 0; type: "bool" }
        Property { name: "visible"; revision: 0; type: "bool" }
        Property { name: "minimized"; revision: 0; type: "bool" }
        Property { name: "maximized"; revision: 0; type: "bool" }
        Property { name: "fullScreen"; revision: 0; type: "bool" }
        Property { name: "sizeHint"; revision: 0; type: "QSize" }
        Property { name: "minimumSizeHint"; revision: 0; type: "QSize" }
        Property { name: "acceptDrops"; revision: 0; type: "bool" }
        Property { name: "windowTitle"; revision: 0; type: "string" }
        Property { name: "windowIcon"; revision: 0; type: "QIcon" }
        Property { name: "windowIconText"; revision: 0; type: "string" }
        Property { name: "windowOpacity"; revision: 0; type: "double" }
        Property { name: "windowModified"; revision: 0; type: "bool" }
        Property { name: "toolTip"; revision: 0; type: "string" }
        Property { name: "toolTipDuration"; revision: 0; type: "int" }
        Property { name: "statusTip"; revision: 0; type: "string" }
        Property { name: "whatsThis"; revision: 0; type: "string" }
        Property { name: "accessibleName"; revision: 0; type: "string" }
        Property { name: "accessibleDescription"; revision: 0; type: "string" }
        Property { name: "layoutDirection"; revision: 0; type: "Qt::LayoutDirection" }
        Property { name: "autoFillBackground"; revision: 0; type: "bool" }
        Property { name: "styleSheet"; revision: 0; type: "string" }
        Property { name: "locale"; revision: 0; type: "QLocale" }
        Property { name: "windowFilePath"; revision: 0; type: "string" }
        Property { name: "inputMethodHints"; revision: 0; type: "Qt::InputMethodHints" }
        Property { name: "actions"; revision: 0; type: "QList<QAction*>" }
        Signal {
            name: "windowTitleChanged"
            revision: 0
            Parameter { name: "title"; type: "string" }
        }
        Signal {
            name: "windowIconChanged"
            revision: 0
            Parameter { name: "icon"; type: "QIcon" }
        }
        Signal {
            name: "windowIconTextChanged"
            revision: 0
            Parameter { name: "iconText"; type: "string" }
        }
        Signal {
            name: "customContextMenuRequested"
            revision: 0
            Parameter { name: "pos"; type: "QPoint" }
        }
        Method {
            name: "setEnabled"
            revision: 0
            Parameter { type: "bool" }
        }
        Method {
            name: "setDisabled"
            revision: 0
            Parameter { type: "bool" }
        }
        Method {
            name: "setWindowModified"
            revision: 0
            Parameter { type: "bool" }
        }
        Method {
            name: "setWindowTitle"
            revision: 0
            Parameter { type: "string" }
        }
        Method {
            name: "setStyleSheet"
            revision: 0
            Parameter { name: "styleSheet"; type: "string" }
        }
        Method { name: "setFocus"; revision: 0 }
        Method { name: "update"; revision: 0 }
        Method { name: "repaint"; revision: 0 }
        Method {
            name: "setVisible"
            revision: 0
            Parameter { name: "visible"; type: "bool" }
        }
        Method {
            name: "setHidden"
            revision: 0
            Parameter { name: "hidden"; type: "bool" }
        }
        Method { name: "show"; revision: 0 }
        Method { name: "hide"; revision: 0 }
        Method { name: "showMinimized"; revision: 0 }
        Method { name: "showMaximized"; revision: 0 }
        Method { name: "showFullScreen"; revision: 0 }
        Method { name: "showNormal"; revision: 0 }
        Method { name: "close"; revision: 0; type: "bool" }
        Method { name: "raise"; revision: 0 }
        Method { name: "lower"; revision: 0 }
        Method { name: "updateMicroFocus"; revision: 0 }
        Method { name: "_q_showIfNotHidden"; revision: 0 }
        Method {
            name: "grab"
            revision: 0
            type: "QPixmap"
            Parameter { name: "rectangle"; type: "QRect" }
        }
        Method { name: "grab"; revision: 0; type: "QPixmap" }
    }
    Component {
        file: "qwidgetaction.h"
        name: "QWidgetAction"
        prototype: "QAction"
        exports: ["qmluic.QtWidgets/QWidgetAction 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "_q_widgetDestroyed"
            revision: 0
            Parameter { type: "QObject"; isPointer: true }
        }
    }
    Component {
        file: "qwidgetanimator_p.h"
        name: "QWidgetAnimator"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QWidgetAnimator 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "animationFinished"; revision: 0 }
    }
    Component {
        file: "qwidgetlinecontrol_p.h"
        name: "QWidgetLineControl"
        exports: ["qmluic.QtWidgets/QWidgetLineControl 5.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "cursorPositionChanged"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Signal { name: "selectionChanged"; revision: 0 }
        Signal {
            name: "displayTextChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "textChanged"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "textEdited"
            revision: 0
            Parameter { type: "string" }
        }
        Signal { name: "resetInputContext"; revision: 0 }
        Signal { name: "updateMicroFocus"; revision: 0 }
        Signal { name: "accepted"; revision: 0 }
        Signal { name: "editingFinished"; revision: 0 }
        Signal {
            name: "updateNeeded"
            revision: 0
            Parameter { type: "QRect" }
        }
        Signal { name: "inputRejected"; revision: 0 }
        Method { name: "_q_deleteSelected"; revision: 0 }
    }
    Component {
        file: "qwidget_p.h"
        name: "QWidgetPrivate"
        exports: ["qmluic.QtWidgets/QWidgetPrivate 5.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DrawWidgetFlags"
            alias: "DrawWidgetFlag"
            isFlag: true
            values: [
                "DrawAsRoot",
                "DrawPaintOnScreen",
                "DrawRecursive",
                "DrawInvisible",
                "DontSubtractOpaqueChildren",
                "DontDrawOpaqueChildren",
                "DontDrawNativeChildren",
                "DontSetCompositionMode"
            ]
        }
        Enum {
            name: "CloseMode"
            alias: ""
            values: [
                "CloseNoEvent",
                "CloseWithEvent",
                "CloseWithSpontaneousEvent"
            ]
        }
        Enum {
            name: "Direction"
            alias: ""
            values: [
                "DirectionNorth",
                "DirectionEast",
                "DirectionSouth",
                "DirectionWest"
            ]
        }
    }
    Component {
        file: "qwidgetrepaintmanager_p.h"
        name: "QWidgetRepaintManager"
        exports: ["qmluic.QtWidgets/QWidgetRepaintManager 5.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "UpdateTime"
            alias: ""
            values: ["UpdateNow", "UpdateLater"]
        }
        Enum {
            name: "BufferState"
            alias: ""
            values: ["BufferValid", "BufferInvalid"]
        }
    }
    Component {
        file: "qwidgetresizehandler_p.h"
        name: "QWidgetResizeHandler"
        prototype: "QObject"
        exports: ["qmluic.QtWidgets/QWidgetResizeHandler 5.0"]
        exportMetaObjectRevisions: [0]
        Signal { name: "activate"; revision: 0 }
    }
    Component {
        file: "qwidgettextcontrol_p.h"
        name: "QWidgetTextControl"
        exports: ["qmluic.QtWidgets/QWidgetTextControl 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "html"; revision: 0; type: "string" }
        Property { name: "overwriteMode"; revision: 0; type: "bool" }
        Property { name: "acceptRichText"; revision: 0; type: "bool" }
        Property { name: "cursorWidth"; revision: 0; type: "int" }
        Property { name: "textInteractionFlags"; revision: 0; type: "Qt::TextInteractionFlags" }
        Property { name: "openExternalLinks"; revision: 0; type: "bool" }
        Property { name: "ignoreUnusedNavigationEvents"; revision: 0; type: "bool" }
        Signal { name: "textChanged"; revision: 0 }
        Signal {
            name: "undoAvailable"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Signal {
            name: "redoAvailable"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Signal {
            name: "currentCharFormatChanged"
            revision: 0
            Parameter { name: "format"; type: "QTextCharFormat" }
        }
        Signal {
            name: "copyAvailable"
            revision: 0
            Parameter { name: "b"; type: "bool" }
        }
        Signal { name: "selectionChanged"; revision: 0 }
        Signal { name: "cursorPositionChanged"; revision: 0 }
        Signal {
            name: "updateRequest"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
        }
        Signal { name: "updateRequest"; revision: 0 }
        Signal {
            name: "documentSizeChanged"
            revision: 0
            Parameter { type: "QSizeF" }
        }
        Signal {
            name: "blockCountChanged"
            revision: 0
            Parameter { name: "newBlockCount"; type: "int" }
        }
        Signal {
            name: "visibilityRequest"
            revision: 0
            Parameter { name: "rect"; type: "QRectF" }
        }
        Signal { name: "microFocusChanged"; revision: 0 }
        Signal {
            name: "linkActivated"
            revision: 0
            Parameter { name: "link"; type: "string" }
        }
        Signal {
            name: "linkHovered"
            revision: 0
            Parameter { type: "string" }
        }
        Signal {
            name: "blockMarkerHovered"
            revision: 0
            Parameter { name: "block"; type: "QTextBlock" }
        }
        Signal {
            name: "modificationChanged"
            revision: 0
            Parameter { name: "m"; type: "bool" }
        }
        Method {
            name: "setPlainText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "setMarkdown"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "setHtml"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method { name: "cut"; revision: 0 }
        Method { name: "copy"; revision: 0 }
        Method {
            name: "paste"
            revision: 0
            Parameter { name: "mode"; type: "QClipboard::Mode" }
        }
        Method { name: "paste"; revision: 0 }
        Method { name: "undo"; revision: 0 }
        Method { name: "redo"; revision: 0 }
        Method { name: "clear"; revision: 0 }
        Method { name: "selectAll"; revision: 0 }
        Method {
            name: "insertPlainText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "insertHtml"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "append"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "appendHtml"
            revision: 0
            Parameter { name: "html"; type: "string" }
        }
        Method {
            name: "appendPlainText"
            revision: 0
            Parameter { name: "text"; type: "string" }
        }
        Method { name: "adjustSize"; revision: 0 }
        Method { name: "_q_updateCurrentCharFormatAndSelection"; revision: 0 }
        Method {
            name: "_q_emitCursorPosChanged"
            revision: 0
            Parameter { type: "QTextCursor" }
        }
        Method { name: "_q_deleteSelected"; revision: 0 }
        Method { name: "_q_copyLink"; revision: 0 }
        Method {
            name: "_q_updateBlock"
            revision: 0
            Parameter { type: "QTextBlock" }
        }
        Method { name: "_q_documentLayoutChanged"; revision: 0 }
        Method {
            name: "_q_contentsChanged"
            revision: 0
            Parameter { type: "int" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "loadResource"
            revision: 0
            type: "QVariant"
            Parameter { name: "type"; type: "int" }
            Parameter { name: "name"; type: "QUrl" }
        }
    }
    Component {
        file: "qwidgetwindow_p.h"
        name: "QWidgetWindow"
        exports: ["qmluic.QtWidgets/QWidgetWindow 5.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "updateObjectName"; revision: 0 }
        Method { name: "handleScreenChange"; revision: 0 }
    }
    Component {
        file: "qwindowcontainer_p.h"
        name: "QWindowContainer"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QWindowContainer 5.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "focusWindowChanged"
            revision: 0
            Parameter { name: "focusWindow"; type: "QWindow"; isPointer: true }
        }
    }
    Component {
        file: "qwindowsstyle_p.h"
        name: "QWindowsStyle"
        prototype: "QCommonStyle"
        exports: ["qmluic.QtWidgets/QWindowsStyle 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        file: "qwizard.h"
        name: "QWizard"
        prototype: "QDialog"
        exports: ["qmluic.QtWidgets/QWizard 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "WizardStyle"
            alias: ""
            values: [
                "ClassicStyle",
                "ModernStyle",
                "MacStyle",
                "AeroStyle",
                "NStyles"
            ]
        }
        Enum {
            name: "WizardOption"
            alias: ""
            values: [
                "IndependentPages",
                "IgnoreSubTitles",
                "ExtendedWatermarkPixmap",
                "NoDefaultButton",
                "NoBackButtonOnStartPage",
                "NoBackButtonOnLastPage",
                "DisabledBackButtonOnLastPage",
                "HaveNextButtonOnLastPage",
                "HaveFinishButtonOnEarlyPages",
                "NoCancelButton",
                "CancelButtonOnLeft",
                "HaveHelpButton",
                "HelpButtonOnRight",
                "HaveCustomButton1",
                "HaveCustomButton2",
                "HaveCustomButton3",
                "NoCancelButtonOnLastPage"
            ]
        }
        Enum {
            name: "WizardOptions"
            alias: "WizardOption"
            isFlag: true
            values: [
                "IndependentPages",
                "IgnoreSubTitles",
                "ExtendedWatermarkPixmap",
                "NoDefaultButton",
                "NoBackButtonOnStartPage",
                "NoBackButtonOnLastPage",
                "DisabledBackButtonOnLastPage",
                "HaveNextButtonOnLastPage",
                "HaveFinishButtonOnEarlyPages",
                "NoCancelButton",
                "CancelButtonOnLeft",
                "HaveHelpButton",
                "HelpButtonOnRight",
                "HaveCustomButton1",
                "HaveCustomButton2",
                "HaveCustomButton3",
                "NoCancelButtonOnLastPage"
            ]
        }
        Property { name: "wizardStyle"; revision: 0; type: "WizardStyle" }
        Property { name: "options"; revision: 0; type: "WizardOptions" }
        Property { name: "titleFormat"; revision: 0; type: "Qt::TextFormat" }
        Property { name: "subTitleFormat"; revision: 0; type: "Qt::TextFormat" }
        Property { name: "startId"; revision: 0; type: "int" }
        Property { name: "currentId"; revision: 0; type: "int" }
        Signal {
            name: "currentIdChanged"
            revision: 0
            Parameter { name: "id"; type: "int" }
        }
        Signal { name: "helpRequested"; revision: 0 }
        Signal {
            name: "customButtonClicked"
            revision: 0
            Parameter { name: "which"; type: "int" }
        }
        Signal {
            name: "pageAdded"
            revision: 0
            Parameter { name: "id"; type: "int" }
        }
        Signal {
            name: "pageRemoved"
            revision: 0
            Parameter { name: "id"; type: "int" }
        }
        Method { name: "back"; revision: 0 }
        Method { name: "next"; revision: 0 }
        Method { name: "restart"; revision: 0 }
        Method { name: "_q_emitCustomButtonClicked"; revision: 0 }
        Method { name: "_q_updateButtonStates"; revision: 0 }
        Method {
            name: "_q_handleFieldObjectDestroyed"
            revision: 0
            Parameter { type: "QObject"; isPointer: true }
        }
    }
    Component {
        file: "qwizard.h"
        name: "QWizardPage"
        prototype: "QWidget"
        exports: ["qmluic.QtWidgets/QWizardPage 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "title"; revision: 0; type: "string" }
        Property { name: "subTitle"; revision: 0; type: "string" }
        Signal { name: "completeChanged"; revision: 0 }
        Method { name: "_q_maybeEmitCompleteChanged"; revision: 0 }
        Method { name: "_q_updateCachedCompleteState"; revision: 0 }
    }
}
