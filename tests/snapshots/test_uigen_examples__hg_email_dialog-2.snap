---
source: tests/test_uigen_examples.rs
expression: ui_support_h
---
#pragma once
#include "ui_hgemaildialog.h"

namespace UiSupport {
class HgEmailDialog
{
public:
    HgEmailDialog(QDialog *root, Ui::HgEmailDialog *ui): root_(root), ui_(ui) {}

    void setup()
    {
        this->setup_writeIntroCheck_enabled();
        this->setup_introBox_visible();
        this->update_writeIntroCheck_enabled();
        this->update_introBox_visible();
    }

private:
    void setup_writeIntroCheck_enabled()
    {
        QObject::connect(this->ui_->bundleRadio, &QAbstractButton::toggled, root_, [this]() { this->update_writeIntroCheck_enabled(); });
    }

    void update_writeIntroCheck_enabled()
    {
        this->ui_->writeIntroCheck->setEnabled(this->eval_writeIntroCheck_enabled());
    }

    bool eval_writeIntroCheck_enabled() const
    {
        bool a0;
        bool a1;
    b0:
        a0 = this->ui_->bundleRadio->isChecked();
        a1 = !a0;
        return a1;
    }

    void setup_introBox_visible()
    {
        QObject::connect(this->ui_->writeIntroCheck, &QAbstractButton::toggled, root_, [this]() { this->update_introBox_visible(); });
        QObject::connect(this->ui_->bundleRadio, &QAbstractButton::toggled, root_, [this]() { this->update_introBox_visible(); });
    }

    void update_introBox_visible()
    {
        this->ui_->introBox->setVisible(this->eval_introBox_visible());
    }

    bool eval_introBox_visible() const
    {
        bool a0;
        bool a1;
        bool a2;
    b0:
        a0 = this->ui_->writeIntroCheck->isChecked();
        a1 = this->ui_->bundleRadio->isChecked();
        a2 = a0 || a1;
        return a2;
    }

    QDialog *const root_;
    Ui::HgEmailDialog *const ui_;

};
} // namespace UiSupport

