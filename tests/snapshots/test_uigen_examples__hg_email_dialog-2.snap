---
source: tests/test_uigen_examples.rs
expression: ui_support_h
---
#pragma once
#include "ui_hgemaildialog.h"

namespace UiSupport {
class HgEmailDialog
{
public:
    HgEmailDialog(QDialog *root, Ui::HgEmailDialog *ui): root_(root), ui_(ui) {}

    void setup()
    {
        this->setupWriteIntroCheckEnabled();
        this->setupIntroBoxVisible();
        this->setupBundleRadioClicked();
        this->setupWriteIntroCheckClicked();
        this->updateWriteIntroCheckEnabled();
        this->updateIntroBoxVisible();
    }

private:
    enum class BindingIndex : unsigned {
        WriteIntroCheckEnabled,
        IntroBoxVisible,
    };

    void setupWriteIntroCheckEnabled()
    {
        QObject::connect(this->ui_->bundleRadio, QOverload<bool>::of(&QAbstractButton::toggled), this->root_, [this]() { this->updateWriteIntroCheckEnabled(); });
    }

    void updateWriteIntroCheckEnabled()
    {
#ifndef QT_NO_DEBUG
        constexpr unsigned index = static_cast<unsigned>(BindingIndex::WriteIntroCheckEnabled);
        Q_ASSERT_X(!(this->bindingGuard_[index >> 5] & (1U << (index & 0x1f))), __func__, "binding loop detected");
        this->bindingGuard_[index >> 5] |= (1U << (index & 0x1f));
#endif
        this->ui_->writeIntroCheck->setEnabled(this->evalWriteIntroCheckEnabled());
#ifndef QT_NO_DEBUG
        this->bindingGuard_[index >> 5] &= ~(1U << (index & 0x1f));
#endif
    }

    bool evalWriteIntroCheckEnabled()
    {
        bool a0;
        bool a1;
    b0:
        a0 = this->ui_->bundleRadio->isChecked();
        a1 = !a0;
        return a1;
    }

    void setupIntroBoxVisible()
    {
        QObject::connect(this->ui_->writeIntroCheck, QOverload<bool>::of(&QAbstractButton::toggled), this->root_, [this]() { this->updateIntroBoxVisible(); });
        QObject::connect(this->ui_->bundleRadio, QOverload<bool>::of(&QAbstractButton::toggled), this->root_, [this]() { this->updateIntroBoxVisible(); });
    }

    void updateIntroBoxVisible()
    {
#ifndef QT_NO_DEBUG
        constexpr unsigned index = static_cast<unsigned>(BindingIndex::IntroBoxVisible);
        Q_ASSERT_X(!(this->bindingGuard_[index >> 5] & (1U << (index & 0x1f))), __func__, "binding loop detected");
        this->bindingGuard_[index >> 5] |= (1U << (index & 0x1f));
#endif
        this->ui_->introBox->setVisible(this->evalIntroBoxVisible());
#ifndef QT_NO_DEBUG
        this->bindingGuard_[index >> 5] &= ~(1U << (index & 0x1f));
#endif
    }

    bool evalIntroBoxVisible()
    {
        bool a0;
        bool a1;
        bool a2;
    b0:
        a0 = this->ui_->writeIntroCheck->isChecked();
        a1 = this->ui_->bundleRadio->isChecked();
        a2 = a0 || a1;
        return a2;
    }

    void setupBundleRadioClicked()
    {
        QObject::connect(this->ui_->bundleRadio, QOverload<bool>::of(&QAbstractButton::clicked), this->root_, [this]() { this->onBundleRadioClicked(); });
    }

    void onBundleRadioClicked()
    {
    b0:
        this->ui_->writeIntroCheck->setChecked(true);
        return;
    }

    void setupWriteIntroCheckClicked()
    {
        QObject::connect(this->ui_->writeIntroCheck, QOverload<bool>::of(&QAbstractButton::clicked), this->root_, [this]() { this->onWriteIntroCheckClicked(); });
    }

    void onWriteIntroCheckClicked()
    {
        bool a0;
        bool a1;
    b0:
        a0 = this->ui_->writeIntroCheck->isChecked();
        a1 = !a0;
        if (a1)
            goto b1;
        else
            goto b3;
    b1:
        return;
    b2:
        goto b3;
    b3:
        this->ui_->subjectEdit->setFocus();
        this->ui_->subjectEdit->selectAll();
        return;
    }

    struct PropertyObserver
    {
        QMetaObject::Connection connection;
        QObject *object = nullptr;
    };

    QDialog *const root_;
    Ui::HgEmailDialog *const ui_;
#ifndef QT_NO_DEBUG
    quint32 bindingGuard_[1] = {0};
#endif

};
} // namespace UiSupport

