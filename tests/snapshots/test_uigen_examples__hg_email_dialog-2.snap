---
source: tests/test_uigen_examples.rs
expression: ui_support_h
---
#pragma once
#include "ui_hgemaildialog.h"

namespace UiSupport {
class HgEmailDialog
{
public:
    HgEmailDialog(QDialog *root, Ui::HgEmailDialog *ui): root_(root), ui_(ui) {}

    void setup()
    {
        this->setupWriteIntroCheckEnabled();
        this->setupIntroBoxVisible();
        this->updateWriteIntroCheckEnabled();
        this->updateIntroBoxVisible();
    }

private:
    void setupWriteIntroCheckEnabled()
    {
        QObject::connect(this->ui_->bundleRadio, &QAbstractButton::toggled, root_, [this]() { this->updateWriteIntroCheckEnabled(); });
    }

    void updateWriteIntroCheckEnabled()
    {
        this->ui_->writeIntroCheck->setEnabled(this->evalWriteIntroCheckEnabled());
    }

    bool evalWriteIntroCheckEnabled() const
    {
        bool a0;
        bool a1;
    b0:
        a0 = this->ui_->bundleRadio->isChecked();
        a1 = !a0;
        return a1;
    }

    void setupIntroBoxVisible()
    {
        QObject::connect(this->ui_->writeIntroCheck, &QAbstractButton::toggled, root_, [this]() { this->updateIntroBoxVisible(); });
        QObject::connect(this->ui_->bundleRadio, &QAbstractButton::toggled, root_, [this]() { this->updateIntroBoxVisible(); });
    }

    void updateIntroBoxVisible()
    {
        this->ui_->introBox->setVisible(this->evalIntroBoxVisible());
    }

    bool evalIntroBoxVisible() const
    {
        bool a0;
        bool a1;
        bool a2;
    b0:
        a0 = this->ui_->writeIntroCheck->isChecked();
        a1 = this->ui_->bundleRadio->isChecked();
        a2 = a0 || a1;
        return a2;
    }

    QDialog *const root_;
    Ui::HgEmailDialog *const ui_;

};
} // namespace UiSupport

