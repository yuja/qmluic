---
source: tests/test_uigen_examples.rs
expression: ui_support_h
---
#pragma once
#include "ui_settingsdialog.h"

namespace UiSupport {
class SettingsDialog
{
public:
    SettingsDialog(QDialog *root, Ui::SettingsDialog *ui): root_(root), ui_(ui) {}

    void setup()
    {
        this->setupLabel6Alignment();
        this->setupLabel6Font();
        this->setupLabel7Font();
        this->setupButtonBoxAccepted();
        this->setupButtonBoxRejected();
        this->updateLabel6Alignment();
        this->updateLabel6Font();
        this->updateLabel7Font();
    }

private:
    enum class BindingIndex : unsigned {
        Label6Alignment,
        Label6Font,
        Label7Font,
    };

    void setupLabel6Alignment()
    {
        QObject::connect(this->ui_->textAlignmentEdit, QOverload<int>::of(&QComboBox::currentIndexChanged), this->root_, [this]() { this->updateLabel6Alignment(); });
    }

    void updateLabel6Alignment()
    {
#ifndef QT_NO_DEBUG
        constexpr unsigned index = static_cast<unsigned>(BindingIndex::Label6Alignment);
        Q_ASSERT_X(!(this->bindingGuard_[index >> 5] & (1U << (index & 0x1f))), __func__, "binding loop detected");
        this->bindingGuard_[index >> 5] |= (1U << (index & 0x1f));
#endif
        this->ui_->label6->setAlignment(this->evalLabel6Alignment());
#ifndef QT_NO_DEBUG
        this->bindingGuard_[index >> 5] &= ~(1U << (index & 0x1f));
#endif
    }

    Qt::Alignment evalLabel6Alignment()
    {
        int a0;
        bool a1;
        bool a2;
        bool a3;
        bool a4;
    b0:
        a0 = this->ui_->textAlignmentEdit->currentIndex();
        a1 = a0 == 0;
        if (a1)
            goto b6;
        else
            goto b1;
    b1:
        a2 = a0 == 1;
        if (a2)
            goto b8;
        else
            goto b2;
    b2:
        a3 = a0 == 2;
        if (a3)
            goto b10;
        else
            goto b3;
    b3:
        a4 = a0 == 3;
        if (a4)
            goto b12;
        else
            goto b14;
    b4:
        goto b6;
    b5:
        Q_UNREACHABLE();
    b6:
        return Qt::AlignLeft;
    b7:
        goto b8;
    b8:
        return Qt::AlignRight;
    b9:
        goto b10;
    b10:
        return Qt::AlignHCenter;
    b11:
        goto b12;
    b12:
        return Qt::AlignJustify;
    b13:
        goto b14;
    b14:
        return Qt::AlignLeft;
    b15:
        Q_UNREACHABLE();
    b16:
        Q_UNREACHABLE();
    }

    void setupLabel6Font()
    {
        QObject::connect(this->ui_->textFontRadio, QOverload<bool>::of(&QAbstractButton::toggled), this->root_, [this]() { this->updateLabel6Font(); });
    }

    void updateLabel6Font()
    {
#ifndef QT_NO_DEBUG
        constexpr unsigned index = static_cast<unsigned>(BindingIndex::Label6Font);
        Q_ASSERT_X(!(this->bindingGuard_[index >> 5] & (1U << (index & 0x1f))), __func__, "binding loop detected");
        this->bindingGuard_[index >> 5] |= (1U << (index & 0x1f));
#endif
        this->ui_->label6->setFont(this->evalLabel6Font());
#ifndef QT_NO_DEBUG
        this->bindingGuard_[index >> 5] &= ~(1U << (index & 0x1f));
#endif
    }

    QFont evalLabel6Font()
    {
        auto &observed = observedLabel6Font_;
        const auto update = [this]() { this->updateLabel6Font(); };
        bool a0;
        QFontComboBox* a1;
        QFontComboBox* a2;
        QList<QSpinBox*> a3;
        bool a4;
        int a5;
        QSpinBox* a6;
        QSpinBox* a7;
        QFont a8;
        QFont a9;
        int a10;
        int a11;
    b0:
        a0 = this->ui_->textFontRadio->isChecked();
        if (a0)
            goto b1;
        else
            goto b2;
    b1:
        a1 = this->ui_->textFontFamilyEdit;
        goto b3;
    b2:
        a1 = this->ui_->altFontFamilyEdit;
        goto b3;
    b3:
        a2 = a1;
        a3 = QList<QSpinBox*>{this->ui_->altFontSizeEdit, this->ui_->textFontSizeEdit};
        a4 = this->ui_->textFontRadio->isChecked();
        a5 = static_cast<int>(a4);
        a6 = a3.at(a5);
        a7 = a6;
        if (Q_UNLIKELY(!observed[0].connection || observed[0].object != a2)) {
            QObject::disconnect(observed[0].connection);
            if (a2) {
                observed[0].connection = QObject::connect(a2, QOverload<const QFont &>::of(&QFontComboBox::currentFontChanged), this->root_, update);
            }
            observed[0].object = a2;
        }
        a8 = a2->currentFont();
        a9 = a8;
        if (Q_UNLIKELY(!observed[1].connection || observed[1].object != a7)) {
            QObject::disconnect(observed[1].connection);
            if (a7) {
                observed[1].connection = QObject::connect(a7, QOverload<int>::of(&QSpinBox::valueChanged), this->root_, update);
            }
            observed[1].object = a7;
        }
        a10 = a7->value();
        a11 = qMax(a10, 1);
        a9.setPointSize(a11);
        return a9;
    b4:
        Q_UNREACHABLE();
    }

    void setupLabel7Font()
    {
        QObject::connect(this->ui_->textFontRadio, QOverload<bool>::of(&QAbstractButton::toggled), this->root_, [this]() { this->updateLabel7Font(); });
    }

    void updateLabel7Font()
    {
#ifndef QT_NO_DEBUG
        constexpr unsigned index = static_cast<unsigned>(BindingIndex::Label7Font);
        Q_ASSERT_X(!(this->bindingGuard_[index >> 5] & (1U << (index & 0x1f))), __func__, "binding loop detected");
        this->bindingGuard_[index >> 5] |= (1U << (index & 0x1f));
#endif
        this->ui_->label7->setFont(this->evalLabel7Font(this->ui_->label7->font()));
#ifndef QT_NO_DEBUG
        this->bindingGuard_[index >> 5] &= ~(1U << (index & 0x1f));
#endif
    }

    QFont evalLabel7Font(QFont a)
    {
        a.setFamily(this->evalLabel7FontFamily());
        a.setPointSize(this->evalLabel7FontPointSize());
        return a;
    }

    QString evalLabel7FontFamily()
    {
        auto &observed = observedLabel7FontFamily_;
        const auto update = [this]() { this->updateLabel7Font(); };
        bool a0;
        QFontComboBox* a1;
        QFont a2;
        QString a3;
    b0:
        a0 = this->ui_->textFontRadio->isChecked();
        if (a0)
            goto b1;
        else
            goto b2;
    b1:
        a1 = this->ui_->textFontFamilyEdit;
        goto b3;
    b2:
        a1 = this->ui_->altFontFamilyEdit;
        goto b3;
    b3:
        if (Q_UNLIKELY(!observed[0].connection || observed[0].object != a1)) {
            QObject::disconnect(observed[0].connection);
            if (a1) {
                observed[0].connection = QObject::connect(a1, QOverload<const QFont &>::of(&QFontComboBox::currentFontChanged), this->root_, update);
            }
            observed[0].object = a1;
        }
        a2 = a1->currentFont();
        a3 = a2.family();
        return a3;
    }

    int evalLabel7FontPointSize()
    {
        auto &observed = observedLabel7FontPointSize_;
        const auto update = [this]() { this->updateLabel7Font(); };
        bool a0;
        QSpinBox* a1;
        int a2;
        int a3;
        int a4;
    b0:
        a0 = this->ui_->textFontRadio->isChecked();
        if (a0)
            goto b1;
        else
            goto b2;
    b1:
        a1 = this->ui_->textFontSizeEdit;
        goto b3;
    b2:
        a1 = this->ui_->altFontSizeEdit;
        goto b3;
    b3:
        if (Q_UNLIKELY(!observed[0].connection || observed[0].object != a1)) {
            QObject::disconnect(observed[0].connection);
            if (a1) {
                observed[0].connection = QObject::connect(a1, QOverload<int>::of(&QSpinBox::valueChanged), this->root_, update);
            }
            observed[0].object = a1;
        }
        a2 = a1->value();
        a3 = a2;
        a4 = qMax(a3, 1);
        return a4;
    }

    void setupButtonBoxAccepted()
    {
        QObject::connect(this->ui_->buttonBox, QOverload<>::of(&QDialogButtonBox::accepted), this->root_, [this]() { this->onButtonBoxAccepted(); });
    }

    void onButtonBoxAccepted()
    {
    b0:
        this->root_->accept();
        return;
    }

    void setupButtonBoxRejected()
    {
        QObject::connect(this->ui_->buttonBox, QOverload<>::of(&QDialogButtonBox::rejected), this->root_, [this]() { this->onButtonBoxRejected(); });
    }

    void onButtonBoxRejected()
    {
    b0:
        this->root_->reject();
        return;
    }

    struct PropertyObserver
    {
        QMetaObject::Connection connection;
        QObject *object = nullptr;
    };

    QDialog *const root_;
    Ui::SettingsDialog *const ui_;
    PropertyObserver observedLabel6Font_[2];
    PropertyObserver observedLabel7FontFamily_[1];
    PropertyObserver observedLabel7FontPointSize_[1];
#ifndef QT_NO_DEBUG
    quint32 bindingGuard_[1] = {0};
#endif

};
} // namespace UiSupport

