name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        rust_toolchain: [stable, "1.59"]
        exclude:
          - os: windows-latest
            rust_toolchain: "1.59"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust ${{ matrix.rust_toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          override: true
      - name: Build
        run: cargo build --workspace --verbose
      - name: Run tests
        run: cargo test --workspace --verbose

  build-with-qt:
    strategy:
      matrix:
        qt_version: [5, 6]

    # ubuntu-latest is not the latest
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install build dependencies
        run: sudo apt install build-essential cmake ninja-build libegl-dev
      - if: ${{ matrix.qt_version == 5 }}
        name: Install Qt 5
        run: sudo apt install qtbase5-dev qttools5-dev
      - if: ${{ matrix.qt_version == 6 }}
        name: Install Qt 6
        run: |
          sudo apt install qt6-base-dev qt6-tools-dev
          sudo ln -s /usr/bin/qmake6 /usr/local/bin/qmake
      - name: Show detected Qt version
        run: make help
      - name: Build release binaries
        run: make release
      - name: Install release binaries
        run: sudo make install
      - name: Build examples
        run: make build-examples

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install clippy
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
          override: true
      # TODO: should we switch to actions-rs/clippy-check?
      - name: Lint with clippy
        run: cargo clippy -- -Dwarnings

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true
      - name: Check format
        run: cargo fmt --all --check

  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install clang-format
        run: sudo apt install clang-format
      - name: Check format
        run: find \( -name '*.cpp' -o -name '*.h' \) -print0 | xargs -0 clang-format -n -Werror --
